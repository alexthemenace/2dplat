{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.18.2","compilation":{"directory":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48],"program":"/Users/Kumar/.rustup/toolchains/nightly-2019-02-27-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","ogg","/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/ogg-0.7.0/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=6594d9bfbaad8fbe","-C","extra-filename=-6594d9bfbaad8fbe","--out-dir","/Users/Kumar/personal/workspace/rust/mayhem-galactica/target/rls/debug/deps","-L","dependency=/Users/Kumar/personal/workspace/rust/mayhem-galactica/target/rls/debug/deps","--extern","byteorder=/Users/Kumar/personal/workspace/rust/mayhem-galactica/target/rls/debug/deps/libbyteorder-6744f278cffd5578.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/Kumar/.rustup/toolchains/nightly-2019-02-27-x86_64-apple-darwin"],"output":[47,85,115,101,114,115,47,75,117,109,97,114,47,112,101,114,115,111,110,97,108,47,119,111,114,107,115,112,97,99,101,47,114,117,115,116,47,109,97,121,104,101,109,45,103,97,108,97,99,116,105,99,97,47,116,97,114,103,101,116,47,114,108,115,47,100,101,98,117,103,47,100,101,112,115,47,108,105,98,111,103,103,45,54,53,57,52,100,57,98,102,98,97,97,100,56,102,98,101,46,114,109,101,116,97]},"prelude":{"crate_id":{"name":"ogg","disambiguator":[16073148601722183936,11504792666233045654]},"crate_root":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/ogg-0.7.0/src","external_crates":[{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/ogg-0.7.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[17365010580081952725,18206160307474953630]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/ogg-0.7.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[6760693024494354245,14002820984158080208]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/ogg-0.7.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[199464317358532175,14697293645914925506]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/ogg-0.7.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13558819658400235840,6800895293433658904]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/ogg-0.7.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[18425220944332119967,14239145101900690943]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/ogg-0.7.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10854247164472963508,11478657302719725741]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/ogg-0.7.0/src/lib.rs","num":7,"id":{"name":"rustc_demangle","disambiguator":[4168194895173621532,15234647754953002462]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/ogg-0.7.0/src/lib.rs","num":8,"id":{"name":"unwind","disambiguator":[12306654840912142307,10869972980572175885]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/ogg-0.7.0/src/lib.rs","num":9,"id":{"name":"backtrace_sys","disambiguator":[1531625639640313062,14514900902579754273]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/ogg-0.7.0/src/lib.rs","num":10,"id":{"name":"panic_unwind","disambiguator":[13209889598193010227,616765238597587583]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/ogg-0.7.0/src/lib.rs","num":11,"id":{"name":"byteorder","disambiguator":[5633574704660589010,1124758284593715500]}}],"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":259,"byte_end":3078,"line_start":9,"line_end":95,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":208},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":716,"byte_end":728,"line_start":35,"line_end":35,"column_start":19,"column_end":31},"alias_span":null,"name":"PacketWriter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":268},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":730,"byte_end":748,"line_start":35,"line_end":35,"column_start":33,"column_end":51},"alias_span":null,"name":"PacketWriteEndInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":144},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":769,"byte_end":781,"line_start":36,"line_end":36,"column_start":19,"column_end":31},"alias_span":null,"name":"PacketReader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":254},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":783,"byte_end":795,"line_start":36,"line_end":36,"column_start":33,"column_end":45},"alias_span":null,"name":"OggReadError","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":259,"byte_end":3078,"line_start":9,"line_end":95,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/ogg-0.7.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":14},{"krate":0,"index":180},{"krate":0,"index":226},{"krate":0,"index":232},{"krate":0,"index":238},{"krate":0,"index":240}],"decl_id":null,"docs":"Ogg container decoder and encoder","sig":null,"attributes":[{"value":"forbid(unsafe_code)","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":259,"byte_end":282,"line_start":9,"line_end":9,"column_start":1,"column_end":24}}]},{"kind":"Mod","id":{"krate":0,"index":14},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,114,101,97,100,105,110,103,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"reading","qualname":"::reading","value":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/ogg-0.7.0/src/reading.rs","parent":null,"children":[{"krate":0,"index":16},{"krate":0,"index":18},{"krate":0,"index":20},{"krate":0,"index":34},{"krate":0,"index":40},{"krate":0,"index":42},{"krate":0,"index":44},{"krate":0,"index":52},{"krate":0,"index":54},{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":254},{"krate":0,"index":256},{"krate":0,"index":60},{"krate":0,"index":66},{"krate":0,"index":70},{"krate":0,"index":74},{"krate":0,"index":76},{"krate":0,"index":78},{"krate":0,"index":84},{"krate":0,"index":86},{"krate":0,"index":94},{"krate":0,"index":96},{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":260},{"krate":0,"index":264},{"krate":0,"index":262},{"krate":0,"index":116},{"krate":0,"index":118},{"krate":0,"index":120},{"krate":0,"index":144},{"krate":0,"index":146},{"krate":0,"index":176}],"decl_id":null,"docs":"Reading logic\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":159},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,114,101,97,100,105,110,103,46,114,115],"byte_start":8735,"byte_end":8756,"line_start":30,"line_end":30,"column_start":2,"column_end":23},"name":"NoCapturePatternFound","qualname":"::reading::OggReadError::NoCapturePatternFound","value":"OggReadError::NoCapturePatternFound","parent":{"krate":0,"index":254},"children":[],"decl_id":null,"docs":" The capture pattern for a new page was not found\n where one was expected.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":161},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,114,101,97,100,105,110,103,46,114,115],"byte_start":8832,"byte_end":8854,"line_start":33,"line_end":33,"column_start":2,"column_end":24},"name":"InvalidStreamStructVer","qualname":"::reading::OggReadError::InvalidStreamStructVer","value":"OggReadError::InvalidStreamStructVer(u8)","parent":{"krate":0,"index":254},"children":[],"decl_id":null,"docs":" Invalid stream structure version, with the given one\n attached.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":165},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,114,101,97,100,105,110,103,46,114,115],"byte_start":8928,"byte_end":8940,"line_start":35,"line_end":35,"column_start":2,"column_end":14},"name":"HashMismatch","qualname":"::reading::OggReadError::HashMismatch","value":"OggReadError::HashMismatch(u32, u32)","parent":{"krate":0,"index":254},"children":[],"decl_id":null,"docs":" Mismatch of the hash value with (expected, calculated) value.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":171},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,114,101,97,100,105,110,103,46,114,115],"byte_start":8977,"byte_end":8986,"line_start":37,"line_end":37,"column_start":2,"column_end":11},"name":"ReadError","qualname":"::reading::OggReadError::ReadError","value":"OggReadError::ReadError(io::Error)","parent":{"krate":0,"index":254},"children":[],"decl_id":null,"docs":" I/O error occured.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":175},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,114,101,97,100,105,110,103,46,114,115],"byte_start":9055,"byte_end":9066,"line_start":39,"line_end":39,"column_start":2,"column_end":13},"name":"InvalidData","qualname":"::reading::OggReadError::InvalidData","value":"OggReadError::InvalidData","parent":{"krate":0,"index":254},"children":[],"decl_id":null,"docs":" Some constraint required by the spec was not met.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":254},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,114,101,97,100,105,110,103,46,114,115],"byte_start":8636,"byte_end":8648,"line_start":27,"line_end":27,"column_start":10,"column_end":22},"name":"OggReadError","qualname":"::reading::OggReadError","value":"OggReadError::{NoCapturePatternFound, InvalidStreamStructVer, HashMismatch, ReadError, InvalidData}","parent":null,"children":[{"krate":0,"index":159},{"krate":0,"index":161},{"krate":0,"index":165},{"krate":0,"index":171},{"krate":0,"index":175}],"decl_id":null,"docs":" Error that can be raised when decoding an Ogg transport.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":84},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,114,101,97,100,105,110,103,46,114,115],"byte_start":12049,"byte_end":12056,"line_start":130,"line_end":130,"column_start":12,"column_end":19},"name":"OggPage","qualname":"::reading::OggPage","value":"","parent":null,"children":[],"decl_id":null,"docs":" Contains a fully parsed OGG page.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":94},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,114,101,97,100,105,110,103,46,114,115],"byte_start":13040,"byte_end":13050,"line_start":160,"line_end":160,"column_start":12,"column_end":22},"name":"PageParser","qualname":"::reading::PageParser","value":"PageParser {  }","parent":null,"children":[{"krate":0,"index":45},{"krate":0,"index":47},{"krate":0,"index":49},{"krate":0,"index":51},{"krate":0,"index":55},{"krate":0,"index":57}],"decl_id":null,"docs":"Helper struct for parsing pages","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,114,101,97,100,105,110,103,46,114,115],"byte_start":14111,"byte_end":14114,"line_start":187,"line_end":187,"column_start":9,"column_end":12},"name":"new","qualname":"<PageParser>::new","value":"fn (header_buf: [u8; 27]) -> Result<(PageParser, usize), OggReadError>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Page parser","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,114,101,97,100,105,110,103,46,114,115],"byte_start":15496,"byte_end":15510,"line_start":226,"line_end":226,"column_start":9,"column_end":23},"name":"parse_segments","qualname":"<PageParser>::parse_segments","value":"fn (&mut self, segments_buf: Vec<u8>) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Parses the segments buffer, and returns the requested size\n of the packets content array.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,114,101,97,100,105,110,103,46,114,115],"byte_start":16902,"byte_end":16919,"line_start":268,"line_end":268,"column_start":9,"column_end":26},"name":"parse_packet_data","qualname":"<PageParser>::parse_packet_data","value":"fn (mut self, packet_data: Vec<u8>) -> Result<OggPage, OggReadError>","parent":null,"children":[],"decl_id":null,"docs":" Parses the packets data and verifies the checksum.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":104},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,114,101,97,100,105,110,103,46,114,115],"byte_start":18535,"byte_end":18551,"line_start":315,"line_end":315,"column_start":12,"column_end":28},"name":"BasePacketReader","qualname":"::reading::BasePacketReader","value":"BasePacketReader {  }","parent":null,"children":[{"krate":0,"index":61},{"krate":0,"index":63},{"krate":0,"index":65}],"decl_id":null,"docs":"Low level struct for reading from an Ogg stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,114,101,97,100,105,110,103,46,114,115],"byte_start":19557,"byte_end":19560,"line_start":338,"line_end":338,"column_start":9,"column_end":12},"name":"new","qualname":"<BasePacketReader>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new blank `BasePacketReader`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,114,101,97,100,105,110,103,46,114,115],"byte_start":19917,"byte_end":19928,"line_start":347,"line_end":347,"column_start":9,"column_end":20},"name":"read_packet","qualname":"<BasePacketReader>::read_packet","value":"fn (&mut self) -> Option<Packet>","parent":null,"children":[],"decl_id":null,"docs":" Extracts a packet from the cache, if the cache contains valid packet data,\n otherwise it returns `None`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,114,101,97,100,105,110,103,46,114,115],"byte_start":22607,"byte_end":22616,"line_start":418,"line_end":418,"column_start":9,"column_end":18},"name":"push_page","qualname":"<BasePacketReader>::push_page","value":"fn (&mut self, page: OggPage) -> Result<(), OggReadError>","parent":null,"children":[],"decl_id":null,"docs":" Pushes a given Ogg page, updating the internal structures\n with its contents.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,114,101,97,100,105,110,103,46,114,115],"byte_start":26125,"byte_end":26142,"line_start":518,"line_end":518,"column_start":9,"column_end":26},"name":"update_after_seek","qualname":"<BasePacketReader>::update_after_seek","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reset the internal state after a seek","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":144},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,114,101,97,100,105,110,103,46,114,115],"byte_start":31832,"byte_end":31844,"line_start":709,"line_end":709,"column_start":12,"column_end":24},"name":"PacketReader","qualname":"::reading::PacketReader","value":"PacketReader {  }","parent":null,"children":[{"krate":0,"index":99},{"krate":0,"index":101}],"decl_id":null,"docs":"Reader for packets from an Ogg stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,114,101,97,100,105,110,103,46,114,115],"byte_start":32030,"byte_end":32033,"line_start":717,"line_end":717,"column_start":9,"column_end":12},"name":"new","qualname":"<PacketReader<T>>::new","value":"fn (rdr: T) -> PacketReader<T>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `PacketReader` with a given `Read`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,114,101,97,100,105,110,103,46,114,115],"byte_start":32205,"byte_end":32215,"line_start":721,"line_end":721,"column_start":9,"column_end":19},"name":"into_inner","qualname":"<PacketReader<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the wrapped reader, consuming the `PacketReader`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,114,101,97,100,105,110,103,46,114,115],"byte_start":32364,"byte_end":32375,"line_start":727,"line_end":727,"column_start":9,"column_end":20},"name":"read_packet","qualname":"<PacketReader<T>>::read_packet","value":"fn (&mut self) -> Result<Option<Packet>, OggReadError>","parent":null,"children":[],"decl_id":null,"docs":" Reads a packet, and returns it on success.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,114,101,97,100,105,110,103,46,114,115],"byte_start":33103,"byte_end":33123,"line_start":747,"line_end":747,"column_start":9,"column_end":29},"name":"read_packet_expected","qualname":"<PacketReader<T>>::read_packet_expected","value":"fn (&mut self) -> Result<Packet, OggReadError>","parent":null,"children":[],"decl_id":null,"docs":" Reads a packet, and returns it on success.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,114,101,97,100,105,110,103,46,114,115],"byte_start":35381,"byte_end":35391,"line_start":807,"line_end":807,"column_start":9,"column_end":19},"name":"seek_bytes","qualname":"<PacketReader<T>>::seek_bytes","value":"fn (&mut self, pos: SeekFrom) -> Result<u64, Error>","parent":null,"children":[],"decl_id":null,"docs":" Seeks the underlying reader","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,114,101,97,100,105,110,103,46,114,115],"byte_start":36376,"byte_end":36386,"line_start":830,"line_end":830,"column_start":9,"column_end":19},"name":"seek_absgp","qualname":"<PacketReader<T>>::seek_absgp","value":"fn (&mut self, stream_serial: Option<u32>, pos_goal: u64) -> Result<bool, OggReadError>","parent":null,"children":[],"decl_id":null,"docs":" Seeks to absolute granule pos","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,114,101,97,100,105,110,103,46,114,115],"byte_start":41687,"byte_end":41708,"line_start":996,"line_end":996,"column_start":9,"column_end":30},"name":"delete_unread_packets","qualname":"<PacketReader<T>>::delete_unread_packets","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Resets the internal state by deleting all\n unread packets.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":180},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,119,114,105,116,105,110,103,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"writing","qualname":"::writing","value":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/ogg-0.7.0/src/writing.rs","parent":null,"children":[{"krate":0,"index":182},{"krate":0,"index":184},{"krate":0,"index":196},{"krate":0,"index":202},{"krate":0,"index":204},{"krate":0,"index":206},{"krate":0,"index":208},{"krate":0,"index":210},{"krate":0,"index":268},{"krate":0,"index":276},{"krate":0,"index":272},{"krate":0,"index":270},{"krate":0,"index":212},{"krate":0,"index":222}],"decl_id":null,"docs":"Writing logic\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":208},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,119,114,105,116,105,110,103,46,114,115],"byte_start":46111,"byte_end":46123,"line_start":32,"line_end":32,"column_start":12,"column_end":24},"name":"PacketWriter","qualname":"::writing::PacketWriter","value":"PacketWriter {  }","parent":null,"children":[{"krate":0,"index":119},{"krate":0,"index":121}],"decl_id":null,"docs":"Writer for packets into an Ogg stream.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":189},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,119,114,105,116,105,110,103,46,114,115],"byte_start":47733,"byte_end":47745,"line_start":85,"line_end":85,"column_start":2,"column_end":14},"name":"NormalPacket","qualname":"::writing::PacketWriteEndInfo::NormalPacket","value":"PacketWriteEndInfo::NormalPacket","parent":{"krate":0,"index":268},"children":[],"decl_id":null,"docs":" No ends here, just a normal packet\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":191},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,119,114,105,116,105,110,103,46,114,115],"byte_start":47780,"byte_end":47787,"line_start":87,"line_end":87,"column_start":2,"column_end":9},"name":"EndPage","qualname":"::writing::PacketWriteEndInfo::EndPage","value":"PacketWriteEndInfo::EndPage","parent":{"krate":0,"index":268},"children":[],"decl_id":null,"docs":" Force-end the current page\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":193},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,119,114,105,116,105,110,103,46,114,115],"byte_start":47825,"byte_end":47834,"line_start":89,"line_end":89,"column_start":2,"column_end":11},"name":"EndStream","qualname":"::writing::PacketWriteEndInfo::EndStream","value":"PacketWriteEndInfo::EndStream","parent":{"krate":0,"index":268},"children":[],"decl_id":null,"docs":" End the whole logical stream.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":268},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,119,114,105,116,105,110,103,46,114,115],"byte_start":47671,"byte_end":47689,"line_start":83,"line_end":83,"column_start":10,"column_end":28},"name":"PacketWriteEndInfo","qualname":"::writing::PacketWriteEndInfo","value":"PacketWriteEndInfo::{NormalPacket, EndPage, EndStream}","parent":null,"children":[{"krate":0,"index":189},{"krate":0,"index":191},{"krate":0,"index":193}],"decl_id":null,"docs":" Specifies whether to end something with the write of the packet.","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,119,114,105,116,105,110,103,46,114,115],"byte_start":47662,"byte_end":47837,"line_start":83,"line_end":90,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,119,114,105,116,105,110,103,46,114,115],"byte_start":47885,"byte_end":47888,"line_start":93,"line_end":93,"column_start":9,"column_end":12},"name":"new","qualname":"<PacketWriter<T>>::new","value":"fn (wtr: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,119,114,105,116,105,110,103,46,114,115],"byte_start":47992,"byte_end":48002,"line_start":99,"line_end":99,"column_start":9,"column_end":19},"name":"into_inner","qualname":"<PacketWriter<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,119,114,105,116,105,110,103,46,114,115],"byte_start":48068,"byte_end":48080,"line_start":105,"line_end":105,"column_start":9,"column_end":21},"name":"write_packet","qualname":"<PacketWriter<T>>::write_packet","value":"fn (&mut self, pck_cont: Box<[u8]>, serial: u32, inf: PacketWriteEndInfo, absgp: u64) -> IoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Write a packet","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,119,114,105,116,105,110,103,46,114,115],"byte_start":53852,"byte_end":53868,"line_start":285,"line_end":285,"column_start":9,"column_end":25},"name":"get_current_offs","qualname":"<PacketWriter<T>>::get_current_offs","value":"fn (&mut self) -> Result<u64, io::Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":238},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1297,"byte_end":1303,"line_start":47,"line_end":47,"column_start":12,"column_end":18},"name":"Packet","qualname":"::Packet","value":"Packet { data }","parent":null,"children":[{"krate":0,"index":145},{"krate":0,"index":147},{"krate":0,"index":149},{"krate":0,"index":151},{"krate":0,"index":153},{"krate":0,"index":155},{"krate":0,"index":157}],"decl_id":null,"docs":"Ogg packet representation.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":145},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1347,"byte_end":1351,"line_start":49,"line_end":49,"column_start":6,"column_end":10},"name":"data","qualname":"::Packet::data","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":238},"children":[],"decl_id":null,"docs":" The data the `Packet` contains\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2256,"byte_end":2269,"line_start":70,"line_end":70,"column_start":9,"column_end":22},"name":"first_in_page","qualname":"<Packet>::first_in_page","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the packet is the first one starting in the page\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2391,"byte_end":2406,"line_start":74,"line_end":74,"column_start":9,"column_end":24},"name":"first_in_stream","qualname":"<Packet>::first_in_stream","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the packet is the first one of the entire stream\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2531,"byte_end":2543,"line_start":78,"line_end":78,"column_start":9,"column_end":21},"name":"last_in_page","qualname":"<Packet>::last_in_page","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the packet is the last one starting in the page\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2663,"byte_end":2677,"line_start":82,"line_end":82,"column_start":9,"column_end":23},"name":"last_in_stream","qualname":"<Packet>::last_in_stream","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the packet is the last one of the entire stream\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2888,"byte_end":2898,"line_start":88,"line_end":88,"column_start":9,"column_end":19},"name":"absgp_page","qualname":"<Packet>::absgp_page","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the absolute granule position of the page the packet ended in.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3023,"byte_end":3036,"line_start":92,"line_end":92,"column_start":9,"column_end":22},"name":"stream_serial","qualname":"<Packet>::stream_serial","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the serial number that uniquely identifies the logical bitstream.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,114,101,97,100,105,110,103,46,114,115],"byte_start":9093,"byte_end":9105,"line_start":42,"line_end":42,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":62},{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,114,101,97,100,105,110,103,46,114,115],"byte_start":9673,"byte_end":9685,"line_start":62,"line_end":62,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,114,101,97,100,105,110,103,46,114,115],"byte_start":9834,"byte_end":9846,"line_start":68,"line_end":68,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,114,101,97,100,105,110,103,46,114,115],"byte_start":11437,"byte_end":11445,"line_start":113,"line_end":113,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":80},{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,114,101,97,100,105,110,103,46,114,115],"byte_start":12076,"byte_end":12083,"line_start":132,"line_end":132,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":90},{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,114,101,97,100,105,110,103,46,114,115],"byte_start":13552,"byte_end":13562,"line_start":175,"line_end":175,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":100},{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,114,101,97,100,105,110,103,46,114,115],"byte_start":19364,"byte_end":19380,"line_start":333,"line_end":333,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":108},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,114,101,97,100,105,110,103,46,114,115],"byte_start":26749,"byte_end":26770,"line_start":551,"line_end":551,"column_start":6,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":122},{"krate":0,"index":124},{"krate":0,"index":126},{"krate":0,"index":134},{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,114,101,97,100,105,110,103,46,114,115],"byte_start":31946,"byte_end":31958,"line_start":715,"line_end":715,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":148},{"krate":0,"index":150},{"krate":0,"index":152},{"krate":0,"index":154},{"krate":0,"index":156},{"krate":0,"index":160},{"krate":0,"index":162},{"krate":0,"index":164},{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,119,114,105,116,105,110,103,46,114,115],"byte_start":47859,"byte_end":47871,"line_start":92,"line_end":92,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":214},{"krate":0,"index":216},{"krate":0,"index":218},{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,119,114,105,116,105,110,103,46,114,115],"byte_start":53826,"byte_end":53838,"line_start":284,"line_end":284,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2169,"byte_end":2175,"line_start":68,"line_end":68,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":242},{"krate":0,"index":244},{"krate":0,"index":246},{"krate":0,"index":248},{"krate":0,"index":250},{"krate":0,"index":252}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":671,"byte_end":678,"line_start":32,"line_end":32,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":14}},{"kind":"Mod","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":688,"byte_end":695,"line_start":33,"line_end":33,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":180}}],"macro_refs":[],"relations":[{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,114,101,97,100,105,110,103,46,114,115],"byte_start":9093,"byte_end":9105,"line_start":42,"line_end":42,"column_start":23,"column_end":35},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":254},"to":{"krate":1,"index":2470}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,114,101,97,100,105,110,103,46,114,115],"byte_start":9673,"byte_end":9685,"line_start":62,"line_end":62,"column_start":18,"column_end":30},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":254},"to":{"krate":2,"index":8430}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,114,101,97,100,105,110,103,46,114,115],"byte_start":9834,"byte_end":9846,"line_start":68,"line_end":68,"column_start":26,"column_end":38},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":254},"to":{"krate":2,"index":2656}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,114,101,97,100,105,110,103,46,114,115],"byte_start":11437,"byte_end":11445,"line_start":113,"line_end":113,"column_start":6,"column_end":14},"kind":{"variant":"Impl","fields":[3]},"from":{"krate":0,"index":76},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,114,101,97,100,105,110,103,46,114,115],"byte_start":12076,"byte_end":12083,"line_start":132,"line_end":132,"column_start":6,"column_end":13},"kind":{"variant":"Impl","fields":[4]},"from":{"krate":0,"index":84},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,114,101,97,100,105,110,103,46,114,115],"byte_start":13552,"byte_end":13562,"line_start":175,"line_end":175,"column_start":6,"column_end":16},"kind":{"variant":"Impl","fields":[5]},"from":{"krate":0,"index":94},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,114,101,97,100,105,110,103,46,114,115],"byte_start":19364,"byte_end":19380,"line_start":333,"line_end":333,"column_start":6,"column_end":22},"kind":{"variant":"Impl","fields":[6]},"from":{"krate":0,"index":104},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,114,101,97,100,105,110,103,46,114,115],"byte_start":26749,"byte_end":26770,"line_start":551,"line_end":551,"column_start":6,"column_end":27},"kind":{"variant":"Impl","fields":[7]},"from":{"krate":0,"index":118},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,114,101,97,100,105,110,103,46,114,115],"byte_start":31946,"byte_end":31958,"line_start":715,"line_end":715,"column_start":30,"column_end":42},"kind":{"variant":"Impl","fields":[8]},"from":{"krate":0,"index":144},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,119,114,105,116,105,110,103,46,114,115],"byte_start":47859,"byte_end":47871,"line_start":92,"line_end":92,"column_start":21,"column_end":33},"kind":{"variant":"Impl","fields":[9]},"from":{"krate":0,"index":208},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,119,114,105,116,105,110,103,46,114,115],"byte_start":53826,"byte_end":53838,"line_start":284,"line_end":284,"column_start":31,"column_end":43},"kind":{"variant":"Impl","fields":[10]},"from":{"krate":0,"index":208},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2169,"byte_end":2175,"line_start":68,"line_end":68,"column_start":6,"column_end":12},"kind":{"variant":"Impl","fields":[11]},"from":{"krate":0,"index":238},"to":{"krate":4294967295,"index":4294967295}}]}