{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.18.2","compilation":{"directory":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48],"program":"/Users/Kumar/.rustup/toolchains/nightly-2019-02-27-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","laminar","/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/laminar-0.1.0/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=4e463a0a8dc95959","-C","extra-filename=-4e463a0a8dc95959","--out-dir","/Users/Kumar/personal/workspace/rust/operation-proxima/target/rls/debug/deps","-L","dependency=/Users/Kumar/personal/workspace/rust/operation-proxima/target/rls/debug/deps","--extern","bincode=/Users/Kumar/personal/workspace/rust/operation-proxima/target/rls/debug/deps/libbincode-26f555a627941ad5.rmeta","--extern","byteorder=/Users/Kumar/personal/workspace/rust/operation-proxima/target/rls/debug/deps/libbyteorder-6744f278cffd5578.rmeta","--extern","crc=/Users/Kumar/personal/workspace/rust/operation-proxima/target/rls/debug/deps/libcrc-c8e9fd258f131ddb.rmeta","--extern","failure=/Users/Kumar/personal/workspace/rust/operation-proxima/target/rls/debug/deps/libfailure-13be27cd9170d376.rmeta","--extern","failure_derive=/Users/Kumar/personal/workspace/rust/operation-proxima/target/rls/debug/deps/libfailure_derive-920a81ed1aaea9b5.dylib","--extern","lazy_static=/Users/Kumar/personal/workspace/rust/operation-proxima/target/rls/debug/deps/liblazy_static-7973e47f2d50ebea.rmeta","--extern","log=/Users/Kumar/personal/workspace/rust/operation-proxima/target/rls/debug/deps/liblog-0a97a9085b40b399.rmeta","--extern","rand=/Users/Kumar/personal/workspace/rust/operation-proxima/target/rls/debug/deps/librand-6ba2572916db7e84.rmeta","--extern","serde=/Users/Kumar/personal/workspace/rust/operation-proxima/target/rls/debug/deps/libserde-48b0c7b6a5be35fd.rmeta","--extern","serde_derive=/Users/Kumar/personal/workspace/rust/operation-proxima/target/rls/debug/deps/libserde_derive-763575cdfe0af783.dylib","--cap-lints","allow","-L","native=/Users/Kumar/personal/workspace/rust/operation-proxima/target/rls/debug/build/backtrace-sys-207ecf06e1d8e63d/out","--error-format=json","--sysroot","/Users/Kumar/.rustup/toolchains/nightly-2019-02-27-x86_64-apple-darwin"],"output":[47,85,115,101,114,115,47,75,117,109,97,114,47,112,101,114,115,111,110,97,108,47,119,111,114,107,115,112,97,99,101,47,114,117,115,116,47,111,112,101,114,97,116,105,111,110,45,112,114,111,120,105,109,97,47,116,97,114,103,101,116,47,114,108,115,47,100,101,98,117,103,47,100,101,112,115,47,108,105,98,108,97,109,105,110,97,114,45,52,101,52,54,51,97,48,97,56,100,99,57,53,57,53,57,46,114,109,101,116,97]},"prelude":{"crate_id":{"name":"laminar","disambiguator":[10827261383222730122,990787999787223520]},"crate_root":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/laminar-0.1.0/src","external_crates":[{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/laminar-0.1.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[17365010580081952725,18206160307474953630]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/laminar-0.1.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[6760693024494354245,14002820984158080208]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/laminar-0.1.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[199464317358532175,14697293645914925506]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/laminar-0.1.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13558819658400235840,6800895293433658904]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/laminar-0.1.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[18425220944332119967,14239145101900690943]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/laminar-0.1.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10854247164472963508,11478657302719725741]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/laminar-0.1.0/src/lib.rs","num":7,"id":{"name":"rustc_demangle","disambiguator":[4168194895173621532,15234647754953002462]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/laminar-0.1.0/src/lib.rs","num":8,"id":{"name":"unwind","disambiguator":[12306654840912142307,10869972980572175885]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/laminar-0.1.0/src/lib.rs","num":9,"id":{"name":"backtrace_sys","disambiguator":[1531625639640313062,14514900902579754273]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/laminar-0.1.0/src/lib.rs","num":10,"id":{"name":"panic_unwind","disambiguator":[13209889598193010227,616765238597587583]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/laminar-0.1.0/src/lib.rs","num":11,"id":{"name":"bincode","disambiguator":[18409190179881467619,11598480607626108702]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/laminar-0.1.0/src/lib.rs","num":12,"id":{"name":"byteorder","disambiguator":[5633574704660589010,1124758284593715500]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/laminar-0.1.0/src/lib.rs","num":13,"id":{"name":"serde","disambiguator":[981439461511807069,17258384571547190005]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/laminar-0.1.0/src/lib.rs","num":14,"id":{"name":"serde_derive","disambiguator":[658740448506970560,9548512885115359140]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/laminar-0.1.0/src/lib.rs","num":15,"id":{"name":"crc","disambiguator":[12669301990244810948,18284701557612041739]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/laminar-0.1.0/src/lib.rs","num":16,"id":{"name":"failure","disambiguator":[5019123101385672946,10559419110661511078]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/laminar-0.1.0/src/lib.rs","num":17,"id":{"name":"failure_derive","disambiguator":[12079121176643720010,9328090109780009636]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/laminar-0.1.0/src/lib.rs","num":18,"id":{"name":"backtrace","disambiguator":[13889336313340010258,6247624535332333807]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/laminar-0.1.0/src/lib.rs","num":19,"id":{"name":"libc","disambiguator":[2703259349667130902,12042406638146325142]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/laminar-0.1.0/src/lib.rs","num":20,"id":{"name":"cfg_if","disambiguator":[8428017428351255032,13632600684367634806]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/laminar-0.1.0/src/lib.rs","num":21,"id":{"name":"rustc_demangle","disambiguator":[6360331683406002161,8427016446895447396]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/laminar-0.1.0/src/lib.rs","num":22,"id":{"name":"lazy_static","disambiguator":[5522065544787785916,13327173104205784552]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/laminar-0.1.0/src/lib.rs","num":23,"id":{"name":"log","disambiguator":[7181445017016618232,10688353778865861944]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/laminar-0.1.0/src/lib.rs","num":24,"id":{"name":"rand","disambiguator":[17862476655068260341,13924484820373126680]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/laminar-0.1.0/src/lib.rs","num":25,"id":{"name":"rand_core","disambiguator":[3135301718310305142,15090421581954786214]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/laminar-0.1.0/src/lib.rs","num":26,"id":{"name":"rand_core","disambiguator":[3597129564267641701,5899009172178551573]}}],"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":2459,"line_start":1,"line_end":76,"column_start":1,"column_end":31}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1130},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,105,110,102,114,97,115,116,114,117,99,116,117,114,101,47,109,111,100,46,114,115],"byte_start":4481,"byte_end":4495,"line_start":8,"line_end":8,"column_start":32,"column_end":46},"alias_span":null,"name":"DeliveryMethod","value":"","parent":{"krate":0,"index":40}},{"kind":"Use","ref_id":{"krate":0,"index":1212},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,112,97,99,107,101,116,47,109,111,100,46,114,115],"byte_start":29210,"byte_end":29216,"line_start":9,"line_end":9,"column_start":33,"column_end":39},"alias_span":null,"name":"Packet","value":"","parent":{"krate":0,"index":270}},{"kind":"Use","ref_id":{"krate":0,"index":1318},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,109,111,100,46,114,115],"byte_start":55952,"byte_end":55969,"line_start":5,"line_end":5,"column_start":29,"column_end":46},"alias_span":null,"name":"FragmentErrorKind","value":"","parent":{"krate":0,"index":646}},{"kind":"Use","ref_id":{"krate":0,"index":1284},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,109,111,100,46,114,115],"byte_start":55971,"byte_end":55986,"line_start":5,"line_end":5,"column_start":48,"column_end":63},"alias_span":null,"name":"PacketErrorKind","value":"","parent":{"krate":0,"index":646}},{"kind":"Use","ref_id":{"krate":0,"index":1374},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,109,111,100,46,114,115],"byte_start":56019,"byte_end":56031,"line_start":6,"line_end":6,"column_start":31,"column_end":43},"alias_span":null,"name":"NetworkError","value":"","parent":{"krate":0,"index":646}},{"kind":"Use","ref_id":{"krate":0,"index":1352},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,109,111,100,46,114,115],"byte_start":56033,"byte_end":56049,"line_start":6,"line_end":6,"column_start":45,"column_end":61},"alias_span":null,"name":"NetworkErrorKind","value":"","parent":{"krate":0,"index":646}},{"kind":"Use","ref_id":{"krate":0,"index":814},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,110,101,116,47,109,111,100,46,114,115],"byte_start":63743,"byte_end":63757,"line_start":10,"line_end":10,"column_start":28,"column_end":42},"alias_span":null,"name":"NetworkQuality","value":"","parent":{"krate":0,"index":742}},{"kind":"Use","ref_id":{"krate":0,"index":816},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,110,101,116,47,109,111,100,46,114,115],"byte_start":63759,"byte_end":63770,"line_start":10,"line_end":10,"column_start":44,"column_end":55},"alias_span":null,"name":"RttMeasurer","value":"","parent":{"krate":0,"index":742}},{"kind":"Use","ref_id":{"krate":0,"index":884},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,110,101,116,47,109,111,100,46,114,115],"byte_start":63772,"byte_end":63789,"line_start":10,"line_end":10,"column_start":57,"column_end":74},"alias_span":null,"name":"VirtualConnection","value":"","parent":{"krate":0,"index":742}},{"kind":"Use","ref_id":{"krate":0,"index":1380},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,110,101,116,47,109,111,100,46,114,115],"byte_start":63820,"byte_end":63832,"line_start":11,"line_end":11,"column_start":29,"column_end":41},"alias_span":null,"name":"ExternalAcks","value":"","parent":{"krate":0,"index":742}},{"kind":"Use","ref_id":{"krate":0,"index":1390},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,110,101,116,47,109,111,100,46,114,115],"byte_start":63859,"byte_end":63873,"line_start":12,"line_end":12,"column_start":26,"column_end":40},"alias_span":null,"name":"LocalAckRecord","value":"","parent":{"krate":0,"index":742}},{"kind":"Use","ref_id":{"krate":0,"index":1050},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,110,101,116,47,109,111,100,46,114,115],"byte_start":63894,"byte_end":63903,"line_start":13,"line_end":13,"column_start":20,"column_end":29},"alias_span":null,"name":"UdpSocket","value":"","parent":{"krate":0,"index":742}},{"kind":"Use","ref_id":{"krate":0,"index":38},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2315,"byte_end":2320,"line_start":72,"line_end":72,"column_start":17,"column_end":22},"alias_span":null,"name":"Event","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1130},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2346,"byte_end":2360,"line_start":73,"line_end":73,"column_start":25,"column_end":39},"alias_span":null,"name":"DeliveryMethod","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1212},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2378,"byte_end":2384,"line_start":74,"line_end":74,"column_start":17,"column_end":23},"alias_span":null,"name":"Packet","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":582},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2412,"byte_end":2427,"line_start":75,"line_end":75,"column_start":27,"column_end":42},"alias_span":null,"name":"ProtocolVersion","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1400},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2445,"byte_end":2458,"line_start":76,"line_end":76,"column_start":17,"column_end":30},"alias_span":null,"name":"NetworkConfig","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":2459,"line_start":1,"line_end":76,"column_start":1,"column_end":31},"name":"","qualname":"::","value":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/laminar-0.1.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":16},{"krate":0,"index":18},{"krate":0,"index":20},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":40},{"krate":0,"index":270},{"krate":0,"index":572},{"krate":0,"index":592},{"krate":0,"index":646},{"krate":0,"index":742},{"krate":0,"index":1100},{"krate":0,"index":1114},{"krate":0,"index":1116},{"krate":0,"index":1118},{"krate":0,"index":1120},{"krate":0,"index":1122}],"decl_id":null,"docs":" Laminar semi-reliable UDP protocol for multiplayer games. This library implements wraps around a UDP\n and provides light weight stream based interface that provides certain guarantees like reliability.","sig":null,"attributes":[{"value":"warn(missing_docs)","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1835,"byte_end":1857,"line_start":46,"line_end":46,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":19},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,118,101,110,116,115,46,114,115],"byte_start":2751,"byte_end":2760,"line_start":8,"line_end":8,"column_start":5,"column_end":14},"name":"Connected","qualname":"::events::Event::Connected","value":"Event::Connected(Arc<RwLock<VirtualConnection>>)","parent":{"krate":0,"index":38},"children":[],"decl_id":null,"docs":" A new client connects. Clients are uniquely identified by the ip:port combination at this layer.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":23},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,118,101,110,116,115,46,114,115],"byte_start":2963,"byte_end":2975,"line_start":11,"line_end":11,"column_start":5,"column_end":17},"name":"Disconnected","qualname":"::events::Event::Disconnected","value":"Event::Disconnected(Arc<RwLock<VirtualConnection>>)","parent":{"krate":0,"index":38},"children":[],"decl_id":null,"docs":" A client disconnects. This can be generated from the server-side intentionally disconnecting a client,\n or it could be from the client disconnecting.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":27},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,118,101,110,116,115,46,114,115],"byte_start":3123,"byte_end":3131,"line_start":13,"line_end":13,"column_start":5,"column_end":13},"name":"TimedOut","qualname":"::events::Event::TimedOut","value":"Event::TimedOut(Arc<RwLock<VirtualConnection>>)","parent":{"krate":0,"index":38},"children":[],"decl_id":null,"docs":" This is generated if the server has not seen traffic from a client for a configurable amount of time.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":31},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,118,101,110,116,115,46,114,115],"byte_start":3257,"byte_end":3270,"line_start":15,"line_end":15,"column_start":5,"column_end":18},"name":"QualityChange","qualname":"::events::Event::QualityChange","value":"Event::QualityChange { conn, from, to }","parent":{"krate":0,"index":38},"children":[],"decl_id":null,"docs":" This is generated when there is a change in the connection quality of a client.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":38},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,118,101,110,116,115,46,114,115],"byte_start":2634,"byte_end":2639,"line_start":6,"line_end":6,"column_start":10,"column_end":15},"name":"Event","qualname":"::events::Event","value":"Event::{Connected, Disconnected, TimedOut, QualityChange}","parent":null,"children":[{"krate":0,"index":19},{"krate":0,"index":23},{"krate":0,"index":27},{"krate":0,"index":31}],"decl_id":null,"docs":" Events that are generated in response to a change in state of the connected client\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":181},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,105,110,102,114,97,115,116,114,117,99,116,117,114,101,47,100,101,108,105,118,101,114,121,95,109,101,116,104,111,100,46,114,115],"byte_start":17825,"byte_end":17844,"line_start":38,"line_end":38,"column_start":5,"column_end":24},"name":"UnreliableUnordered","qualname":"::infrastructure::delivery_method::DeliveryMethod::UnreliableUnordered","value":"DeliveryMethod::UnreliableUnordered","parent":{"krate":0,"index":1130},"children":[],"decl_id":null,"docs":" Unreliable. Packets can be dropped, duplicated or arrive without order.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":183},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,105,110,102,114,97,115,116,114,117,99,116,117,114,101,47,100,101,108,105,118,101,114,121,95,109,101,116,104,111,100,46,114,115],"byte_start":18458,"byte_end":18475,"line_start":48,"line_end":48,"column_start":5,"column_end":22},"name":"UnreliableOrdered","qualname":"::infrastructure::delivery_method::DeliveryMethod::UnreliableOrdered","value":"DeliveryMethod::UnreliableOrdered","parent":{"krate":0,"index":1130},"children":[],"decl_id":null,"docs":" Unreliable. Packets can be dropped, duplicated or arrive with order.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":185},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,105,110,102,114,97,115,116,114,117,99,116,117,114,101,47,100,101,108,105,118,101,114,121,95,109,101,116,104,111,100,46,114,115],"byte_start":19086,"byte_end":19103,"line_start":59,"line_end":59,"column_start":5,"column_end":22},"name":"ReliableUnordered","qualname":"::infrastructure::delivery_method::DeliveryMethod::ReliableUnordered","value":"DeliveryMethod::ReliableUnordered","parent":{"krate":0,"index":1130},"children":[],"decl_id":null,"docs":" Reliable. All packets will be sent and received, but without order.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":187},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,105,110,102,114,97,115,116,114,117,99,116,117,114,101,47,100,101,108,105,118,101,114,121,95,109,101,116,104,111,100,46,114,115],"byte_start":19744,"byte_end":19759,"line_start":70,"line_end":70,"column_start":5,"column_end":20},"name":"ReliableOrdered","qualname":"::infrastructure::delivery_method::DeliveryMethod::ReliableOrdered","value":"DeliveryMethod::ReliableOrdered","parent":{"krate":0,"index":1130},"children":[],"decl_id":null,"docs":" Reliable. All packets will be sent and received, with order.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":189},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,105,110,102,114,97,115,116,114,117,99,116,117,114,101,47,100,101,108,105,118,101,114,121,95,109,101,116,104,111,100,46,114,115],"byte_start":20455,"byte_end":20464,"line_start":81,"line_end":81,"column_start":5,"column_end":14},"name":"Sequenced","qualname":"::infrastructure::delivery_method::DeliveryMethod::Sequenced","value":"DeliveryMethod::Sequenced","parent":{"krate":0,"index":1130},"children":[],"decl_id":null,"docs":" Unreliable. Packets can be dropped, but never duplicated and arrive in order.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1130},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,105,110,102,114,97,115,116,114,117,99,116,117,114,101,47,100,101,108,105,118,101,114,121,95,109,101,116,104,111,100,46,114,115],"byte_start":17230,"byte_end":17244,"line_start":28,"line_end":28,"column_start":10,"column_end":24},"name":"DeliveryMethod","qualname":"::infrastructure::delivery_method::DeliveryMethod","value":"DeliveryMethod::{UnreliableUnordered, UnreliableOrdered, ReliableUnordered, ReliableOrdered, Sequenced}","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":183},{"krate":0,"index":185},{"krate":0,"index":187},{"krate":0,"index":189}],"decl_id":null,"docs":" This enum defines on how an packet would be delivered to the other side.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,105,110,102,114,97,115,116,114,117,99,116,117,114,101,47,100,101,108,105,118,101,114,121,95,109,101,116,104,111,100,46,114,115],"byte_start":17221,"byte_end":20467,"line_start":28,"line_end":82,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,105,110,102,114,97,115,116,114,117,99,116,117,114,101,47,100,101,108,105,118,101,114,121,95,109,101,116,104,111,100,46,114,115],"byte_start":17221,"byte_end":20467,"line_start":28,"line_end":82,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,105,110,102,114,97,115,116,114,117,99,116,117,114,101,47,100,101,108,105,118,101,114,121,95,109,101,116,104,111,100,46,114,115],"byte_start":20556,"byte_end":20578,"line_start":86,"line_end":86,"column_start":12,"column_end":34},"name":"get_delivery_method_id","qualname":"<DeliveryMethod>::get_delivery_method_id","value":"fn (delivery_method: DeliveryMethod) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get integer value from `DeliveryMethod` enum.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,105,110,102,114,97,115,116,114,117,99,116,117,114,101,47,100,101,108,105,118,101,114,121,95,109,101,116,104,111,100,46,114,115],"byte_start":20731,"byte_end":20758,"line_start":91,"line_end":91,"column_start":12,"column_end":39},"name":"get_delivery_method_from_id","qualname":"<DeliveryMethod>::get_delivery_method_from_id","value":"fn (delivery_method_id: u8) -> DeliveryMethod","parent":null,"children":[],"decl_id":null,"docs":" Get `DeliveryMethod` enum instance from integer value.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":384},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,112,97,99,107,101,116,47,104,101,97,100,101,114,47,104,101,97,100,101,114,95,112,97,114,115,101,114,46,114,115],"byte_start":38332,"byte_end":38338,"line_start":4,"line_end":4,"column_start":10,"column_end":16},"name":"Output","qualname":"::packet::header::header_parser::HeaderParser::Output","value":"type Output;","parent":{"krate":0,"index":382},"children":[],"decl_id":null,"docs":" Associated type since we parse the header into an Output\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":394},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,112,97,99,107,101,116,47,104,101,97,100,101,114,47,104,101,97,100,101,114,95,114,101,97,100,101,114,46,114,115],"byte_start":38637,"byte_end":38643,"line_start":5,"line_end":5,"column_start":10,"column_end":16},"name":"Header","qualname":"::packet::header::header_reader::HeaderReader::Header","value":"type Header;","parent":{"krate":0,"index":392},"children":[],"decl_id":null,"docs":" Associated type for the HeaderReader, since it reads it from a Header\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1202},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,112,97,99,107,101,116,47,112,97,99,107,101,116,95,100,97,116,97,46,114,115],"byte_start":43729,"byte_end":43739,"line_start":6,"line_end":6,"column_start":12,"column_end":22},"name":"PacketData","qualname":"::packet::packet_data::PacketData","value":"PacketData {  }","parent":null,"children":[{"krate":0,"index":217}],"decl_id":null,"docs":" Contains the raw data this packet exists of. Note that a packet can be divided into separate fragments\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,112,97,99,107,101,116,47,112,97,99,107,101,116,95,100,97,116,97,46,114,115],"byte_start":43858,"byte_end":43871,"line_start":12,"line_end":12,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<PacketData>::with_capacity","value":"fn (size: usize) -> PacketData","parent":null,"children":[],"decl_id":null,"docs":" Creates a new PacketData with a specified capacity\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,112,97,99,107,101,116,47,112,97,99,107,101,116,95,100,97,116,97,46,114,115],"byte_start":44031,"byte_end":44043,"line_start":19,"line_end":19,"column_start":12,"column_end":24},"name":"add_fragment","qualname":"<PacketData>::add_fragment","value":"fn (&mut self, fragment: &[u8], fragment_data: &[u8]) -> NetworkResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Add fragment to this packet\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,112,97,99,107,101,116,47,112,97,99,107,101,116,95,100,97,116,97,46,114,115],"byte_start":44401,"byte_end":44415,"line_start":28,"line_end":28,"column_start":12,"column_end":26},"name":"fragment_count","qualname":"<PacketData>::fragment_count","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the total fragments this packet is divided into.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":524},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,112,97,99,107,101,116,47,112,97,99,107,101,116,95,100,97,116,97,46,114,115],"byte_start":44525,"byte_end":44530,"line_start":33,"line_end":33,"column_start":12,"column_end":17},"name":"parts","qualname":"<PacketData>::parts","value":"fn (&mut self) -> &Vec<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Return the parts this packet exists of.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1212},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,112,97,99,107,101,116,47,112,97,99,107,101,116,95,115,116,114,117,99,116,117,114,101,46,114,115],"byte_start":45808,"byte_end":45814,"line_start":6,"line_end":6,"column_start":12,"column_end":18},"name":"Packet","qualname":"::packet::packet_structure::Packet","value":"Packet {  }","parent":null,"children":[{"krate":0,"index":219},{"krate":0,"index":221},{"krate":0,"index":223}],"decl_id":null,"docs":" This is a user friendly packet containing the payload from the packet and the endpoint from where it came.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,112,97,99,107,101,116,47,112,97,99,107,101,116,95,115,116,114,117,99,116,117,114,101,46,114,115],"byte_start":45797,"byte_end":46032,"line_start":6,"line_end":13,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":534},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,112,97,99,107,101,116,47,112,97,99,107,101,116,95,115,116,114,117,99,116,117,114,101,46,114,115],"byte_start":46159,"byte_end":46162,"line_start":17,"line_end":17,"column_start":12,"column_end":15},"name":"new","qualname":"<Packet>::new","value":"fn (addr: SocketAddr, payload: Box<[u8]>, delivery_method: DeliveryMethod) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an new packet by passing the receiver, data and how this packet should be delivered.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,112,97,99,107,101,116,47,112,97,99,107,101,116,95,115,116,114,117,99,116,117,114,101,46,114,115],"byte_start":46931,"byte_end":46941,"line_start":34,"line_end":34,"column_start":12,"column_end":22},"name":"unreliable","qualname":"<Packet>::unreliable","value":"fn (addr: SocketAddr, payload: Vec<u8>) -> Packet","parent":null,"children":[],"decl_id":null,"docs":" Unreliable. Packets can be dropped, duplicated or arrive without order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":538},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,112,97,99,107,101,116,47,112,97,99,107,101,116,95,115,116,114,117,99,116,117,114,101,46,114,115],"byte_start":47751,"byte_end":47769,"line_start":52,"line_end":52,"column_start":12,"column_end":30},"name":"reliable_unordered","qualname":"<Packet>::reliable_unordered","value":"fn (addr: SocketAddr, payload: Vec<u8>) -> Packet","parent":null,"children":[],"decl_id":null,"docs":" Reliable. All packets will be sent and received, but without order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":540},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,112,97,99,107,101,116,47,112,97,99,107,101,116,95,115,116,114,117,99,116,117,114,101,46,114,115],"byte_start":48023,"byte_end":48030,"line_start":61,"line_end":61,"column_start":12,"column_end":19},"name":"payload","qualname":"<Packet>::payload","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Get the payload (raw data) of this packet.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":542},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,112,97,99,107,101,116,47,112,97,99,107,101,116,95,115,116,114,117,99,116,117,114,101,46,114,115],"byte_start":48132,"byte_end":48136,"line_start":66,"line_end":66,"column_start":12,"column_end":16},"name":"addr","qualname":"<Packet>::addr","value":"fn (&self) -> SocketAddr","parent":null,"children":[],"decl_id":null,"docs":" Get the endpoint from this packet.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":544},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,112,97,99,107,101,116,47,112,97,99,107,101,116,95,115,116,114,117,99,116,117,114,101,46,114,115],"byte_start":48268,"byte_end":48283,"line_start":71,"line_end":71,"column_start":12,"column_end":27},"name":"delivery_method","qualname":"<Packet>::delivery_method","value":"fn (&self) -> DeliveryMethod","parent":null,"children":[],"decl_id":null,"docs":" Get the type representing on how this packet will be delivered.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":582},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,112,114,111,116,111,99,111,108,95,118,101,114,115,105,111,110,46,114,115],"byte_start":50180,"byte_end":50195,"line_start":14,"line_end":14,"column_start":12,"column_end":27},"name":"ProtocolVersion","qualname":"::protocol_version::ProtocolVersion","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper to provide some functions to perform with the current protocol version.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":586},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,112,114,111,116,111,99,111,108,95,118,101,114,115,105,111,110,46,114,115],"byte_start":50274,"byte_end":50285,"line_start":18,"line_end":18,"column_start":12,"column_end":23},"name":"get_version","qualname":"<ProtocolVersion>::get_version","value":"fn () -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Get the current protocol version.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":588},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,112,114,111,116,111,99,111,108,95,118,101,114,115,105,111,110,46,114,115],"byte_start":50419,"byte_end":50428,"line_start":23,"line_end":23,"column_start":12,"column_end":21},"name":"get_crc32","qualname":"<ProtocolVersion>::get_crc32","value":"fn () -> u32","parent":null,"children":[],"decl_id":null,"docs":" This will return the crc32 from the current protocol version.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,112,114,111,116,111,99,111,108,95,118,101,114,115,105,111,110,46,114,115],"byte_start":50580,"byte_end":50593,"line_start":28,"line_end":28,"column_start":12,"column_end":25},"name":"valid_version","qualname":"<ProtocolVersion>::valid_version","value":"fn (protocol_version_crc32: u32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Validate a crc32 with the current protocol version and return the results.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1272},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,115,101,113,117,101,110,99,101,95,98,117,102,102,101,114,47,99,111,110,103,101,115,116,105,111,110,95,100,97,116,97,46,114,115],"byte_start":51467,"byte_end":51481,"line_start":5,"line_end":5,"column_start":12,"column_end":26},"name":"CongestionData","qualname":"::sequence_buffer::congestion_data::CongestionData","value":"CongestionData { sequence, sending_time }","parent":null,"children":[{"krate":0,"index":247},{"krate":0,"index":249}],"decl_id":null,"docs":" This contains the information required to reassemble fragments.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":247},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,115,101,113,117,101,110,99,101,95,98,117,102,102,101,114,47,99,111,110,103,101,115,116,105,111,110,95,100,97,116,97,46,114,115],"byte_start":51492,"byte_end":51500,"line_start":6,"line_end":6,"column_start":9,"column_end":17},"name":"sequence","qualname":"::sequence_buffer::congestion_data::CongestionData::sequence","value":"u16","parent":{"krate":0,"index":1272},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":249},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,115,101,113,117,101,110,99,101,95,98,117,102,102,101,114,47,99,111,110,103,101,115,116,105,111,110,95,100,97,116,97,46,114,115],"byte_start":51515,"byte_end":51527,"line_start":7,"line_end":7,"column_start":9,"column_end":21},"name":"sending_time","qualname":"::sequence_buffer::congestion_data::CongestionData::sending_time","value":"std::time::Instant","parent":{"krate":0,"index":1272},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,115,101,113,117,101,110,99,101,95,98,117,102,102,101,114,47,99,111,110,103,101,115,116,105,111,110,95,100,97,116,97,46,114,115],"byte_start":51574,"byte_end":51577,"line_start":11,"line_end":11,"column_start":12,"column_end":15},"name":"new","qualname":"<CongestionData>::new","value":"fn (sequence: u16, sending_time: Instant) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":646},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,109,111,100,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/laminar-0.1.0/src/error/mod.rs","parent":null,"children":[{"krate":0,"index":648},{"krate":0,"index":652},{"krate":0,"index":722},{"krate":0,"index":728},{"krate":0,"index":734},{"krate":0,"index":736},{"krate":0,"index":738},{"krate":0,"index":740}],"decl_id":null,"docs":" All internal error handling logic\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":263},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,101,114,114,111,114,95,107,105,110,100,115,46,114,115],"byte_start":57491,"byte_end":57512,"line_start":8,"line_end":8,"column_start":5,"column_end":26},"name":"ExceededMaxPacketSize","qualname":"::error::error_kinds::PacketErrorKind::ExceededMaxPacketSize","value":"PacketErrorKind::ExceededMaxPacketSize","parent":{"krate":0,"index":1284},"children":[],"decl_id":null,"docs":" Max packet size was exceeded\n","sig":null,"attributes":[{"value":"fail(display = \"The packet size was bigger than the max allowed size.\")","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,101,114,114,111,114,95,107,105,110,100,115,46,114,115],"byte_start":57375,"byte_end":57449,"line_start":6,"line_end":6,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":265},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,101,114,114,111,114,95,107,105,110,100,115,46,114,115],"byte_start":57602,"byte_end":57618,"line_start":11,"line_end":11,"column_start":5,"column_end":21},"name":"PacketHasWrongId","qualname":"::error::error_kinds::PacketErrorKind::PacketHasWrongId","value":"PacketErrorKind::PacketHasWrongId","parent":{"krate":0,"index":1284},"children":[],"decl_id":null,"docs":" Packet has the wrong ID\n","sig":null,"attributes":[{"value":"fail(display = \"The packet has a wrong id.\")","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,101,114,114,111,114,95,107,105,110,100,115,46,114,115],"byte_start":57518,"byte_end":57565,"line_start":9,"line_end":9,"column_start":5,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":1284},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,101,114,114,111,114,95,107,105,110,100,115,46,114,115],"byte_start":57353,"byte_end":57368,"line_start":5,"line_end":5,"column_start":10,"column_end":25},"name":"PacketErrorKind","qualname":"::error::error_kinds::PacketErrorKind","value":"PacketErrorKind::{ExceededMaxPacketSize, PacketHasWrongId}","parent":null,"children":[{"krate":0,"index":263},{"krate":0,"index":265}],"decl_id":null,"docs":" Errors that could occur with constructing parsing packet contents\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,101,114,114,111,114,95,107,105,110,100,115,46,114,115],"byte_start":57344,"byte_end":57621,"line_start":5,"line_end":12,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":267},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,101,114,114,111,114,95,107,105,110,100,115,46,114,115],"byte_start":57887,"byte_end":57907,"line_start":19,"line_end":19,"column_start":5,"column_end":25},"name":"PacketHeaderNotFound","qualname":"::error::error_kinds::FragmentErrorKind::PacketHeaderNotFound","value":"FragmentErrorKind::PacketHeaderNotFound","parent":{"krate":0,"index":1318},"children":[],"decl_id":null,"docs":" PacketHeader was not found in the packet\n","sig":null,"attributes":[{"value":"fail(display = \"Packet header was attached to fragment.\")","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,101,114,114,111,114,95,107,105,110,100,115,46,114,115],"byte_start":57773,"byte_end":57833,"line_start":17,"line_end":17,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":269},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,101,114,114,111,114,95,107,105,110,100,115,46,114,115],"byte_start":58022,"byte_end":58040,"line_start":22,"line_end":22,"column_start":5,"column_end":23},"name":"EntryAlreadyExists","qualname":"::error::error_kinds::FragmentErrorKind::EntryAlreadyExists","value":"FragmentErrorKind::EntryAlreadyExists","parent":{"krate":0,"index":1318},"children":[],"decl_id":null,"docs":" The packet already exists in the buffer\n","sig":null,"attributes":[{"value":"fail(display = \"Entry already exists in the buffer.\")","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,101,114,114,111,114,95,107,105,110,100,115,46,114,115],"byte_start":57913,"byte_end":57969,"line_start":20,"line_end":20,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":271},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,101,114,114,111,114,95,107,105,110,100,115,46,114,115],"byte_start":58199,"byte_end":58219,"line_start":25,"line_end":25,"column_start":5,"column_end":25},"name":"ExceededMaxFragments","qualname":"::error::error_kinds::FragmentErrorKind::ExceededMaxFragments","value":"FragmentErrorKind::ExceededMaxFragments","parent":{"krate":0,"index":1318},"children":[],"decl_id":null,"docs":" Max number of allowed fragments has been exceeded\n","sig":null,"attributes":[{"value":"fail(display =\n           \"The total numbers of fragments are bigger than the allowed fragments.\")","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,101,114,114,111,114,95,107,105,110,100,115,46,114,115],"byte_start":58046,"byte_end":58136,"line_start":23,"line_end":23,"column_start":5,"column_end":95}}]},{"kind":"TupleVariant","id":{"krate":0,"index":273},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,101,114,114,111,114,95,107,105,110,100,115,46,114,115],"byte_start":58339,"byte_end":58363,"line_start":28,"line_end":28,"column_start":5,"column_end":29},"name":"AlreadyProcessedFragment","qualname":"::error::error_kinds::FragmentErrorKind::AlreadyProcessedFragment","value":"FragmentErrorKind::AlreadyProcessedFragment","parent":{"krate":0,"index":1318},"children":[],"decl_id":null,"docs":" This fragment was already processed\n","sig":null,"attributes":[{"value":"fail(display = \"The fragment received was already processed.\")","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,101,114,114,111,114,95,107,105,110,100,115,46,114,115],"byte_start":58225,"byte_end":58290,"line_start":26,"line_end":26,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":275},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,101,114,114,111,114,95,107,105,110,100,115,46,114,115],"byte_start":58525,"byte_end":58559,"line_start":31,"line_end":31,"column_start":5,"column_end":39},"name":"FragmentWithUnevenNumberOfFragemts","qualname":"::error::error_kinds::FragmentErrorKind::FragmentWithUnevenNumberOfFragemts","value":"FragmentErrorKind::FragmentWithUnevenNumberOfFragemts","parent":{"krate":0,"index":1318},"children":[],"decl_id":null,"docs":" Attempted to fragment with an incorrect number of fragments\n","sig":null,"attributes":[{"value":"fail(display =\n           \"The fragment header does not contain the right fragment count.\")","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,101,114,114,111,114,95,107,105,110,100,115,46,114,115],"byte_start":58369,"byte_end":58452,"line_start":29,"line_end":29,"column_start":5,"column_end":88}}]},{"kind":"TupleVariant","id":{"krate":0,"index":277},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,101,114,114,111,114,95,107,105,110,100,115,46,114,115],"byte_start":58653,"byte_end":58671,"line_start":34,"line_end":34,"column_start":5,"column_end":23},"name":"FragmentHasWrongId","qualname":"::error::error_kinds::FragmentErrorKind::FragmentHasWrongId","value":"FragmentErrorKind::FragmentHasWrongId","parent":{"krate":0,"index":1318},"children":[],"decl_id":null,"docs":" Fragment has incorrect ID\n","sig":null,"attributes":[{"value":"fail(display = \"The fragment has a wrong id.\")","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,101,114,114,111,114,95,107,105,110,100,115,46,114,115],"byte_start":58565,"byte_end":58614,"line_start":32,"line_end":32,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":279},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,101,114,114,111,114,95,107,105,110,100,115,46,114,115],"byte_start":58823,"byte_end":58847,"line_start":37,"line_end":37,"column_start":5,"column_end":29},"name":"CouldNotFindFragmentById","qualname":"::error::error_kinds::FragmentErrorKind::CouldNotFindFragmentById","value":"FragmentErrorKind::CouldNotFindFragmentById","parent":{"krate":0,"index":1318},"children":[],"decl_id":null,"docs":" Fragment we expected to be able to find we couldn't\n","sig":null,"attributes":[{"value":"fail(display =\n           \"The fragment supposed to be in a cache but it was not found.\")","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,101,114,114,111,114,95,107,105,110,100,115,46,114,115],"byte_start":58677,"byte_end":58758,"line_start":35,"line_end":35,"column_start":5,"column_end":86}}]},{"kind":"Enum","id":{"krate":0,"index":1318},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,101,114,114,111,114,95,107,105,110,100,115,46,114,115],"byte_start":57749,"byte_end":57766,"line_start":16,"line_end":16,"column_start":10,"column_end":27},"name":"FragmentErrorKind","qualname":"::error::error_kinds::FragmentErrorKind","value":"FragmentErrorKind::{PacketHeaderNotFound, EntryAlreadyExists, ExceededMaxFragments, AlreadyProcessedFragment, FragmentWithUnevenNumberOfFragemts, FragmentHasWrongId, CouldNotFindFragmentById}","parent":null,"children":[{"krate":0,"index":267},{"krate":0,"index":269},{"krate":0,"index":271},{"krate":0,"index":273},{"krate":0,"index":275},{"krate":0,"index":277},{"krate":0,"index":279}],"decl_id":null,"docs":" Errors that could occur with constructing/parsing fragment contents\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,101,114,114,111,114,95,107,105,110,100,115,46,114,115],"byte_start":57740,"byte_end":58850,"line_start":16,"line_end":38,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":281},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,110,101,116,119,111,114,107,95,101,114,114,111,114,46,114,115],"byte_start":59344,"byte_end":59357,"line_start":18,"line_end":18,"column_start":5,"column_end":18},"name":"FragmentError","qualname":"::error::network_error::NetworkErrorKind::FragmentError","value":"NetworkErrorKind::FragmentError(FragmentErrorKind)","parent":{"krate":0,"index":1352},"children":[],"decl_id":null,"docs":" Error relating to receiving or parsing a fragment\n","sig":null,"attributes":[{"value":"fail(display =\n           \"Something went wrong with receiving/parsing fragments. Reason: {:?}.\",\n       _0)","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,110,101,116,119,111,114,107,95,101,114,114,111,114,46,114,115],"byte_start":59166,"byte_end":59281,"line_start":13,"line_end":16,"column_start":5,"column_end":7}}]},{"kind":"TupleVariant","id":{"krate":0,"index":285},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,110,101,116,119,111,114,107,95,101,114,114,111,114,46,114,115],"byte_start":59556,"byte_end":59567,"line_start":24,"line_end":24,"column_start":5,"column_end":16},"name":"PacketError","qualname":"::error::network_error::NetworkErrorKind::PacketError","value":"NetworkErrorKind::PacketError(PacketErrorKind)","parent":{"krate":0,"index":1352},"children":[],"decl_id":null,"docs":" Error relating to receiving or parsing a packet\n","sig":null,"attributes":[{"value":"fail(display =\n           \"Something went wrong with receiving/parsing packets. Reason: {:?}.\",\n       _0)","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,110,101,116,119,111,114,107,95,101,114,114,111,114,46,114,115],"byte_start":59382,"byte_end":59495,"line_start":19,"line_end":22,"column_start":5,"column_end":7}}]},{"kind":"TupleVariant","id":{"krate":0,"index":289},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,110,101,116,119,111,114,107,95,101,114,114,111,114,46,114,115],"byte_start":59782,"byte_end":59803,"line_start":30,"line_end":30,"column_start":5,"column_end":26},"name":"FailedToAddConnection","qualname":"::error::network_error::NetworkErrorKind::FailedToAddConnection","value":"NetworkErrorKind::FailedToAddConnection(String)","parent":{"krate":0,"index":1352},"children":[],"decl_id":null,"docs":" Failed to add a connection\n","sig":null,"attributes":[{"value":"fail(display =\n           \"Could not add a connection to the connection pool, because the connection lock is poisoned. Reason: {:?}.\",\n       _0)","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,110,101,116,119,111,114,107,95,101,114,114,111,114,46,114,115],"byte_start":59590,"byte_end":59742,"line_start":25,"line_end":28,"column_start":5,"column_end":7}}]},{"kind":"TupleVariant","id":{"krate":0,"index":293},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,110,101,116,119,111,114,107,95,101,114,114,111,114,46,114,115],"byte_start":59921,"byte_end":59928,"line_start":33,"line_end":33,"column_start":5,"column_end":12},"name":"IOError","qualname":"::error::network_error::NetworkErrorKind::IOError","value":"NetworkErrorKind::IOError(io::Error)","parent":{"krate":0,"index":1352},"children":[],"decl_id":null,"docs":" Wrapper around a std io::Error\n","sig":null,"attributes":[{"value":"fail(display = \"An IO Error occurred. Reason: {:?}.\", _0)","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,110,101,116,119,111,114,107,95,101,114,114,111,114,46,114,115],"byte_start":59817,"byte_end":59877,"line_start":31,"line_end":31,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":297},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,110,101,116,119,111,114,107,95,101,114,114,111,114,46,114,115],"byte_start":60075,"byte_end":60097,"line_start":36,"line_end":36,"column_start":5,"column_end":27},"name":"UnableToSetNonblocking","qualname":"::error::network_error::NetworkErrorKind::UnableToSetNonblocking","value":"NetworkErrorKind::UnableToSetNonblocking","parent":{"krate":0,"index":1352},"children":[],"decl_id":null,"docs":" Error setting nonblocking on a udp server\n","sig":null,"attributes":[{"value":"fail(display = \"Something went wrong when setting non-blocking option.\")","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,110,101,116,119,111,114,107,95,101,114,114,111,114,46,114,115],"byte_start":59945,"byte_end":60020,"line_start":34,"line_end":34,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":299},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,110,101,116,119,111,114,107,95,101,114,114,111,114,46,114,115],"byte_start":60239,"byte_end":60267,"line_start":39,"line_end":39,"column_start":5,"column_end":33},"name":"UDPSocketStateCreationFailed","qualname":"::error::network_error::NetworkErrorKind::UDPSocketStateCreationFailed","value":"NetworkErrorKind::UDPSocketStateCreationFailed","parent":{"krate":0,"index":1352},"children":[],"decl_id":null,"docs":" Error when creating the UDP Socket State\n","sig":null,"attributes":[{"value":"fail(display =\n           \"Something went wrong when creating UDP SocketState structure.\")","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,110,101,116,119,111,114,107,95,101,114,114,111,114,46,114,115],"byte_start":60103,"byte_end":60185,"line_start":37,"line_end":37,"column_start":5,"column_end":87}}]},{"kind":"TupleVariant","id":{"krate":0,"index":301},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,110,101,116,119,111,114,107,95,101,114,114,111,114,46,114,115],"byte_start":60377,"byte_end":60396,"line_start":42,"line_end":42,"column_start":5,"column_end":24},"name":"ReceivedDataToShort","qualname":"::error::network_error::NetworkErrorKind::ReceivedDataToShort","value":"NetworkErrorKind::ReceivedDataToShort","parent":{"krate":0,"index":1352},"children":[],"decl_id":null,"docs":" Did not receive enough data\n","sig":null,"attributes":[{"value":"fail(display = \"The received data did not have any length.\")","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,110,101,116,119,111,114,107,95,101,114,114,111,114,46,114,115],"byte_start":60273,"byte_end":60336,"line_start":40,"line_end":40,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":303},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,110,101,116,119,111,114,107,95,101,114,114,111,114,46,114,115],"byte_start":60503,"byte_end":60526,"line_start":45,"line_end":45,"column_start":5,"column_end":28},"name":"ProtocolVersionMismatch","qualname":"::error::network_error::NetworkErrorKind::ProtocolVersionMismatch","value":"NetworkErrorKind::ProtocolVersionMismatch","parent":{"krate":0,"index":1352},"children":[],"decl_id":null,"docs":" Protocol versions did not match\n","sig":null,"attributes":[{"value":"fail(display = \"The protocol versions do not match.\")","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,110,101,116,119,111,114,107,95,101,114,114,111,114,46,114,115],"byte_start":60402,"byte_end":60458,"line_start":43,"line_end":43,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":305},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,110,101,116,119,111,114,107,95,101,114,114,111,114,46,114,115],"byte_start":60670,"byte_end":60689,"line_start":48,"line_end":48,"column_start":5,"column_end":24},"name":"ConnectionPoolError","qualname":"::error::network_error::NetworkErrorKind::ConnectionPoolError","value":"NetworkErrorKind::ConnectionPoolError(String)","parent":{"krate":0,"index":1352},"children":[],"decl_id":null,"docs":" Error occurred in connection pool.\n","sig":null,"attributes":[{"value":"fail(display =\n           \"Something went wrong with connection timeout thread. Reason: {:?}\",\n       _0)","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,110,101,116,119,111,114,107,95,101,114,114,111,114,46,114,115],"byte_start":60532,"byte_end":60622,"line_start":46,"line_end":46,"column_start":5,"column_end":95}}]},{"kind":"TupleVariant","id":{"krate":0,"index":309},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,110,101,116,119,111,114,107,95,101,114,114,111,114,46,114,115],"byte_start":60795,"byte_end":60814,"line_start":51,"line_end":51,"column_start":5,"column_end":24},"name":"JoiningThreadFailed","qualname":"::error::network_error::NetworkErrorKind::JoiningThreadFailed","value":"NetworkErrorKind::JoiningThreadFailed","parent":{"krate":0,"index":1352},"children":[],"decl_id":null,"docs":" Error occurred when joining thread.\n","sig":null,"attributes":[{"value":"fail(display = \"Joining thread failed.\")","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,110,101,116,119,111,114,107,95,101,114,114,111,114,46,114,115],"byte_start":60703,"byte_end":60746,"line_start":49,"line_end":49,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":311},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,110,101,116,119,111,114,107,95,101,114,114,111,114,46,114,115],"byte_start":60969,"byte_end":60981,"line_start":54,"line_end":54,"column_start":5,"column_end":17},"name":"PoisonedLock","qualname":"::error::network_error::NetworkErrorKind::PoisonedLock","value":"NetworkErrorKind::PoisonedLock(String)","parent":{"krate":0,"index":1352},"children":[],"decl_id":null,"docs":" There was an unexpected error caused by an poisoned lock.\n","sig":null,"attributes":[{"value":"fail(display = \"There was an unexpected error caused by an poisoned lock.\")","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,110,101,116,119,111,114,107,95,101,114,114,111,114,46,114,115],"byte_start":60820,"byte_end":60898,"line_start":52,"line_end":52,"column_start":5,"column_end":83}}]},{"kind":"Enum","id":{"krate":0,"index":1352},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,110,101,116,119,111,114,107,95,101,114,114,111,114,46,114,115],"byte_start":59143,"byte_end":59159,"line_start":12,"line_end":12,"column_start":10,"column_end":26},"name":"NetworkErrorKind","qualname":"::error::network_error::NetworkErrorKind","value":"NetworkErrorKind::{FragmentError, PacketError, FailedToAddConnection, IOError, UnableToSetNonblocking, UDPSocketStateCreationFailed, ReceivedDataToShort, ProtocolVersionMismatch, ConnectionPoolError, JoiningThreadFailed, PoisonedLock}","parent":null,"children":[{"krate":0,"index":281},{"krate":0,"index":285},{"krate":0,"index":289},{"krate":0,"index":293},{"krate":0,"index":297},{"krate":0,"index":299},{"krate":0,"index":301},{"krate":0,"index":303},{"krate":0,"index":305},{"krate":0,"index":309},{"krate":0,"index":311}],"decl_id":null,"docs":" Enum with all possible network errors that could occur.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1374},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,110,101,116,119,111,114,107,95,101,114,114,111,114,46,114,115],"byte_start":61079,"byte_end":61091,"line_start":59,"line_end":59,"column_start":12,"column_end":24},"name":"NetworkError","qualname":"::error::network_error::NetworkError","value":"NetworkError {  }","parent":null,"children":[{"krate":0,"index":315}],"decl_id":null,"docs":" An error that could occur during network operations.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":694},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,110,101,116,119,111,114,107,95,101,114,114,111,114,46,114,115],"byte_start":62315,"byte_end":62319,"line_start":96,"line_end":96,"column_start":12,"column_end":16},"name":"kind","qualname":"<NetworkError>::kind","value":"fn (&self) -> &NetworkErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Get the error kind from the error. This is useful when you want to match on the error kind.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":696},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,110,101,116,119,111,114,107,95,101,114,114,111,114,46,114,115],"byte_start":62465,"byte_end":62490,"line_start":101,"line_end":101,"column_start":12,"column_end":37},"name":"poisoned_connection_error","qualname":"<NetworkError>::poisoned_connection_error","value":"fn (msg: &str) -> NetworkErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Generate an `NetworkErrorKind` for poisoned connection.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":738},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,109,111,100,46,114,115],"byte_start":56144,"byte_end":56150,"line_start":12,"line_end":12,"column_start":10,"column_end":16},"name":"Result","qualname":"::error::Result","value":"result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Convenience alias for a standard result\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":740},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,109,111,100,46,114,115],"byte_start":57149,"byte_end":57162,"line_start":37,"line_end":37,"column_start":10,"column_end":23},"name":"NetworkResult","qualname":"::error::NetworkResult","value":"result::Result<T, NetworkError>","parent":null,"children":[],"decl_id":null,"docs":" ```text\n use laminar::error::{NetworkError, NetworkErrorKind, FragmentErrorKind};\n use laminar::net::{UdpSocket, NetworkConfig};","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":742},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,110,101,116,47,109,111,100,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::net","value":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/laminar-0.1.0/src/net/mod.rs","parent":null,"children":[{"krate":0,"index":744},{"krate":0,"index":970},{"krate":0,"index":976},{"krate":0,"index":992},{"krate":0,"index":1006},{"krate":0,"index":1068},{"krate":0,"index":1086},{"krate":0,"index":1094},{"krate":0,"index":1096},{"krate":0,"index":1098}],"decl_id":null,"docs":" Networking modules\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":121},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,110,101,116,47,99,111,110,110,101,99,116,105,111,110,47,113,117,97,108,105,116,121,46,114,115],"byte_start":70242,"byte_end":70246,"line_start":10,"line_end":10,"column_start":5,"column_end":9},"name":"Good","qualname":"::net::connection::quality::NetworkQuality::Good","value":"NetworkQuality::Good","parent":{"krate":0,"index":814},"children":[],"decl_id":null,"docs":" Connection is generally good, minimal packet loss or latency\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":123},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,110,101,116,47,99,111,110,110,101,99,116,105,111,110,47,113,117,97,108,105,116,121,46,114,115],"byte_start":70326,"byte_end":70329,"line_start":12,"line_end":12,"column_start":5,"column_end":8},"name":"Bad","qualname":"::net::connection::quality::NetworkQuality::Bad","value":"NetworkQuality::Bad","parent":{"krate":0,"index":814},"children":[],"decl_id":null,"docs":" Connection is generally bad, having an impact on game performance\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":814},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,110,101,116,47,99,111,110,110,101,99,116,105,111,110,47,113,117,97,108,105,116,121,46,114,115],"byte_start":70152,"byte_end":70166,"line_start":8,"line_end":8,"column_start":10,"column_end":24},"name":"NetworkQuality","qualname":"::net::connection::quality::NetworkQuality","value":"NetworkQuality::{Good, Bad}","parent":null,"children":[{"krate":0,"index":121},{"krate":0,"index":123}],"decl_id":null,"docs":" Represents the quality of a network.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":816},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,110,101,116,47,99,111,110,110,101,99,116,105,111,110,47,113,117,97,108,105,116,121,46,114,115],"byte_start":70484,"byte_end":70495,"line_start":17,"line_end":17,"column_start":12,"column_end":23},"name":"RttMeasurer","qualname":"::net::connection::quality::RttMeasurer","value":"RttMeasurer {  }","parent":null,"children":[{"krate":0,"index":125}],"decl_id":null,"docs":" This type helps with calculating the round trip time from any packet.\n It is able to smooth out the network jitter if there is any.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":820},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,110,101,116,47,99,111,110,110,101,99,116,105,111,110,47,113,117,97,108,105,116,121,46,114,115],"byte_start":70609,"byte_end":70612,"line_start":23,"line_end":23,"column_start":12,"column_end":15},"name":"new","qualname":"<RttMeasurer>::new","value":"fn (config: &Arc<NetworkConfig>) -> RttMeasurer","parent":null,"children":[],"decl_id":null,"docs":" Creates and returns a new RttMeasurer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":822},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,110,101,116,47,99,111,110,110,101,99,116,105,111,110,47,113,117,97,108,105,116,121,46,114,115],"byte_start":70897,"byte_end":70904,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"name":"get_rtt","qualname":"<RttMeasurer>::get_rtt","value":"fn (&self, congestion_data: Option<&mut CongestionData>) -> f32","parent":null,"children":[],"decl_id":null,"docs":" This will calculate the round trip time (rtt) from the given acknowledgement.\n Where after it updates the rtt from the given connection.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":884},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,110,101,116,47,99,111,110,110,101,99,116,105,111,110,47,118,105,114,116,117,97,108,95,99,111,110,110,101,99,116,105,111,110,46,114,115],"byte_start":75156,"byte_end":75173,"line_start":20,"line_end":20,"column_start":12,"column_end":29},"name":"VirtualConnection","qualname":"::net::connection::virtual_connection::VirtualConnection","value":"VirtualConnection { last_heard, remote_address }","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":129},{"krate":0,"index":131},{"krate":0,"index":133},{"krate":0,"index":135},{"krate":0,"index":137}],"decl_id":null,"docs":" Contains the information about a certain 'virtual connection' over udp.\n This connections also keeps track of network quality, processing packets, buffering data related to connection etc.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":127},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,110,101,116,47,99,111,110,110,101,99,116,105,111,110,47,118,105,114,116,117,97,108,95,99,111,110,110,101,99,116,105,111,110,46,114,115],"byte_start":75266,"byte_end":75276,"line_start":23,"line_end":23,"column_start":9,"column_end":19},"name":"last_heard","qualname":"::net::connection::virtual_connection::VirtualConnection::last_heard","value":"std::time::Instant","parent":{"krate":0,"index":884},"children":[],"decl_id":null,"docs":" Last time we received a packet from this client\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":129},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,110,101,116,47,99,111,110,110,101,99,116,105,111,110,47,118,105,114,116,117,97,108,95,99,111,110,110,101,99,116,105,111,110,46,114,115],"byte_start":75338,"byte_end":75352,"line_start":25,"line_end":25,"column_start":9,"column_end":23},"name":"remote_address","qualname":"::net::connection::virtual_connection::VirtualConnection::remote_address","value":"std::net::SocketAddr","parent":{"krate":0,"index":884},"children":[],"decl_id":null,"docs":" The address of the remote endpoint\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":888},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,110,101,116,47,99,111,110,110,101,99,116,105,111,110,47,118,105,114,116,117,97,108,95,99,111,110,110,101,99,116,105,111,110,46,114,115],"byte_start":75741,"byte_end":75744,"line_start":38,"line_end":38,"column_start":12,"column_end":15},"name":"new","qualname":"<VirtualConnection>::new","value":"fn (addr: SocketAddr, config: &Arc<NetworkConfig>) -> VirtualConnection","parent":null,"children":[],"decl_id":null,"docs":" Creates and returns a new Connection that wraps the provided socket address\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":890},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,110,101,116,47,99,111,110,110,101,99,116,105,111,110,47,118,105,114,116,117,97,108,95,99,111,110,110,101,99,116,105,111,110,46,114,115],"byte_start":76392,"byte_end":76402,"line_start":54,"line_end":54,"column_start":12,"column_end":22},"name":"last_heard","qualname":"<VirtualConnection>::last_heard","value":"fn (&self) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns a Duration representing the interval since we last heard from the client\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":892},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,110,101,116,47,99,111,110,110,101,99,116,105,111,110,47,118,105,114,116,117,97,108,95,99,111,110,110,101,99,116,105,111,110,46,114,115],"byte_start":76722,"byte_end":76738,"line_start":62,"line_end":62,"column_start":12,"column_end":28},"name":"process_outgoing","qualname":"<VirtualConnection>::process_outgoing","value":"fn (&mut self, payload: &[u8], delivery_method: DeliveryMethod) -> NetworkResult<PacketData>","parent":null,"children":[],"decl_id":null,"docs":" This pre-process the given buffer to be send over the network.\n 1. It will append the right header.\n 2. It will perform some actions related to how the packet should be delivered.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":894},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,110,101,116,47,99,111,110,110,101,99,116,105,111,110,47,118,105,114,116,117,97,108,95,99,111,110,110,101,99,116,105,111,110,46,114,115],"byte_start":77835,"byte_end":77851,"line_start":87,"line_end":87,"column_start":12,"column_end":28},"name":"process_incoming","qualname":"<VirtualConnection>::process_incoming","value":"fn (&mut self, received_data: &[u8]) -> NetworkResult<Option<Packet>>","parent":null,"children":[],"decl_id":null,"docs":" This process the incoming data and returns an packet if the data is complete.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":896},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,110,101,116,47,99,111,110,110,101,99,116,105,111,110,47,118,105,114,116,117,97,108,95,99,111,110,110,101,99,116,105,111,110,46,114,115],"byte_start":79786,"byte_end":79808,"line_start":135,"line_end":135,"column_start":12,"column_end":34},"name":"gather_dropped_packets","qualname":"<VirtualConnection>::gather_dropped_packets","value":"fn (&mut self) -> Vec<Box<[u8]>>","parent":null,"children":[],"decl_id":null,"docs":" This will gather dropped packets from the reliable channels.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1380},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,110,101,116,47,101,120,116,101,114,110,97,108,95,97,99,107,46,114,115],"byte_start":86274,"byte_end":86286,"line_start":8,"line_end":8,"column_start":12,"column_end":24},"name":"ExternalAcks","qualname":"::net::external_ack::ExternalAcks","value":"ExternalAcks { last_seq, field }","parent":null,"children":[{"krate":0,"index":317},{"krate":0,"index":319},{"krate":0,"index":321}],"decl_id":null,"docs":" Third party's ack information.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":317},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,110,101,116,47,101,120,116,101,114,110,97,108,95,97,99,107,46,114,115],"byte_start":86368,"byte_end":86376,"line_start":10,"line_end":10,"column_start":9,"column_end":17},"name":"last_seq","qualname":"::net::external_ack::ExternalAcks::last_seq","value":"u16","parent":{"krate":0,"index":1380},"children":[],"decl_id":null,"docs":" the last sequence number we have received from the other side.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":319},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,110,101,116,47,101,120,116,101,114,110,97,108,95,97,99,107,46,114,115],"byte_start":86737,"byte_end":86742,"line_start":12,"line_end":12,"column_start":9,"column_end":14},"name":"field","qualname":"::net::external_ack::ExternalAcks::field","value":"u32","parent":{"krate":0,"index":1380},"children":[],"decl_id":null,"docs":" We define \"ack bitfield\" such that each bit corresponds to acks of the 32 sequence numbers before \"ack\". So let’s say \"ack\" is 100. If the first bit of \"ack bitfield\" is set, then the packet also includes an ack for packet 99. If the second bit is set, then packet 98 is acked. This goes all the way down to the 32nd bit for packet 68.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":974},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,110,101,116,47,101,120,116,101,114,110,97,108,95,97,99,107,46,114,115],"byte_start":86828,"byte_end":86831,"line_start":18,"line_end":18,"column_start":12,"column_end":15},"name":"ack","qualname":"<ExternalAcks>::ack","value":"fn (&mut self, seq_num: u16) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Acks a packet\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1390},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,110,101,116,47,108,111,99,97,108,95,97,99,107,46,114,115],"byte_start":92795,"byte_end":92809,"line_start":9,"line_end":9,"column_start":12,"column_end":26},"name":"LocalAckRecord","qualname":"::net::local_ack::LocalAckRecord","value":"LocalAckRecord {  }","parent":null,"children":[{"krate":0,"index":323}],"decl_id":null,"docs":" Packets waiting for an ack","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":998},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,110,101,116,47,108,111,99,97,108,95,97,99,107,46,114,115],"byte_start":92999,"byte_end":93007,"line_start":16,"line_end":16,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<LocalAckRecord>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if there are packets in the queue to be acknowledged.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1000},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,110,101,116,47,108,111,99,97,108,95,97,99,107,46,114,115],"byte_start":93148,"byte_end":93151,"line_start":21,"line_end":21,"column_start":12,"column_end":15},"name":"len","qualname":"<LocalAckRecord>::len","value":"fn (&mut self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Gets the total packages in the queue that could be acknowledged.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1002},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,110,101,116,47,108,111,99,97,108,95,97,99,107,46,114,115],"byte_start":93287,"byte_end":93294,"line_start":26,"line_end":26,"column_start":12,"column_end":19},"name":"enqueue","qualname":"<LocalAckRecord>::enqueue","value":"fn (&mut self, seq: u16, payload: &[u8]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds a packet to the queue awaiting for an acknowledgement.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1004},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,110,101,116,47,108,111,99,97,108,95,97,99,107,46,114,115],"byte_start":93501,"byte_end":93504,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"ack","qualname":"<LocalAckRecord>::ack","value":"fn (&mut self, seq: u16, seq_field: u32) -> Vec<(u16, Box<[u8]>)>","parent":null,"children":[],"decl_id":null,"docs":" Finds and removes acked packets, returning dropped packets\n","sig":null,"attributes":[{"value":"allow(unused_parens)","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,110,101,116,47,108,111,99,97,108,95,97,99,107,46,114,115],"byte_start":93466,"byte_end":93489,"line_start":31,"line_end":31,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":1050},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,110,101,116,47,117,100,112,46,114,115],"byte_start":97651,"byte_end":97660,"line_start":15,"line_end":15,"column_start":12,"column_end":21},"name":"UdpSocket","qualname":"::net::udp::UdpSocket","value":"UdpSocket {  }","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":159},{"krate":0,"index":161},{"krate":0,"index":163},{"krate":0,"index":165},{"krate":0,"index":167},{"krate":0,"index":169}],"decl_id":null,"docs":" Represents an <ip>:<port> combination listening for UDP traffic\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1054},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,110,101,116,47,117,100,112,46,114,115],"byte_start":98200,"byte_end":98204,"line_start":27,"line_end":27,"column_start":12,"column_end":16},"name":"bind","qualname":"<UdpSocket>::bind","value":"fn <A> (addr: A, config: NetworkConfig) -> NetworkResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Binds to the socket and then sets up the SocketState to manage the connections. Because UDP connections are not persistent, we can only infer the status of the remote endpoint by looking to see if they are sending packets or not\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1056},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,110,101,116,47,117,100,112,46,114,115],"byte_start":99062,"byte_end":99066,"line_start":50,"line_end":50,"column_start":12,"column_end":16},"name":"recv","qualname":"<UdpSocket>::recv","value":"fn (&mut self) -> NetworkResult<Option<Packet>>","parent":null,"children":[],"decl_id":null,"docs":" Receives a single datagram message on the socket. On success, returns the packet containing origin and data.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1058},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,110,101,116,47,117,100,112,46,114,115],"byte_start":99923,"byte_end":99927,"line_start":73,"line_end":73,"column_start":12,"column_end":16},"name":"send","qualname":"<UdpSocket>::send","value":"fn (&mut self, packet: &Packet) -> NetworkResult<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the given address. On success, returns the number of bytes written.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1062},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,110,101,116,47,117,100,112,46,114,115],"byte_start":101629,"byte_end":101644,"line_start":115,"line_end":115,"column_start":12,"column_end":27},"name":"set_nonblocking","qualname":"<UdpSocket>::set_nonblocking","value":"fn (&mut self, nonblocking: bool) -> NetworkResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the blocking mode of the socket. In non-blocking mode, recv_from will not block if there is no data to be read. In blocking mode, it will. If using non-blocking mode, it is important to wait some amount of time between iterations, or it will quickly use all CPU available\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1064},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,110,101,116,47,117,100,112,46,114,115],"byte_start":101948,"byte_end":101954,"line_start":123,"line_end":123,"column_start":12,"column_end":18},"name":"events","qualname":"<UdpSocket>::events","value":"fn (&self) -> Vec<Event>","parent":null,"children":[],"decl_id":null,"docs":" This will return a `Vec` of events for processing.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1066},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,110,101,116,47,117,100,112,46,114,115],"byte_start":102182,"byte_end":102199,"line_start":131,"line_end":131,"column_start":12,"column_end":29},"name":"get_events_sender","qualname":"<UdpSocket>::get_events_sender","value":"fn (&self) -> Sender<Event>","parent":null,"children":[],"decl_id":null,"docs":" Wrapper around getting the events sender\n This will cause a clone to be done, but this is low cost\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1068},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,110,101,116,47,99,111,110,115,116,97,110,116,115,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"constants","qualname":"::net::constants","value":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/laminar-0.1.0/src/net/constants.rs","parent":null,"children":[{"krate":0,"index":1070},{"krate":0,"index":1072},{"krate":0,"index":1074},{"krate":0,"index":1076},{"krate":0,"index":1078},{"krate":0,"index":1080},{"krate":0,"index":1082},{"krate":0,"index":1084}],"decl_id":null,"docs":" Contains useful constants\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1070},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,110,101,116,47,99,111,110,115,116,97,110,116,115,46,114,115],"byte_start":102300,"byte_end":102320,"line_start":2,"line_end":2,"column_start":11,"column_end":31},"name":"FRAGMENT_HEADER_SIZE","qualname":"::net::constants::FRAGMENT_HEADER_SIZE","value":"u8","parent":null,"children":[],"decl_id":null,"docs":" Fragment header size\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1072},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,110,101,116,47,99,111,110,115,116,97,110,116,115,46,114,115],"byte_start":102392,"byte_end":102411,"line_start":4,"line_end":4,"column_start":11,"column_end":30},"name":"ACKED_PACKET_HEADER","qualname":"::net::constants::ACKED_PACKET_HEADER","value":"u8","parent":null,"children":[],"decl_id":null,"docs":" Acked packet header size\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1074},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,110,101,116,47,99,111,110,115,116,97,110,116,115,46,114,115],"byte_start":102479,"byte_end":102499,"line_start":6,"line_end":6,"column_start":11,"column_end":31},"name":"STANDARD_HEADER_SIZE","qualname":"::net::constants::STANDARD_HEADER_SIZE","value":"u8","parent":null,"children":[],"decl_id":null,"docs":" Standard header size\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1076},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,110,101,116,47,99,111,110,115,116,97,110,116,115,46,114,115],"byte_start":102545,"byte_end":102567,"line_start":8,"line_end":8,"column_start":11,"column_end":33},"name":"HEART_BEAT_HEADER_SIZE","qualname":"::net::constants::HEART_BEAT_HEADER_SIZE","value":"u8","parent":null,"children":[],"decl_id":null,"docs":" Heartbeat header size\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1078},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,110,101,116,47,99,111,110,115,116,97,110,116,115,46,114,115],"byte_start":102631,"byte_end":102652,"line_start":10,"line_end":10,"column_start":11,"column_end":32},"name":"MAX_FRAGMENTS_DEFAULT","qualname":"::net::constants::MAX_FRAGMENTS_DEFAULT","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" Default max number of fragments to size\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1080},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,110,101,116,47,99,111,110,115,116,97,110,116,115,46,114,115],"byte_start":102712,"byte_end":102733,"line_start":12,"line_end":12,"column_start":11,"column_end":32},"name":"FRAGMENT_SIZE_DEFAULT","qualname":"::net::constants::FRAGMENT_SIZE_DEFAULT","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" Default max size of each fragment\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1082},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,110,101,116,47,99,111,110,115,116,97,110,116,115,46,114,115],"byte_start":103108,"byte_end":103119,"line_start":21,"line_end":21,"column_start":11,"column_end":22},"name":"DEFAULT_MTU","qualname":"::net::constants::DEFAULT_MTU","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" Maximum transmission unit of the payload.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1084},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,110,101,116,47,99,111,110,115,116,97,110,116,115,46,114,115],"byte_start":103324,"byte_end":103340,"line_start":27,"line_end":27,"column_start":11,"column_end":27},"name":"PROTOCOL_VERSION","qualname":"::net::constants::PROTOCOL_VERSION","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" This is the current protocol version.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1100},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"config","qualname":"::config","value":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/laminar-0.1.0/src/config.rs","parent":null,"children":[{"krate":0,"index":1102},{"krate":0,"index":1108},{"krate":0,"index":1400},{"krate":0,"index":1402},{"krate":0,"index":1110}],"decl_id":null,"docs":" Contains networking related configuration\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1400},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":103565,"byte_end":103578,"line_start":6,"line_end":6,"column_start":12,"column_end":25},"name":"NetworkConfig","qualname":"::config::NetworkConfig","value":"NetworkConfig { max_packet_size, max_fragments, fragment_size, fragment_reassembly_buffer_size, receive_buffer_max_size, rtt_smoothing_factor, rtt_max_value }","parent":null,"children":[{"krate":0,"index":325},{"krate":0,"index":327},{"krate":0,"index":329},{"krate":0,"index":331},{"krate":0,"index":333},{"krate":0,"index":335},{"krate":0,"index":337}],"decl_id":null,"docs":" Struct that contains config values for various aspects of the network\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":325},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":103704,"byte_end":103719,"line_start":10,"line_end":10,"column_start":9,"column_end":24},"name":"max_packet_size","qualname":"::config::NetworkConfig::max_packet_size","value":"usize","parent":{"krate":0,"index":1400},"children":[],"decl_id":null,"docs":" This is the maximal size a packet can get with all its fragments.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":327},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":104256,"byte_end":104269,"line_start":18,"line_end":18,"column_start":9,"column_end":22},"name":"max_fragments","qualname":"::config::NetworkConfig::max_fragments","value":"u8","parent":{"krate":0,"index":1400},"children":[],"decl_id":null,"docs":" These are the maximal fragments a packet could be divided into.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":329},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":104460,"byte_end":104473,"line_start":23,"line_end":23,"column_start":9,"column_end":22},"name":"fragment_size","qualname":"::config::NetworkConfig::fragment_size","value":"u16","parent":{"krate":0,"index":1400},"children":[],"decl_id":null,"docs":" This is the size of a fragment.\n If a packet is too large it needs to be split in fragments.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":331},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":104607,"byte_end":104638,"line_start":25,"line_end":25,"column_start":9,"column_end":40},"name":"fragment_reassembly_buffer_size","qualname":"::config::NetworkConfig::fragment_reassembly_buffer_size","value":"usize","parent":{"krate":0,"index":1400},"children":[],"decl_id":null,"docs":" This is the size of the buffer that queues up fragments ready to be reassembled once the whole packet arrives.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":333},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":104729,"byte_end":104752,"line_start":27,"line_end":27,"column_start":9,"column_end":32},"name":"receive_buffer_max_size","qualname":"::config::NetworkConfig::receive_buffer_max_size","value":"usize","parent":{"krate":0,"index":1400},"children":[],"decl_id":null,"docs":" This is the size of the buffer the UDP socket reads it data into.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":335},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":105035,"byte_end":105055,"line_start":32,"line_end":32,"column_start":9,"column_end":29},"name":"rtt_smoothing_factor","qualname":"::config::NetworkConfig::rtt_smoothing_factor","value":"f32","parent":{"krate":0,"index":1400},"children":[],"decl_id":null,"docs":" This is the factor which will smooth out network jitter. So that if one packet is not arrived fast we don't wan't to directly transform to an bad network.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":337},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":105218,"byte_end":105231,"line_start":37,"line_end":37,"column_start":9,"column_end":22},"name":"rtt_max_value","qualname":"::config::NetworkConfig::rtt_max_value","value":"u16","parent":{"krate":0,"index":1400},"children":[],"decl_id":null,"docs":" This is the maximal round trip time (rtt) for packet.","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,105,110,102,114,97,115,116,114,117,99,116,117,114,101,47,99,104,97,110,110,101,108,115,47,114,101,108,105,97,98,108,101,95,99,104,97,110,110,101,108,46,114,115],"byte_start":7028,"byte_end":7043,"line_start":44,"line_end":44,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":106},{"krate":0,"index":108},{"krate":0,"index":110},{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,105,110,102,114,97,115,116,114,117,99,116,117,114,101,47,99,104,97,110,110,101,108,115,47,114,101,108,105,97,98,108,101,95,99,104,97,110,110,101,108,46,114,115],"byte_start":9370,"byte_end":9385,"line_start":97,"line_end":97,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":116},{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,105,110,102,114,97,115,116,114,117,99,116,117,114,101,47,99,104,97,110,110,101,108,115,47,115,101,113,117,101,110,99,101,100,95,99,104,97,110,110,101,108,46,114,115],"byte_start":13465,"byte_end":13481,"line_start":21,"line_end":21,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,105,110,102,114,97,115,116,114,117,99,116,117,114,101,47,99,104,97,110,110,101,108,115,47,115,101,113,117,101,110,99,101,100,95,99,104,97,110,110,101,108,46,114,115],"byte_start":13689,"byte_end":13705,"line_start":28,"line_end":28,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":136},{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,105,110,102,114,97,115,116,114,117,99,116,117,114,101,47,99,104,97,110,110,101,108,115,47,117,110,114,101,108,105,97,98,108,101,95,99,104,97,110,110,101,108,46,114,115],"byte_start":14883,"byte_end":14900,"line_start":23,"line_end":23,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":168},{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,105,110,102,114,97,115,116,114,117,99,116,117,114,101,47,99,104,97,110,110,101,108,115,47,117,110,114,101,108,105,97,98,108,101,95,99,104,97,110,110,101,108,46,114,115],"byte_start":15215,"byte_end":15232,"line_start":36,"line_end":36,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,105,110,102,114,97,115,116,114,117,99,116,117,114,101,47,100,101,108,105,118,101,114,121,95,109,101,116,104,111,100,46,114,115],"byte_start":20474,"byte_end":20488,"line_start":84,"line_end":84,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":200},{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,105,110,102,114,97,115,116,114,117,99,116,117,114,101,47,102,114,97,103,109,101,110,116,101,114,46,114,115],"byte_start":21625,"byte_end":21638,"line_start":16,"line_end":16,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":246},{"krate":0,"index":248},{"krate":0,"index":250},{"krate":0,"index":252},{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,112,97,99,107,101,116,47,104,101,97,100,101,114,47,97,99,107,101,100,95,112,97,99,107,101,116,95,104,101,97,100,101,114,46,114,115],"byte_start":30401,"byte_end":30418,"line_start":21,"line_end":21,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":302},{"krate":0,"index":304},{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,112,97,99,107,101,116,47,104,101,97,100,101,114,47,97,99,107,101,100,95,112,97,99,107,101,116,95,104,101,97,100,101,114,46,114,115],"byte_start":31563,"byte_end":31580,"line_start":56,"line_end":56,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":310},{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,112,97,99,107,101,116,47,104,101,97,100,101,114,47,97,99,107,101,100,95,112,97,99,107,101,116,95,104,101,97,100,101,114,46,114,115],"byte_start":31950,"byte_end":31967,"line_start":68,"line_end":68,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":316},{"krate":0,"index":318},{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,112,97,99,107,101,116,47,104,101,97,100,101,114,47,102,114,97,103,109,101,110,116,95,104,101,97,100,101,114,46,114,115],"byte_start":33872,"byte_end":33886,"line_start":18,"line_end":18,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":356},{"krate":0,"index":358},{"krate":0,"index":360},{"krate":0,"index":362},{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,112,97,99,107,101,116,47,104,101,97,100,101,114,47,102,114,97,103,109,101,110,116,95,104,101,97,100,101,114,46,114,115],"byte_start":34844,"byte_end":34858,"line_start":56,"line_end":56,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":368},{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,112,97,99,107,101,116,47,104,101,97,100,101,114,47,102,114,97,103,109,101,110,116,95,104,101,97,100,101,114,46,114,115],"byte_start":35521,"byte_end":35535,"line_start":79,"line_end":79,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":374},{"krate":0,"index":376},{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,112,97,99,107,101,116,47,104,101,97,100,101,114,47,104,101,97,114,116,95,98,101,97,116,95,104,101,97,100,101,114,46,114,115],"byte_start":39291,"byte_end":39306,"line_start":16,"line_end":16,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":428}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,112,97,99,107,101,116,47,104,101,97,100,101,114,47,104,101,97,114,116,95,98,101,97,116,95,104,101,97,100,101,114,46,114,115],"byte_start":39488,"byte_end":39503,"line_start":25,"line_end":25,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":432}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,112,97,99,107,101,116,47,104,101,97,100,101,114,47,104,101,97,114,116,95,98,101,97,116,95,104,101,97,100,101,114,46,114,115],"byte_start":39595,"byte_end":39610,"line_start":31,"line_end":31,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":436},{"krate":0,"index":438}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,112,97,99,107,101,116,47,104,101,97,100,101,114,47,104,101,97,114,116,95,98,101,97,116,95,104,101,97,100,101,114,46,114,115],"byte_start":39915,"byte_end":39930,"line_start":42,"line_end":42,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":442},{"krate":0,"index":444},{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,112,97,99,107,101,116,47,104,101,97,100,101,114,47,115,116,97,110,100,97,114,100,95,104,101,97,100,101,114,46,114,115],"byte_start":41048,"byte_end":41062,"line_start":21,"line_end":21,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":478}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,112,97,99,107,101,116,47,104,101,97,100,101,114,47,115,116,97,110,100,97,114,100,95,104,101,97,100,101,114,46,114,115],"byte_start":41368,"byte_end":41382,"line_start":32,"line_end":32,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":482}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,112,97,99,107,101,116,47,104,101,97,100,101,114,47,115,116,97,110,100,97,114,100,95,104,101,97,100,101,114,46,114,115],"byte_start":41530,"byte_end":41544,"line_start":38,"line_end":38,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":486},{"krate":0,"index":488}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,112,97,99,107,101,116,47,104,101,97,100,101,114,47,115,116,97,110,100,97,114,100,95,104,101,97,100,101,114,46,114,115],"byte_start":41930,"byte_end":41944,"line_start":50,"line_end":50,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":492},{"krate":0,"index":494},{"krate":0,"index":496}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,112,97,99,107,101,116,47,112,97,99,107,101,116,95,100,97,116,97,46,114,115],"byte_start":43775,"byte_end":43785,"line_start":10,"line_end":10,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":518},{"krate":0,"index":520},{"krate":0,"index":522},{"krate":0,"index":524}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,112,97,99,107,101,116,47,112,97,99,107,101,116,95,115,116,114,117,99,116,117,114,101,46,114,115],"byte_start":46039,"byte_end":46045,"line_start":15,"line_end":15,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":534},{"krate":0,"index":536},{"krate":0,"index":538},{"krate":0,"index":540},{"krate":0,"index":542},{"krate":0,"index":544}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,112,97,99,107,101,116,47,112,97,99,107,101,116,95,116,121,112,101,46,114,115],"byte_start":49264,"byte_end":49276,"line_start":31,"line_end":31,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":558},{"krate":0,"index":560}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,112,114,111,116,111,99,111,108,95,118,101,114,115,105,111,110,46,114,115],"byte_start":50203,"byte_end":50218,"line_start":16,"line_end":16,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":586},{"krate":0,"index":588},{"krate":0,"index":590}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,115,101,113,117,101,110,99,101,95,98,117,102,102,101,114,47,99,111,110,103,101,115,116,105,111,110,95,100,97,116,97,46,114,115],"byte_start":51546,"byte_end":51560,"line_start":10,"line_end":10,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,115,101,113,117,101,110,99,101,95,98,117,102,102,101,114,47,99,111,110,103,101,115,116,105,111,110,95,100,97,116,97,46,114,115],"byte_start":51735,"byte_end":51749,"line_start":19,"line_end":19,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,115,101,113,117,101,110,99,101,95,98,117,102,102,101,114,47,114,101,97,115,115,101,109,98,108,121,95,100,97,116,97,46,114,115],"byte_start":52240,"byte_end":52254,"line_start":13,"line_end":13,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,115,101,113,117,101,110,99,101,95,98,117,102,102,101,114,47,114,101,97,115,115,101,109,98,108,121,95,100,97,116,97,46,114,115],"byte_start":52607,"byte_end":52621,"line_start":25,"line_end":25,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":616}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,115,101,113,117,101,110,99,101,95,98,117,102,102,101,114,47,115,101,113,117,101,110,99,101,95,98,117,102,102,101,114,95,115,116,114,117,99,116,117,114,101,46,114,115],"byte_start":53108,"byte_end":53122,"line_start":12,"line_end":12,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":626},{"krate":0,"index":628},{"krate":0,"index":630},{"krate":0,"index":632},{"krate":0,"index":634},{"krate":0,"index":636},{"krate":0,"index":638}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,110,101,116,119,111,114,107,95,101,114,114,111,114,46,114,115],"byte_start":61149,"byte_end":61161,"line_start":63,"line_end":63,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":684},{"krate":0,"index":686}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,110,101,116,119,111,114,107,95,101,114,114,111,114,46,114,115],"byte_start":62069,"byte_end":62081,"line_start":88,"line_end":88,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":690}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,110,101,116,119,111,114,107,95,101,114,114,111,114,46,114,115],"byte_start":62189,"byte_end":62201,"line_start":94,"line_end":94,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":694},{"krate":0,"index":696}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,110,101,116,119,111,114,107,95,101,114,114,111,114,46,114,115],"byte_start":62629,"byte_end":62641,"line_start":106,"line_end":106,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":700}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,110,101,116,119,111,114,107,95,101,114,114,111,114,46,114,115],"byte_start":62820,"byte_end":62832,"line_start":114,"line_end":114,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":704}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,110,101,116,119,111,114,107,95,101,114,114,111,114,46,114,115],"byte_start":62964,"byte_end":62976,"line_start":120,"line_end":120,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":708}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,110,101,116,119,111,114,107,95,101,114,114,111,114,46,114,115],"byte_start":63117,"byte_end":63129,"line_start":126,"line_end":126,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":712}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,110,101,116,119,111,114,107,95,101,114,114,111,114,46,114,115],"byte_start":63274,"byte_end":63286,"line_start":132,"line_end":132,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":716}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,110,101,116,119,111,114,107,95,101,114,114,111,114,46,114,115],"byte_start":63429,"byte_end":63441,"line_start":138,"line_end":138,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":720}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,110,101,116,47,99,111,110,110,101,99,116,105,111,110,47,99,111,110,110,101,99,116,105,111,110,95,112,111,111,108,46,114,115],"byte_start":64975,"byte_end":64989,"line_start":19,"line_end":19,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":794},{"krate":0,"index":796},{"krate":0,"index":798},{"krate":0,"index":800},{"krate":0,"index":802}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,110,101,116,47,99,111,110,110,101,99,116,105,111,110,47,113,117,97,108,105,116,121,46,114,115],"byte_start":70538,"byte_end":70549,"line_start":21,"line_end":21,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":820},{"krate":0,"index":822},{"krate":0,"index":824},{"krate":0,"index":826},{"krate":0,"index":828}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,110,101,116,47,99,111,110,110,101,99,116,105,111,110,47,118,105,114,116,117,97,108,95,99,111,110,110,101,99,116,105,111,110,46,114,115],"byte_start":75626,"byte_end":75643,"line_start":36,"line_end":36,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":888},{"krate":0,"index":890},{"krate":0,"index":892},{"krate":0,"index":894},{"krate":0,"index":896}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,110,101,116,47,99,111,110,110,101,99,116,105,111,110,47,118,105,114,116,117,97,108,95,99,111,110,110,101,99,116,105,111,110,46,114,115],"byte_start":80042,"byte_end":80059,"line_start":144,"line_end":144,"column_start":21,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":900}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,110,101,116,47,99,111,110,110,101,99,116,105,111,110,47,116,105,109,101,111,117,116,95,116,104,114,101,97,100,46,114,115],"byte_start":84012,"byte_end":84025,"line_start":28,"line_end":28,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":936},{"krate":0,"index":938},{"krate":0,"index":940}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,110,101,116,47,101,120,116,101,114,110,97,108,95,97,99,107,46,114,115],"byte_start":86780,"byte_end":86792,"line_start":16,"line_end":16,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":974}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,110,101,116,47,108,105,110,107,95,99,111,110,100,105,116,105,111,110,101,114,46,114,115],"byte_start":91832,"byte_end":91847,"line_start":15,"line_end":15,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":984},{"krate":0,"index":986},{"krate":0,"index":988},{"krate":0,"index":990}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,110,101,116,47,108,111,99,97,108,95,97,99,107,46,114,115],"byte_start":92902,"byte_end":92916,"line_start":14,"line_end":14,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":998},{"krate":0,"index":1000},{"krate":0,"index":1002},{"krate":0,"index":1004}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,110,101,116,47,117,100,112,46,114,115],"byte_start":97940,"byte_end":97949,"line_start":25,"line_end":25,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1054},{"krate":0,"index":1056},{"krate":0,"index":1058},{"krate":0,"index":1060},{"krate":0,"index":1062},{"krate":0,"index":1064},{"krate":0,"index":1066}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":105258,"byte_end":105271,"line_start":40,"line_end":40,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1112}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2193,"byte_end":2198,"line_start":66,"line_end":66,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":646}},{"kind":"Mod","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2231,"byte_end":2234,"line_start":68,"line_end":68,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":742}},{"kind":"Mod","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,110,101,116,47,109,111,100,46,114,115],"byte_start":63704,"byte_end":63713,"line_start":8,"line_end":8,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":1068}},{"kind":"Mod","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2290,"byte_end":2296,"line_start":70,"line_end":70,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1100}}],"macro_refs":[],"relations":[{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,105,110,102,114,97,115,116,114,117,99,116,117,114,101,47,99,104,97,110,110,101,108,115,47,114,101,108,105,97,98,108,101,95,99,104,97,110,110,101,108,46,114,115],"byte_start":7028,"byte_end":7043,"line_start":44,"line_end":44,"column_start":6,"column_end":21},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":102},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,105,110,102,114,97,115,116,114,117,99,116,117,114,101,47,99,104,97,110,110,101,108,115,47,114,101,108,105,97,98,108,101,95,99,104,97,110,110,101,108,46,114,115],"byte_start":9370,"byte_end":9385,"line_start":97,"line_end":97,"column_start":18,"column_end":33},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":102},"to":{"krate":0,"index":190}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,105,110,102,114,97,115,116,114,117,99,116,117,114,101,47,99,104,97,110,110,101,108,115,47,115,101,113,117,101,110,99,101,100,95,99,104,97,110,110,101,108,46,114,115],"byte_start":13465,"byte_end":13481,"line_start":21,"line_end":21,"column_start":6,"column_end":22},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":1124},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,105,110,102,114,97,115,116,114,117,99,116,117,114,101,47,99,104,97,110,110,101,108,115,47,115,101,113,117,101,110,99,101,100,95,99,104,97,110,110,101,108,46,114,115],"byte_start":13689,"byte_end":13705,"line_start":28,"line_end":28,"column_start":18,"column_end":34},"kind":{"variant":"Impl","fields":[3]},"from":{"krate":0,"index":1124},"to":{"krate":0,"index":190}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,105,110,102,114,97,115,116,114,117,99,116,117,114,101,47,99,104,97,110,110,101,108,115,47,117,110,114,101,108,105,97,98,108,101,95,99,104,97,110,110,101,108,46,114,115],"byte_start":14883,"byte_end":14900,"line_start":23,"line_end":23,"column_start":6,"column_end":23},"kind":{"variant":"Impl","fields":[4]},"from":{"krate":0,"index":164},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,105,110,102,114,97,115,116,114,117,99,116,117,114,101,47,99,104,97,110,110,101,108,115,47,117,110,114,101,108,105,97,98,108,101,95,99,104,97,110,110,101,108,46,114,115],"byte_start":15215,"byte_end":15232,"line_start":36,"line_end":36,"column_start":18,"column_end":35},"kind":{"variant":"Impl","fields":[5]},"from":{"krate":0,"index":164},"to":{"krate":0,"index":190}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,105,110,102,114,97,115,116,114,117,99,116,117,114,101,47,100,101,108,105,118,101,114,121,95,109,101,116,104,111,100,46,114,115],"byte_start":20474,"byte_end":20488,"line_start":84,"line_end":84,"column_start":6,"column_end":20},"kind":{"variant":"Impl","fields":[6]},"from":{"krate":0,"index":1130},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,105,110,102,114,97,115,116,114,117,99,116,117,114,101,47,102,114,97,103,109,101,110,116,101,114,46,114,115],"byte_start":21625,"byte_end":21638,"line_start":16,"line_end":16,"column_start":6,"column_end":19},"kind":{"variant":"Impl","fields":[7]},"from":{"krate":0,"index":242},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,112,97,99,107,101,116,47,104,101,97,100,101,114,47,97,99,107,101,100,95,112,97,99,107,101,116,95,104,101,97,100,101,114,46,114,115],"byte_start":30401,"byte_end":30418,"line_start":21,"line_end":21,"column_start":6,"column_end":23},"kind":{"variant":"Impl","fields":[8]},"from":{"krate":0,"index":1154},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,112,97,99,107,101,116,47,104,101,97,100,101,114,47,97,99,107,101,100,95,112,97,99,107,101,116,95,104,101,97,100,101,114,46,114,115],"byte_start":31563,"byte_end":31580,"line_start":56,"line_end":56,"column_start":23,"column_end":40},"kind":{"variant":"Impl","fields":[9]},"from":{"krate":0,"index":1154},"to":{"krate":0,"index":382}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,112,97,99,107,101,116,47,104,101,97,100,101,114,47,97,99,107,101,100,95,112,97,99,107,101,116,95,104,101,97,100,101,114,46,114,115],"byte_start":31950,"byte_end":31967,"line_start":68,"line_end":68,"column_start":23,"column_end":40},"kind":{"variant":"Impl","fields":[10]},"from":{"krate":0,"index":1154},"to":{"krate":0,"index":392}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,112,97,99,107,101,116,47,104,101,97,100,101,114,47,102,114,97,103,109,101,110,116,95,104,101,97,100,101,114,46,114,115],"byte_start":33872,"byte_end":33886,"line_start":18,"line_end":18,"column_start":6,"column_end":20},"kind":{"variant":"Impl","fields":[11]},"from":{"krate":0,"index":1166},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,112,97,99,107,101,116,47,104,101,97,100,101,114,47,102,114,97,103,109,101,110,116,95,104,101,97,100,101,114,46,114,115],"byte_start":34844,"byte_end":34858,"line_start":56,"line_end":56,"column_start":23,"column_end":37},"kind":{"variant":"Impl","fields":[12]},"from":{"krate":0,"index":1166},"to":{"krate":0,"index":382}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,112,97,99,107,101,116,47,104,101,97,100,101,114,47,102,114,97,103,109,101,110,116,95,104,101,97,100,101,114,46,114,115],"byte_start":35521,"byte_end":35535,"line_start":79,"line_end":79,"column_start":23,"column_end":37},"kind":{"variant":"Impl","fields":[13]},"from":{"krate":0,"index":1166},"to":{"krate":0,"index":392}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,112,97,99,107,101,116,47,104,101,97,100,101,114,47,104,101,97,114,116,95,98,101,97,116,95,104,101,97,100,101,114,46,114,115],"byte_start":39291,"byte_end":39306,"line_start":16,"line_end":16,"column_start":6,"column_end":21},"kind":{"variant":"Impl","fields":[14]},"from":{"krate":0,"index":1178},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,112,97,99,107,101,116,47,104,101,97,100,101,114,47,104,101,97,114,116,95,98,101,97,116,95,104,101,97,100,101,114,46,114,115],"byte_start":39488,"byte_end":39503,"line_start":25,"line_end":25,"column_start":18,"column_end":33},"kind":{"variant":"Impl","fields":[15]},"from":{"krate":0,"index":1178},"to":{"krate":2,"index":2632}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,112,97,99,107,101,116,47,104,101,97,100,101,114,47,104,101,97,114,116,95,98,101,97,116,95,104,101,97,100,101,114,46,114,115],"byte_start":39595,"byte_end":39610,"line_start":31,"line_end":31,"column_start":23,"column_end":38},"kind":{"variant":"Impl","fields":[16]},"from":{"krate":0,"index":1178},"to":{"krate":0,"index":382}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,112,97,99,107,101,116,47,104,101,97,100,101,114,47,104,101,97,114,116,95,98,101,97,116,95,104,101,97,100,101,114,46,114,115],"byte_start":39915,"byte_end":39930,"line_start":42,"line_end":42,"column_start":23,"column_end":38},"kind":{"variant":"Impl","fields":[17]},"from":{"krate":0,"index":1178},"to":{"krate":0,"index":392}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,112,97,99,107,101,116,47,104,101,97,100,101,114,47,115,116,97,110,100,97,114,100,95,104,101,97,100,101,114,46,114,115],"byte_start":41048,"byte_end":41062,"line_start":21,"line_end":21,"column_start":6,"column_end":20},"kind":{"variant":"Impl","fields":[18]},"from":{"krate":0,"index":1190},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,112,97,99,107,101,116,47,104,101,97,100,101,114,47,115,116,97,110,100,97,114,100,95,104,101,97,100,101,114,46,114,115],"byte_start":41368,"byte_end":41382,"line_start":32,"line_end":32,"column_start":18,"column_end":32},"kind":{"variant":"Impl","fields":[19]},"from":{"krate":0,"index":1190},"to":{"krate":2,"index":2632}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,112,97,99,107,101,116,47,104,101,97,100,101,114,47,115,116,97,110,100,97,114,100,95,104,101,97,100,101,114,46,114,115],"byte_start":41530,"byte_end":41544,"line_start":38,"line_end":38,"column_start":23,"column_end":37},"kind":{"variant":"Impl","fields":[20]},"from":{"krate":0,"index":1190},"to":{"krate":0,"index":382}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,112,97,99,107,101,116,47,104,101,97,100,101,114,47,115,116,97,110,100,97,114,100,95,104,101,97,100,101,114,46,114,115],"byte_start":41930,"byte_end":41944,"line_start":50,"line_end":50,"column_start":23,"column_end":37},"kind":{"variant":"Impl","fields":[21]},"from":{"krate":0,"index":1190},"to":{"krate":0,"index":392}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,112,97,99,107,101,116,47,112,97,99,107,101,116,95,100,97,116,97,46,114,115],"byte_start":43775,"byte_end":43785,"line_start":10,"line_end":10,"column_start":6,"column_end":16},"kind":{"variant":"Impl","fields":[22]},"from":{"krate":0,"index":1202},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,112,97,99,107,101,116,47,112,97,99,107,101,116,95,115,116,114,117,99,116,117,114,101,46,114,115],"byte_start":46039,"byte_end":46045,"line_start":15,"line_end":15,"column_start":6,"column_end":12},"kind":{"variant":"Impl","fields":[23]},"from":{"krate":0,"index":1212},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,112,97,99,107,101,116,47,112,97,99,107,101,116,95,116,121,112,101,46,114,115],"byte_start":49264,"byte_end":49276,"line_start":31,"line_end":31,"column_start":6,"column_end":18},"kind":{"variant":"Impl","fields":[24]},"from":{"krate":0,"index":1232},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,112,114,111,116,111,99,111,108,95,118,101,114,115,105,111,110,46,114,115],"byte_start":50203,"byte_end":50218,"line_start":16,"line_end":16,"column_start":6,"column_end":21},"kind":{"variant":"Impl","fields":[25]},"from":{"krate":0,"index":582},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,115,101,113,117,101,110,99,101,95,98,117,102,102,101,114,47,99,111,110,103,101,115,116,105,111,110,95,100,97,116,97,46,114,115],"byte_start":51546,"byte_end":51560,"line_start":10,"line_end":10,"column_start":6,"column_end":20},"kind":{"variant":"Impl","fields":[26]},"from":{"krate":0,"index":1272},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,115,101,113,117,101,110,99,101,95,98,117,102,102,101,114,47,99,111,110,103,101,115,116,105,111,110,95,100,97,116,97,46,114,115],"byte_start":51735,"byte_end":51749,"line_start":19,"line_end":19,"column_start":18,"column_end":32},"kind":{"variant":"Impl","fields":[27]},"from":{"krate":0,"index":1272},"to":{"krate":2,"index":2632}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,115,101,113,117,101,110,99,101,95,98,117,102,102,101,114,47,114,101,97,115,115,101,109,98,108,121,95,100,97,116,97,46,114,115],"byte_start":52240,"byte_end":52254,"line_start":13,"line_end":13,"column_start":6,"column_end":20},"kind":{"variant":"Impl","fields":[28]},"from":{"krate":0,"index":1278},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,115,101,113,117,101,110,99,101,95,98,117,102,102,101,114,47,114,101,97,115,115,101,109,98,108,121,95,100,97,116,97,46,114,115],"byte_start":52607,"byte_end":52621,"line_start":25,"line_end":25,"column_start":18,"column_end":32},"kind":{"variant":"Impl","fields":[29]},"from":{"krate":0,"index":1278},"to":{"krate":2,"index":2632}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,115,101,113,117,101,110,99,101,95,98,117,102,102,101,114,47,115,101,113,117,101,110,99,101,95,98,117,102,102,101,114,95,115,116,114,117,99,116,117,114,101,46,114,115],"byte_start":53108,"byte_end":53122,"line_start":12,"line_end":12,"column_start":9,"column_end":23},"kind":{"variant":"Impl","fields":[30]},"from":{"krate":0,"index":622},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,110,101,116,119,111,114,107,95,101,114,114,111,114,46,114,115],"byte_start":61149,"byte_end":61161,"line_start":63,"line_end":63,"column_start":15,"column_end":27},"kind":{"variant":"Impl","fields":[37]},"from":{"krate":0,"index":1374},"to":{"krate":16,"index":146}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,110,101,116,119,111,114,107,95,101,114,114,111,114,46,114,115],"byte_start":62069,"byte_end":62081,"line_start":88,"line_end":88,"column_start":18,"column_end":30},"kind":{"variant":"Impl","fields":[38]},"from":{"krate":0,"index":1374},"to":{"krate":2,"index":8430}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,110,101,116,119,111,114,107,95,101,114,114,111,114,46,114,115],"byte_start":62189,"byte_end":62201,"line_start":94,"line_end":94,"column_start":6,"column_end":18},"kind":{"variant":"Impl","fields":[39]},"from":{"krate":0,"index":1374},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,110,101,116,119,111,114,107,95,101,114,114,111,114,46,114,115],"byte_start":62629,"byte_end":62641,"line_start":106,"line_end":106,"column_start":33,"column_end":45},"kind":{"variant":"Impl","fields":[40]},"from":{"krate":0,"index":1374},"to":{"krate":2,"index":2656}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,110,101,116,119,111,114,107,95,101,114,114,111,114,46,114,115],"byte_start":62820,"byte_end":62832,"line_start":114,"line_end":114,"column_start":42,"column_end":54},"kind":{"variant":"Impl","fields":[41]},"from":{"krate":0,"index":1374},"to":{"krate":2,"index":2656}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,110,101,116,119,111,114,107,95,101,114,114,111,114,46,114,115],"byte_start":62964,"byte_end":62976,"line_start":120,"line_end":120,"column_start":26,"column_end":38},"kind":{"variant":"Impl","fields":[42]},"from":{"krate":0,"index":1374},"to":{"krate":2,"index":2656}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,110,101,116,119,111,114,107,95,101,114,114,111,114,46,114,115],"byte_start":63117,"byte_end":63129,"line_start":126,"line_end":126,"column_start":34,"column_end":46},"kind":{"variant":"Impl","fields":[43]},"from":{"krate":0,"index":1374},"to":{"krate":2,"index":2656}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,110,101,116,119,111,114,107,95,101,114,114,111,114,46,114,115],"byte_start":63274,"byte_end":63286,"line_start":132,"line_end":132,"column_start":32,"column_end":44},"kind":{"variant":"Impl","fields":[44]},"from":{"krate":0,"index":1374},"to":{"krate":2,"index":2656}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,101,114,114,111,114,47,110,101,116,119,111,114,107,95,101,114,114,111,114,46,114,115],"byte_start":63429,"byte_end":63441,"line_start":138,"line_end":138,"column_start":34,"column_end":46},"kind":{"variant":"Impl","fields":[45]},"from":{"krate":0,"index":1374},"to":{"krate":2,"index":2656}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,110,101,116,47,99,111,110,110,101,99,116,105,111,110,47,99,111,110,110,101,99,116,105,111,110,95,112,111,111,108,46,114,115],"byte_start":64975,"byte_end":64989,"line_start":19,"line_end":19,"column_start":6,"column_end":20},"kind":{"variant":"Impl","fields":[46]},"from":{"krate":0,"index":790},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,110,101,116,47,99,111,110,110,101,99,116,105,111,110,47,113,117,97,108,105,116,121,46,114,115],"byte_start":70538,"byte_end":70549,"line_start":21,"line_end":21,"column_start":6,"column_end":17},"kind":{"variant":"Impl","fields":[47]},"from":{"krate":0,"index":816},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,110,101,116,47,99,111,110,110,101,99,116,105,111,110,47,118,105,114,116,117,97,108,95,99,111,110,110,101,99,116,105,111,110,46,114,115],"byte_start":75626,"byte_end":75643,"line_start":36,"line_end":36,"column_start":6,"column_end":23},"kind":{"variant":"Impl","fields":[48]},"from":{"krate":0,"index":884},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,110,101,116,47,99,111,110,110,101,99,116,105,111,110,47,118,105,114,116,117,97,108,95,99,111,110,110,101,99,116,105,111,110,46,114,115],"byte_start":80042,"byte_end":80059,"line_start":144,"line_end":144,"column_start":21,"column_end":38},"kind":{"variant":"Impl","fields":[49]},"from":{"krate":0,"index":884},"to":{"krate":2,"index":8426}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,110,101,116,47,99,111,110,110,101,99,116,105,111,110,47,116,105,109,101,111,117,116,95,116,104,114,101,97,100,46,114,115],"byte_start":84012,"byte_end":84025,"line_start":28,"line_end":28,"column_start":6,"column_end":19},"kind":{"variant":"Impl","fields":[50]},"from":{"krate":0,"index":932},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,110,101,116,47,101,120,116,101,114,110,97,108,95,97,99,107,46,114,115],"byte_start":86780,"byte_end":86792,"line_start":16,"line_end":16,"column_start":6,"column_end":18},"kind":{"variant":"Impl","fields":[51]},"from":{"krate":0,"index":1380},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,110,101,116,47,108,105,110,107,95,99,111,110,100,105,116,105,111,110,101,114,46,114,115],"byte_start":91832,"byte_end":91847,"line_start":15,"line_end":15,"column_start":6,"column_end":21},"kind":{"variant":"Impl","fields":[52]},"from":{"krate":0,"index":980},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,110,101,116,47,108,111,99,97,108,95,97,99,107,46,114,115],"byte_start":92902,"byte_end":92916,"line_start":14,"line_end":14,"column_start":6,"column_end":20},"kind":{"variant":"Impl","fields":[53]},"from":{"krate":0,"index":1390},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,110,101,116,47,117,100,112,46,114,115],"byte_start":97940,"byte_end":97949,"line_start":25,"line_end":25,"column_start":6,"column_end":15},"kind":{"variant":"Impl","fields":[54]},"from":{"krate":0,"index":1050},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,109,105,110,97,114,45,48,46,49,46,48,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":105258,"byte_end":105271,"line_start":40,"line_end":40,"column_start":18,"column_end":31},"kind":{"variant":"Impl","fields":[55]},"from":{"krate":0,"index":1400},"to":{"krate":2,"index":2632}}]}