{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.18.2","compilation":{"directory":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54],"program":"/Users/Kumar/.rustup/toolchains/nightly-2019-02-27-x86_64-apple-darwin/bin/rls","arguments":["--edition=2018","--crate-name","lyon_geom","/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/lyon_geom-0.12.6/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=c16c0aefb86d783e","-C","extra-filename=-c16c0aefb86d783e","--out-dir","/Users/Kumar/personal/workspace/rust/mayhem-galactica/target/rls/debug/deps","-L","dependency=/Users/Kumar/personal/workspace/rust/mayhem-galactica/target/rls/debug/deps","--extern","arrayvec=/Users/Kumar/personal/workspace/rust/mayhem-galactica/target/rls/debug/deps/libarrayvec-91ce23544bce0167.rmeta","--extern","euclid=/Users/Kumar/personal/workspace/rust/mayhem-galactica/target/rls/debug/deps/libeuclid-c60925ea04c70d36.rmeta","--extern","num_traits=/Users/Kumar/personal/workspace/rust/mayhem-galactica/target/rls/debug/deps/libnum_traits-43b4e1cb83c4310d.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/Kumar/.rustup/toolchains/nightly-2019-02-27-x86_64-apple-darwin"],"output":[47,85,115,101,114,115,47,75,117,109,97,114,47,112,101,114,115,111,110,97,108,47,119,111,114,107,115,112,97,99,101,47,114,117,115,116,47,109,97,121,104,101,109,45,103,97,108,97,99,116,105,99,97,47,116,97,114,103,101,116,47,114,108,115,47,100,101,98,117,103,47,100,101,112,115,47,108,105,98,108,121,111,110,95,103,101,111,109,45,99,49,54,99,48,97,101,102,98,56,54,100,55,56,51,101,46,114,109,101,116,97]},"prelude":{"crate_id":{"name":"lyon_geom","disambiguator":[2160149825299557887,13084842208934777401]},"crate_root":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/lyon_geom-0.12.6/src","external_crates":[{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/lyon_geom-0.12.6/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[17365010580081952725,18206160307474953630]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/lyon_geom-0.12.6/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[6760693024494354245,14002820984158080208]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/lyon_geom-0.12.6/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[199464317358532175,14697293645914925506]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/lyon_geom-0.12.6/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13558819658400235840,6800895293433658904]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/lyon_geom-0.12.6/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[18425220944332119967,14239145101900690943]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/lyon_geom-0.12.6/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10854247164472963508,11478657302719725741]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/lyon_geom-0.12.6/src/lib.rs","num":7,"id":{"name":"rustc_demangle","disambiguator":[4168194895173621532,15234647754953002462]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/lyon_geom-0.12.6/src/lib.rs","num":8,"id":{"name":"unwind","disambiguator":[12306654840912142307,10869972980572175885]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/lyon_geom-0.12.6/src/lib.rs","num":9,"id":{"name":"backtrace_sys","disambiguator":[1531625639640313062,14514900902579754273]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/lyon_geom-0.12.6/src/lib.rs","num":10,"id":{"name":"panic_unwind","disambiguator":[13209889598193010227,616765238597587583]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/lyon_geom-0.12.6/src/lib.rs","num":11,"id":{"name":"arrayvec","disambiguator":[10100321813570616869,17214766525115099071]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/lyon_geom-0.12.6/src/lib.rs","num":12,"id":{"name":"euclid","disambiguator":[3119000872072569069,14219903543265371716]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/lyon_geom-0.12.6/src/lib.rs","num":13,"id":{"name":"euclid_macros","disambiguator":[14853751009846187764,16066078616758062316]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/lyon_geom-0.12.6/src/lib.rs","num":14,"id":{"name":"num_traits","disambiguator":[11661258600980181624,3408761971977771538]}}],"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":11761,"line_start":1,"line_end":280,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":11,"index":0},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6770,"byte_end":6778,"line_start":78,"line_end":78,"column_start":9,"column_end":17},"alias_span":null,"name":"arrayvec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":12,"index":0},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6788,"byte_end":6794,"line_start":79,"line_end":79,"column_start":9,"column_end":15},"alias_span":null,"name":"euclid","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":834},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":46063,"byte_end":46072,"line_start":1,"line_end":1,"column_start":31,"column_end":40},"alias_span":null,"name":"Flattened","value":"","parent":{"krate":0,"index":310}},{"kind":"Use","ref_id":{"krate":0,"index":1478},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7138,"byte_end":7160,"line_start":98,"line_end":98,"column_start":34,"column_end":56},"alias_span":null,"name":"QuadraticBezierSegment","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1526},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7206,"byte_end":7224,"line_start":100,"line_end":100,"column_start":30,"column_end":48},"alias_span":null,"name":"CubicBezierSegment","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1628},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7267,"byte_end":7275,"line_start":102,"line_end":102,"column_start":27,"column_end":35},"alias_span":null,"name":"Triangle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1646},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7315,"byte_end":7326,"line_start":104,"line_end":104,"column_start":23,"column_end":34},"alias_span":null,"name":"LineSegment","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1664},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7328,"byte_end":7332,"line_start":104,"line_end":104,"column_start":36,"column_end":40},"alias_span":null,"name":"Line","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1676},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7334,"byte_end":7346,"line_start":104,"line_end":104,"column_start":42,"column_end":54},"alias_span":null,"name":"LineEquation","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1592},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7385,"byte_end":7388,"line_start":106,"line_end":106,"column_start":22,"column_end":25},"alias_span":null,"name":"Arc","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1574},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7390,"byte_end":7396,"line_start":106,"line_end":106,"column_start":27,"column_end":33},"alias_span":null,"name":"SvgArc","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1610},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7398,"byte_end":7406,"line_start":106,"line_end":106,"column_start":35,"column_end":43},"alias_span":null,"name":"ArcFlags","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":36},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7449,"byte_end":7456,"line_start":108,"line_end":108,"column_start":26,"column_end":33},"alias_span":null,"name":"Segment","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1460},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7458,"byte_end":7471,"line_start":108,"line_end":108,"column_start":35,"column_end":48},"alias_span":null,"name":"BezierSegment","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1698},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7515,"byte_end":7524,"line_start":110,"line_end":110,"column_start":27,"column_end":36},"alias_span":null,"name":"Monotonic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":12,"index":1262},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11243,"byte_end":11247,"line_start":259,"line_end":259,"column_start":21,"column_end":25},"alias_span":null,"name":"rect","value":"","parent":{"krate":0,"index":1418}},{"kind":"Use","ref_id":{"krate":12,"index":3116},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11313,"byte_end":11317,"line_start":262,"line_end":262,"column_start":21,"column_end":25},"alias_span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11321,"byte_end":11327,"line_start":262,"line_end":262,"column_start":29,"column_end":35},"name":"vector","value":"","parent":{"krate":0,"index":1418}},{"kind":"Use","ref_id":{"krate":12,"index":1030},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11392,"byte_end":11398,"line_start":265,"line_end":265,"column_start":21,"column_end":27},"alias_span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11402,"byte_end":11407,"line_start":265,"line_end":265,"column_start":31,"column_end":36},"name":"point","value":"","parent":{"krate":0,"index":1418}},{"kind":"Use","ref_id":{"krate":12,"index":1938},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11471,"byte_end":11476,"line_start":268,"line_end":268,"column_start":21,"column_end":26},"alias_span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11480,"byte_end":11484,"line_start":268,"line_end":268,"column_start":30,"column_end":34},"name":"size","value":"","parent":{"krate":0,"index":1418}},{"kind":"Use","ref_id":{"krate":0,"index":36},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11673,"byte_end":11680,"line_start":278,"line_end":278,"column_start":30,"column_end":37},"alias_span":null,"name":"Segment","value":"","parent":{"krate":0,"index":1450}},{"kind":"Use","ref_id":{"krate":0,"index":84},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11682,"byte_end":11698,"line_start":278,"line_end":278,"column_start":39,"column_end":55},"alias_span":null,"name":"FlattenedForEach","value":"","parent":{"krate":0,"index":1450}},{"kind":"Use","ref_id":{"krate":0,"index":88},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11700,"byte_end":11714,"line_start":278,"line_end":278,"column_start":57,"column_end":71},"alias_span":null,"name":"FlatteningStep","value":"","parent":{"krate":0,"index":1450}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":11761,"line_start":1,"line_end":280,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/lyon_geom-0.12.6/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":140},{"krate":0,"index":310},{"krate":0,"index":522},{"krate":0,"index":714},{"krate":0,"index":744},{"krate":0,"index":768},{"krate":0,"index":824},{"krate":0,"index":860},{"krate":0,"index":902},{"krate":0,"index":1108},{"krate":0,"index":1240},{"krate":0,"index":1242},{"krate":0,"index":1244},{"krate":0,"index":1248},{"krate":0,"index":1256},{"krate":0,"index":1264},{"krate":0,"index":1270},{"krate":0,"index":1272},{"krate":0,"index":1394},{"krate":0,"index":1418},{"krate":0,"index":1450}],"decl_id":null,"docs":" Simple 2D geometric primitives on top of euclid.","sig":null,"attributes":[{"value":"deny(bare_trait_objects)","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":74,"byte_end":102,"line_start":2,"line_end":2,"column_start":1,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":36},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,115,101,103,109,101,110,116,46,114,115],"byte_start":11982,"byte_end":11989,"line_start":8,"line_end":8,"column_start":11,"column_end":18},"name":"Segment","qualname":"::segment::Segment","value":"Segment: Copy + Sized","parent":null,"children":[{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":42},{"krate":0,"index":44},{"krate":0,"index":46},{"krate":0,"index":48},{"krate":0,"index":50},{"krate":0,"index":52},{"krate":0,"index":54},{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":60},{"krate":0,"index":62},{"krate":0,"index":64},{"krate":0,"index":66}],"decl_id":null,"docs":" Common APIs to segment types.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":38},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,115,101,103,109,101,110,116,46,114,115],"byte_start":12015,"byte_end":12021,"line_start":9,"line_end":9,"column_start":10,"column_end":16},"name":"Scalar","qualname":"::segment::Segment::Scalar","value":"type Scalar: Scalar;","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,115,101,103,109,101,110,116,46,114,115],"byte_start":12067,"byte_end":12071,"line_start":12,"line_end":12,"column_start":8,"column_end":12},"name":"from","qualname":"::segment::Segment::from","value":"fn (&self) -> Point<Self::Scalar>","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":" Start of the curve.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,115,101,103,109,101,110,116,46,114,115],"byte_start":12137,"byte_end":12139,"line_start":15,"line_end":15,"column_start":8,"column_end":10},"name":"to","qualname":"::segment::Segment::to","value":"fn (&self) -> Point<Self::Scalar>","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":" End of the curve.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,115,101,103,109,101,110,116,46,114,115],"byte_start":12240,"byte_end":12246,"line_start":18,"line_end":18,"column_start":8,"column_end":14},"name":"sample","qualname":"::segment::Segment::sample","value":"fn (&self, t: Self::Scalar) -> Point<Self::Scalar>","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":" Sample the curve at t (expecting t between 0 and 1).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,115,101,103,109,101,110,116,46,114,115],"byte_start":12356,"byte_end":12357,"line_start":21,"line_end":21,"column_start":8,"column_end":9},"name":"x","qualname":"::segment::Segment::x","value":"fn (&self, t: Self::Scalar) -> Self::Scalar","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":" Sample x at t (expecting t between 0 and 1).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,115,101,103,109,101,110,116,46,114,115],"byte_start":12480,"byte_end":12481,"line_start":24,"line_end":24,"column_start":8,"column_end":9},"name":"y","qualname":"::segment::Segment::y","value":"fn (&self, t: Self::Scalar) -> Self::Scalar","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":" Sample y at t (expecting t between 0 and 1).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,115,101,103,109,101,110,116,46,114,115],"byte_start":12617,"byte_end":12627,"line_start":27,"line_end":27,"column_start":8,"column_end":18},"name":"derivative","qualname":"::segment::Segment::derivative","value":"fn (&self, t: Self::Scalar) -> Vector<Self::Scalar>","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":" Sample the derivative at t (expecting t between 0 and 1).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,115,101,103,109,101,110,116,46,114,115],"byte_start":12749,"byte_end":12751,"line_start":30,"line_end":30,"column_start":8,"column_end":10},"name":"dx","qualname":"::segment::Segment::dx","value":"fn (&self, t: Self::Scalar) -> Self::Scalar","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":" Sample x derivative at t (expecting t between 0 and 1).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,115,101,103,109,101,110,116,46,114,115],"byte_start":12889,"byte_end":12891,"line_start":33,"line_end":33,"column_start":8,"column_end":10},"name":"dy","qualname":"::segment::Segment::dy","value":"fn (&self, t: Self::Scalar) -> Self::Scalar","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":" Sample y derivative at t (expecting t between 0 and 1).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,115,101,103,109,101,110,116,46,114,115],"byte_start":13011,"byte_end":13016,"line_start":36,"line_end":36,"column_start":8,"column_end":13},"name":"split","qualname":"::segment::Segment::split","value":"fn (&self, t: Self::Scalar) -> (Self, Self)","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":" Split this curve into two sub-curves.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,115,101,103,109,101,110,116,46,114,115],"byte_start":13115,"byte_end":13127,"line_start":39,"line_end":39,"column_start":8,"column_end":20},"name":"before_split","qualname":"::segment::Segment::before_split","value":"fn (&self, t: Self::Scalar) -> Self","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":" Return the curve before the split point.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,115,101,103,109,101,110,116,46,114,115],"byte_start":13217,"byte_end":13228,"line_start":42,"line_end":42,"column_start":8,"column_end":19},"name":"after_split","qualname":"::segment::Segment::after_split","value":"fn (&self, t: Self::Scalar) -> Self","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":" Return the curve after the split point.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,115,101,103,109,101,110,116,46,114,115],"byte_start":13394,"byte_end":13405,"line_start":47,"line_end":47,"column_start":8,"column_end":19},"name":"split_range","qualname":"::segment::Segment::split_range","value":"fn (&self, t_range: Range<Self::Scalar>) -> Self","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":" Return the curve inside a given range of t.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,115,101,103,109,101,110,116,46,114,115],"byte_start":13503,"byte_end":13507,"line_start":50,"line_end":50,"column_start":8,"column_end":12},"name":"flip","qualname":"::segment::Segment::flip","value":"fn (&self) -> Self","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":" Swap the direction of the segment.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,115,101,103,109,101,110,116,46,114,115],"byte_start":13607,"byte_end":13625,"line_start":53,"line_end":53,"column_start":8,"column_end":26},"name":"approximate_length","qualname":"::segment::Segment::approximate_length","value":"fn (&self, tolerance: Self::Scalar) -> Self::Scalar","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":" Compute the length of the segment using a flattened approximation.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":70},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,115,101,103,109,101,110,116,46,114,115],"byte_start":13712,"byte_end":13718,"line_start":57,"line_end":57,"column_start":10,"column_end":16},"name":"Scalar","qualname":"::segment::BoundingRect::Scalar","value":"type Scalar: Scalar;","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":84},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,115,101,103,109,101,110,116,46,114,115],"byte_start":14636,"byte_end":14652,"line_start":81,"line_end":81,"column_start":11,"column_end":27},"name":"FlattenedForEach","qualname":"::segment::FlattenedForEach","value":"FlattenedForEach: Segment","parent":null,"children":[{"krate":0,"index":86}],"decl_id":null,"docs":" Types that implement call-back based iteration\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,115,101,103,109,101,110,116,46,114,115],"byte_start":14741,"byte_end":14759,"line_start":83,"line_end":83,"column_start":8,"column_end":26},"name":"for_each_flattened","qualname":"::segment::FlattenedForEach::for_each_flattened","value":"fn <F> (&self, tolerance: Self::Scalar, call_back: &mut F) -> ()","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Iterates through the curve invoking a callback at each point.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":88},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,115,101,103,109,101,110,116,46,114,115],"byte_start":14939,"byte_end":14953,"line_start":87,"line_end":87,"column_start":11,"column_end":25},"name":"FlatteningStep","qualname":"::segment::FlatteningStep","value":"FlatteningStep: FlattenedForEach","parent":null,"children":[{"krate":0,"index":90},{"krate":0,"index":92}],"decl_id":null,"docs":" Types that implement local flattening approximation at the start of the curve.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,115,101,103,109,101,110,116,46,114,115],"byte_start":15090,"byte_end":15105,"line_start":90,"line_end":90,"column_start":8,"column_end":23},"name":"flattening_step","qualname":"::segment::FlatteningStep::flattening_step","value":"fn (&self, tolerance: Self::Scalar) -> Self::Scalar","parent":{"krate":0,"index":88},"children":[],"decl_id":null,"docs":" Find the interval of the begining of the curve that can be approximated with a\n line segment.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,115,101,103,109,101,110,116,46,114,115],"byte_start":15281,"byte_end":15290,"line_start":94,"line_end":94,"column_start":8,"column_end":17},"name":"flattened","qualname":"::segment::FlatteningStep::flattened","value":"fn (self, tolerance: Self::Scalar) -> Flattened<Self::Scalar, Self>","parent":{"krate":0,"index":88},"children":[],"decl_id":null,"docs":" Returns the flattened representation of the curve as an iterator, starting *after* the\n current point.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":98},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,115,101,103,109,101,110,116,46,114,115],"byte_start":16142,"byte_end":16151,"line_start":121,"line_end":121,"column_start":12,"column_end":21},"name":"Flattened","qualname":"::segment::Flattened","value":"Flattened {  }","parent":null,"children":[{"krate":0,"index":29},{"krate":0,"index":31},{"krate":0,"index":33}],"decl_id":null,"docs":" An iterator over a generic curve segment that yields line segments approximating the\n curve for a given approximation threshold.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,115,101,103,109,101,110,116,46,114,115],"byte_start":16275,"byte_end":16278,"line_start":128,"line_end":128,"column_start":12,"column_end":15},"name":"new","qualname":"<Flattened<S, T>>::new","value":"fn (curve: T, tolerance: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":409},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,115,101,103,109,101,110,116,46,114,115],"byte_start":18370,"byte_end":18376,"line_start":192,"line_end":192,"column_start":5,"column_end":11},"name":"Linear","qualname":"::segment::BezierSegment::Linear","value":"BezierSegment::Linear(LineSegment<S>)","parent":{"krate":0,"index":1460},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":413},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,115,101,103,109,101,110,116,46,114,115],"byte_start":18398,"byte_end":18407,"line_start":193,"line_end":193,"column_start":5,"column_end":14},"name":"Quadratic","qualname":"::segment::BezierSegment::Quadratic","value":"BezierSegment::Quadratic(QuadraticBezierSegment<S>)","parent":{"krate":0,"index":1460},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":417},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,115,101,103,109,101,110,116,46,114,115],"byte_start":18440,"byte_end":18445,"line_start":194,"line_end":194,"column_start":5,"column_end":10},"name":"Cubic","qualname":"::segment::BezierSegment::Cubic","value":"BezierSegment::Cubic(CubicBezierSegment<S>)","parent":{"krate":0,"index":1460},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1460},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,115,101,103,109,101,110,116,46,114,115],"byte_start":18347,"byte_end":18360,"line_start":191,"line_end":191,"column_start":10,"column_end":23},"name":"BezierSegment","qualname":"::segment::BezierSegment","value":"BezierSegment::{Linear, Quadratic, Cubic}","parent":null,"children":[{"krate":0,"index":409},{"krate":0,"index":413},{"krate":0,"index":417}],"decl_id":null,"docs":" Either a cubic, quadratic or linear bézier segment.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,115,101,103,109,101,110,116,46,114,115],"byte_start":18338,"byte_end":18471,"line_start":191,"line_end":195,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,115,101,103,109,101,110,116,46,114,115],"byte_start":18533,"byte_end":18539,"line_start":199,"line_end":199,"column_start":12,"column_end":18},"name":"sample","qualname":"<BezierSegment<S>>::sample","value":"fn (&self, t: S) -> Point<S>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,115,101,103,109,101,110,116,46,114,115],"byte_start":18512,"byte_end":18521,"line_start":198,"line_end":198,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,115,101,103,109,101,110,116,46,114,115],"byte_start":18827,"byte_end":18831,"line_start":208,"line_end":208,"column_start":12,"column_end":16},"name":"from","qualname":"<BezierSegment<S>>::from","value":"fn (&self) -> Point<S>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,115,101,103,109,101,110,116,46,114,115],"byte_start":18806,"byte_end":18815,"line_start":207,"line_end":207,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,115,101,103,109,101,110,116,46,114,115],"byte_start":19098,"byte_end":19100,"line_start":217,"line_end":217,"column_start":12,"column_end":14},"name":"to","qualname":"<BezierSegment<S>>::to","value":"fn (&self) -> Point<S>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,115,101,103,109,101,110,116,46,114,115],"byte_start":19077,"byte_end":19086,"line_start":216,"line_end":216,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,115,101,103,109,101,110,116,46,114,115],"byte_start":19361,"byte_end":19370,"line_start":226,"line_end":226,"column_start":12,"column_end":21},"name":"is_linear","qualname":"<BezierSegment<S>>::is_linear","value":"fn (&self, tolerance: S) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,115,101,103,109,101,110,116,46,114,115],"byte_start":19340,"byte_end":19349,"line_start":225,"line_end":225,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,115,101,103,109,101,110,116,46,114,115],"byte_start":19666,"byte_end":19674,"line_start":235,"line_end":235,"column_start":12,"column_end":20},"name":"baseline","qualname":"<BezierSegment<S>>::baseline","value":"fn (&self) -> LineSegment<S>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,115,101,103,109,101,110,116,46,114,115],"byte_start":19645,"byte_end":19654,"line_start":234,"line_end":234,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,115,101,103,109,101,110,116,46,114,115],"byte_start":19991,"byte_end":19996,"line_start":244,"line_end":244,"column_start":12,"column_end":17},"name":"split","qualname":"<BezierSegment<S>>::split","value":"fn (&self, t: S) -> (BezierSegment<S>, BezierSegment<S>)","parent":null,"children":[],"decl_id":null,"docs":" Split this segment into two sub-segments.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":140},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,113,117,97,100,114,97,116,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"quadratic_bezier","qualname":"::quadratic_bezier","value":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/lyon_geom-0.12.6/src/quadratic_bezier.rs","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":154},{"krate":0,"index":156},{"krate":0,"index":168},{"krate":0,"index":170},{"krate":0,"index":180},{"krate":0,"index":182},{"krate":0,"index":184},{"krate":0,"index":186},{"krate":0,"index":188},{"krate":0,"index":1478},{"krate":0,"index":1494},{"krate":0,"index":1490},{"krate":0,"index":1486},{"krate":0,"index":1480},{"krate":0,"index":190},{"krate":0,"index":286},{"krate":0,"index":288},{"krate":0,"index":304},{"krate":0,"index":308}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":188},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,113,117,97,100,114,97,116,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":21506,"byte_end":21515,"line_start":13,"line_end":13,"column_start":10,"column_end":19},"name":"Flattened","qualname":"::quadratic_bezier::Flattened","value":"segment::Flattened<S, QuadraticBezierSegment<S>>","parent":null,"children":[],"decl_id":null,"docs":" A flattening iterator for quadratic bézier segments.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1478},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,113,117,97,100,114,97,116,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":21956,"byte_end":21978,"line_start":22,"line_end":22,"column_start":12,"column_end":34},"name":"QuadraticBezierSegment","qualname":"::quadratic_bezier::QuadraticBezierSegment","value":"QuadraticBezierSegment { from, ctrl, to }","parent":null,"children":[{"krate":0,"index":431},{"krate":0,"index":433},{"krate":0,"index":435}],"decl_id":null,"docs":" A 2d curve segment defined by three points: the beginning of the segment, a control\n point and the end of the segment.","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,113,117,97,100,114,97,116,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":21945,"byte_end":22055,"line_start":22,"line_end":26,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":431},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,113,117,97,100,114,97,116,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":21992,"byte_end":21996,"line_start":23,"line_end":23,"column_start":9,"column_end":13},"name":"from","qualname":"::quadratic_bezier::QuadraticBezierSegment::from","value":"euclid::point::TypedPoint2D<S, euclid::UnknownUnit>","parent":{"krate":0,"index":1478},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":433},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,113,117,97,100,114,97,116,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":22016,"byte_end":22020,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"name":"ctrl","qualname":"::quadratic_bezier::QuadraticBezierSegment::ctrl","value":"euclid::point::TypedPoint2D<S, euclid::UnknownUnit>","parent":{"krate":0,"index":1478},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":435},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,113,117,97,100,114,97,116,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":22040,"byte_end":22042,"line_start":25,"line_end":25,"column_start":9,"column_end":11},"name":"to","qualname":"::quadratic_bezier::QuadraticBezierSegment::to","value":"euclid::point::TypedPoint2D<S, euclid::UnknownUnit>","parent":{"krate":0,"index":1478},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,113,117,97,100,114,97,116,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":22173,"byte_end":22179,"line_start":30,"line_end":30,"column_start":12,"column_end":18},"name":"sample","qualname":"<QuadraticBezierSegment<S>>::sample","value":"fn (&self, t: S) -> Point<S>","parent":null,"children":[],"decl_id":null,"docs":" Sample the curve at t (expecting t between 0 and 1).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,113,117,97,100,114,97,116,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":22505,"byte_end":22506,"line_start":38,"line_end":38,"column_start":12,"column_end":13},"name":"x","qualname":"<QuadraticBezierSegment<S>>::x","value":"fn (&self, t: S) -> S","parent":null,"children":[],"decl_id":null,"docs":" Sample the x coordinate of the curve at t (expecting t between 0 and 1).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,113,117,97,100,114,97,116,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":22807,"byte_end":22808,"line_start":46,"line_end":46,"column_start":12,"column_end":13},"name":"y","qualname":"<QuadraticBezierSegment<S>>::y","value":"fn (&self, t: S) -> S","parent":null,"children":[],"decl_id":null,"docs":" Sample the y coordinate of the curve at t (expecting t between 0 and 1).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,113,117,97,100,114,97,116,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":23247,"byte_end":23257,"line_start":59,"line_end":59,"column_start":12,"column_end":22},"name":"derivative","qualname":"<QuadraticBezierSegment<S>>::derivative","value":"fn (&self, t: S) -> Vector<S>","parent":null,"children":[],"decl_id":null,"docs":" Sample the curve's derivative at t (expecting t between 0 and 1).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,113,117,97,100,114,97,116,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":23549,"byte_end":23551,"line_start":65,"line_end":65,"column_start":12,"column_end":14},"name":"dx","qualname":"<QuadraticBezierSegment<S>>::dx","value":"fn (&self, t: S) -> S","parent":null,"children":[],"decl_id":null,"docs":" Sample the x coordinate of the curve's derivative at t (expecting t between 0 and 1).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,113,117,97,100,114,97,116,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":23805,"byte_end":23807,"line_start":71,"line_end":71,"column_start":12,"column_end":14},"name":"dy","qualname":"<QuadraticBezierSegment<S>>::dy","value":"fn (&self, t: S) -> S","parent":null,"children":[],"decl_id":null,"docs":" Sample the y coordinate of the curve's derivative at t (expecting t between 0 and 1).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,113,117,97,100,114,97,116,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":24022,"byte_end":24026,"line_start":77,"line_end":77,"column_start":12,"column_end":16},"name":"flip","qualname":"<QuadraticBezierSegment<S>>::flip","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Swap the beginning and the end of the segment.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,113,117,97,100,114,97,116,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":24343,"byte_end":24354,"line_start":88,"line_end":88,"column_start":12,"column_end":23},"name":"y_maximum_t","qualname":"<QuadraticBezierSegment<S>>::y_maximum_t","value":"fn (&self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Find the advancement of the y-most position in the curve.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,113,117,97,100,114,97,116,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":24798,"byte_end":24809,"line_start":101,"line_end":101,"column_start":12,"column_end":23},"name":"y_minimum_t","qualname":"<QuadraticBezierSegment<S>>::y_minimum_t","value":"fn (&self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Find the advancement of the y-least position in the curve.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,113,117,97,100,114,97,116,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":25173,"byte_end":25191,"line_start":112,"line_end":112,"column_start":12,"column_end":30},"name":"local_y_extremum_t","qualname":"<QuadraticBezierSegment<S>>::local_y_extremum_t","value":"fn (&self) -> Option<S>","parent":null,"children":[],"decl_id":null,"docs":" Return the y inflection point or None if this curve is y-monotonic.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,113,117,97,100,114,97,116,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":25665,"byte_end":25676,"line_start":127,"line_end":127,"column_start":12,"column_end":23},"name":"x_maximum_t","qualname":"<QuadraticBezierSegment<S>>::x_maximum_t","value":"fn (&self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Find the advancement of the x-most position in the curve.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,113,117,97,100,114,97,116,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":26120,"byte_end":26131,"line_start":140,"line_end":140,"column_start":12,"column_end":23},"name":"x_minimum_t","qualname":"<QuadraticBezierSegment<S>>::x_minimum_t","value":"fn (&self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Find the advancement of the x-least position in the curve.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,113,117,97,100,114,97,116,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":26495,"byte_end":26513,"line_start":151,"line_end":151,"column_start":12,"column_end":30},"name":"local_x_extremum_t","qualname":"<QuadraticBezierSegment<S>>::local_x_extremum_t","value":"fn (&self) -> Option<S>","parent":null,"children":[],"decl_id":null,"docs":" Return the x inflection point or None if this curve is x-monotonic.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,113,117,97,100,114,97,116,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":26960,"byte_end":26971,"line_start":166,"line_end":166,"column_start":12,"column_end":23},"name":"split_range","qualname":"<QuadraticBezierSegment<S>>::split_range","value":"fn (&self, t_range: Range<S>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return the sub-curve inside a given range of t.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,113,117,97,100,114,97,116,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":27551,"byte_end":27556,"line_start":185,"line_end":185,"column_start":12,"column_end":17},"name":"split","qualname":"<QuadraticBezierSegment<S>>::split","value":"fn (&self, t: S) -> (QuadraticBezierSegment<S>, QuadraticBezierSegment<S>)","parent":null,"children":[],"decl_id":null,"docs":" Split this curve into two sub-curves.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,113,117,97,100,114,97,116,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":28044,"byte_end":28056,"line_start":200,"line_end":200,"column_start":12,"column_end":24},"name":"before_split","qualname":"<QuadraticBezierSegment<S>>::before_split","value":"fn (&self, t: S) -> QuadraticBezierSegment<S>","parent":null,"children":[],"decl_id":null,"docs":" Return the curve before the split point.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,113,117,97,100,114,97,116,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":28327,"byte_end":28338,"line_start":209,"line_end":209,"column_start":12,"column_end":23},"name":"after_split","qualname":"<QuadraticBezierSegment<S>>::after_split","value":"fn (&self, t: S) -> QuadraticBezierSegment<S>","parent":null,"children":[],"decl_id":null,"docs":" Return the curve after the split point.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,113,117,97,100,114,97,116,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":28610,"byte_end":28618,"line_start":218,"line_end":218,"column_start":12,"column_end":20},"name":"to_cubic","qualname":"<QuadraticBezierSegment<S>>::to_cubic","value":"fn (&self) -> CubicBezierSegment<S>","parent":null,"children":[],"decl_id":null,"docs":" Elevate this curve to a third order bézier.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,113,117,97,100,114,97,116,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":28928,"byte_end":28936,"line_start":228,"line_end":228,"column_start":12,"column_end":20},"name":"baseline","qualname":"<QuadraticBezierSegment<S>>::baseline","value":"fn (&self) -> LineSegment<S>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,113,117,97,100,114,97,116,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":28907,"byte_end":28916,"line_start":227,"line_end":227,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,113,117,97,100,114,97,116,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":29035,"byte_end":29044,"line_start":232,"line_end":232,"column_start":12,"column_end":21},"name":"is_linear","qualname":"<QuadraticBezierSegment<S>>::is_linear","value":"fn (&self, tolerance: S) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,113,117,97,100,114,97,116,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":29492,"byte_end":29500,"line_start":246,"line_end":246,"column_start":12,"column_end":20},"name":"fat_line","qualname":"<QuadraticBezierSegment<S>>::fat_line","value":"fn (&self) -> (LineEquation<S>, LineEquation<S>)","parent":null,"children":[],"decl_id":null,"docs":" Computes a \"fat line\" of this segment.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,113,117,97,100,114,97,116,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":29857,"byte_end":29866,"line_start":255,"line_end":255,"column_start":12,"column_end":21},"name":"transform","qualname":"<QuadraticBezierSegment<S>>::transform","value":"fn (&self, transform: &Transform2D<S>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Applies the transform to this curve and returns the results.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,113,117,97,100,114,97,116,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":29836,"byte_end":29845,"line_start":254,"line_end":254,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,113,117,97,100,114,97,116,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":30248,"byte_end":30263,"line_start":265,"line_end":265,"column_start":12,"column_end":27},"name":"flattening_step","qualname":"<QuadraticBezierSegment<S>>::flattening_step","value":"fn (&self, tolerance: S) -> S","parent":null,"children":[],"decl_id":null,"docs":" Find the interval of the begining of the curve that can be approximated with a\n line segment.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,113,117,97,100,114,97,116,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":30827,"byte_end":30845,"line_start":288,"line_end":288,"column_start":12,"column_end":30},"name":"for_each_flattened","qualname":"<QuadraticBezierSegment<S>>::for_each_flattened","value":"fn <F> (&self, tolerance: S, call_back: &mut F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Iterates through the curve invoking a callback at each point.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,113,117,97,100,114,97,116,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":31128,"byte_end":31137,"line_start":294,"line_end":294,"column_start":12,"column_end":21},"name":"flattened","qualname":"<QuadraticBezierSegment<S>>::flattened","value":"fn (&self, tolerance: S) -> Flattened<S>","parent":null,"children":[],"decl_id":null,"docs":" Returns the flattened representation of the curve as an iterator, starting *after* the\n current point.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,113,117,97,100,114,97,116,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":31307,"byte_end":31327,"line_start":299,"line_end":299,"column_start":12,"column_end":32},"name":"for_each_monotonic_t","qualname":"<QuadraticBezierSegment<S>>::for_each_monotonic_t","value":"fn <F> (&self, mut cb: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Invokes a callback between each monotonic part of the segment.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,113,117,97,100,114,97,116,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":32013,"byte_end":32037,"line_start":330,"line_end":330,"column_start":12,"column_end":36},"name":"for_each_monotonic_range","qualname":"<QuadraticBezierSegment<S>>::for_each_monotonic_range","value":"fn <F> (&self, mut cb: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Invokes a callback for each monotonic part of the segment..\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,113,117,97,100,114,97,116,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":32270,"byte_end":32288,"line_start":342,"line_end":342,"column_start":12,"column_end":30},"name":"for_each_monotonic","qualname":"<QuadraticBezierSegment<S>>::for_each_monotonic","value":"fn <F> (&self, cb: &mut F) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,113,117,97,100,114,97,116,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":32596,"byte_end":32614,"line_start":352,"line_end":352,"column_start":12,"column_end":30},"name":"approximate_length","qualname":"<QuadraticBezierSegment<S>>::approximate_length","value":"fn (&self, tolerance: S) -> S","parent":null,"children":[],"decl_id":null,"docs":" Compute the length of the segment using a flattened approximation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,113,117,97,100,114,97,116,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":32788,"byte_end":32805,"line_start":357,"line_end":357,"column_start":12,"column_end":29},"name":"bounding_triangle","qualname":"<QuadraticBezierSegment<S>>::bounding_triangle","value":"fn (&self) -> Triangle<S>","parent":null,"children":[],"decl_id":null,"docs":" Returns a triangle containing this curve segment.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,113,117,97,100,114,97,116,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":33019,"byte_end":33037,"line_start":366,"line_end":366,"column_start":12,"column_end":30},"name":"fast_bounding_rect","qualname":"<QuadraticBezierSegment<S>>::fast_bounding_rect","value":"fn (&self) -> Rect<S>","parent":null,"children":[],"decl_id":null,"docs":" Returns a conservative rectangle that contains the curve.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,113,117,97,100,114,97,116,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":33322,"byte_end":33343,"line_start":374,"line_end":374,"column_start":12,"column_end":33},"name":"fast_bounding_range_x","qualname":"<QuadraticBezierSegment<S>>::fast_bounding_range_x","value":"fn (&self) -> (S, S)","parent":null,"children":[],"decl_id":null,"docs":" Returns a conservative range of x this curve is contained in.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,113,117,97,100,114,97,116,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":33604,"byte_end":33625,"line_start":381,"line_end":381,"column_start":12,"column_end":33},"name":"fast_bounding_range_y","qualname":"<QuadraticBezierSegment<S>>::fast_bounding_range_y","value":"fn (&self) -> (S, S)","parent":null,"children":[],"decl_id":null,"docs":" Returns a conservative range of y this curve is contained in.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,113,117,97,100,114,97,116,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":33881,"byte_end":33894,"line_start":388,"line_end":388,"column_start":12,"column_end":25},"name":"bounding_rect","qualname":"<QuadraticBezierSegment<S>>::bounding_rect","value":"fn (&self) -> Rect<S>","parent":null,"children":[],"decl_id":null,"docs":" Returns the smallest rectangle the curve is contained in\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,113,117,97,100,114,97,116,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":34167,"byte_end":34183,"line_start":396,"line_end":396,"column_start":12,"column_end":28},"name":"bounding_range_x","qualname":"<QuadraticBezierSegment<S>>::bounding_range_x","value":"fn (&self) -> (S, S)","parent":null,"children":[],"decl_id":null,"docs":" Returns the smallest range of x this curve is contained in.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,113,117,97,100,114,97,116,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":34408,"byte_end":34424,"line_start":403,"line_end":403,"column_start":12,"column_end":28},"name":"bounding_range_y","qualname":"<QuadraticBezierSegment<S>>::bounding_range_y","value":"fn (&self) -> (S, S)","parent":null,"children":[],"decl_id":null,"docs":" Returns the smallest range of y this curve is contained in.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,113,117,97,100,114,97,116,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":34698,"byte_end":34714,"line_start":411,"line_end":411,"column_start":12,"column_end":28},"name":"assume_monotonic","qualname":"<QuadraticBezierSegment<S>>::assume_monotonic","value":"fn (&self) -> MonotonicQuadraticBezierSegment<S>","parent":null,"children":[],"decl_id":null,"docs":" Cast this curve into a monotonic curve without checking that the monotonicity\n assumption is correct.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,113,117,97,100,114,97,116,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":34904,"byte_end":34918,"line_start":416,"line_end":416,"column_start":12,"column_end":26},"name":"is_x_monotonic","qualname":"<QuadraticBezierSegment<S>>::is_x_monotonic","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this segment is monotonic on the x axis.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,113,117,97,100,114,97,116,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":35063,"byte_end":35077,"line_start":421,"line_end":421,"column_start":12,"column_end":26},"name":"is_y_monotonic","qualname":"<QuadraticBezierSegment<S>>::is_y_monotonic","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this segment is monotonic on the y axis.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,113,117,97,100,114,97,116,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":35214,"byte_end":35226,"line_start":426,"line_end":426,"column_start":12,"column_end":24},"name":"is_monotonic","qualname":"<QuadraticBezierSegment<S>>::is_monotonic","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this segment is fully monotonic.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,113,117,97,100,114,97,116,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":35584,"byte_end":35604,"line_start":435,"line_end":435,"column_start":12,"column_end":32},"name":"line_intersections_t","qualname":"<QuadraticBezierSegment<S>>::line_intersections_t","value":"fn (&self, line: &Line<S>) -> ArrayVec<[S; 2]>","parent":null,"children":[],"decl_id":null,"docs":" Computes the intersections (if any) between this segment a line.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,113,117,97,100,114,97,116,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":36080,"byte_end":36098,"line_start":449,"line_end":449,"column_start":12,"column_end":30},"name":"line_intersections","qualname":"<QuadraticBezierSegment<S>>::line_intersections","value":"fn (&self, line: &Line<S>) -> ArrayVec<[Point<S>; 2]>","parent":null,"children":[],"decl_id":null,"docs":" Computes the intersection points (if any) between this segment a line.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,113,117,97,100,114,97,116,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":36681,"byte_end":36709,"line_start":465,"line_end":465,"column_start":12,"column_end":40},"name":"line_segment_intersections_t","qualname":"<QuadraticBezierSegment<S>>::line_segment_intersections_t","value":"fn (&self, segment: &LineSegment<S>) -> ArrayVec<[(S, S); 2]>","parent":null,"children":[],"decl_id":null,"docs":" Computes the intersections (if any) between this segment a line segment.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,113,117,97,100,114,97,116,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":37190,"byte_end":37194,"line_start":480,"line_end":480,"column_start":12,"column_end":16},"name":"from","qualname":"<QuadraticBezierSegment<S>>::from","value":"fn (&self) -> Point<S>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,113,117,97,100,114,97,116,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":37169,"byte_end":37178,"line_start":479,"line_end":479,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,113,117,97,100,114,97,116,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":37254,"byte_end":37256,"line_start":483,"line_end":483,"column_start":12,"column_end":14},"name":"to","qualname":"<QuadraticBezierSegment<S>>::to","value":"fn (&self) -> Point<S>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,113,117,97,100,114,97,116,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":37233,"byte_end":37242,"line_start":482,"line_end":482,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,113,117,97,100,114,97,116,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":37387,"byte_end":37413,"line_start":486,"line_end":486,"column_start":12,"column_end":38},"name":"line_segment_intersections","qualname":"<QuadraticBezierSegment<S>>::line_segment_intersections","value":"fn (&self, segment: &LineSegment<S>) -> ArrayVec<[Point<S>; 2]>","parent":null,"children":[],"decl_id":null,"docs":" Computes the intersection points (if any) between this segment a line segment.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":308},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,113,117,97,100,114,97,116,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":38610,"byte_end":38641,"line_start":518,"line_end":518,"column_start":10,"column_end":41},"name":"MonotonicQuadraticBezierSegment","qualname":"::quadratic_bezier::MonotonicQuadraticBezierSegment","value":"Monotonic<QuadraticBezierSegment<S>>","parent":null,"children":[],"decl_id":null,"docs":" A monotonically increasing in x and y quadratic bézier curve segment\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":310},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"cubic_bezier","qualname":"::cubic_bezier","value":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/lyon_geom-0.12.6/src/cubic_bezier.rs","parent":null,"children":[{"krate":0,"index":312},{"krate":0,"index":314},{"krate":0,"index":324},{"krate":0,"index":326},{"krate":0,"index":338},{"krate":0,"index":344},{"krate":0,"index":346},{"krate":0,"index":348},{"krate":0,"index":350},{"krate":0,"index":356},{"krate":0,"index":366},{"krate":0,"index":368},{"krate":0,"index":370},{"krate":0,"index":1526},{"krate":0,"index":1542},{"krate":0,"index":1538},{"krate":0,"index":1534},{"krate":0,"index":1528},{"krate":0,"index":378},{"krate":0,"index":498},{"krate":0,"index":500},{"krate":0,"index":516},{"krate":0,"index":520}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1526},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":47123,"byte_end":47141,"line_start":23,"line_end":23,"column_start":12,"column_end":30},"name":"CubicBezierSegment","qualname":"::cubic_bezier::CubicBezierSegment","value":"CubicBezierSegment { from, ctrl1, ctrl2, to }","parent":null,"children":[{"krate":0,"index":447},{"krate":0,"index":449},{"krate":0,"index":451},{"krate":0,"index":453}],"decl_id":null,"docs":" A 2d curve segment defined by four points: the beginning of the segment, two control\n points and the end of the segment.","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":47112,"byte_end":47244,"line_start":23,"line_end":28,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":447},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":47155,"byte_end":47159,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"name":"from","qualname":"::cubic_bezier::CubicBezierSegment::from","value":"euclid::point::TypedPoint2D<S, euclid::UnknownUnit>","parent":{"krate":0,"index":1526},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":449},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":47179,"byte_end":47184,"line_start":25,"line_end":25,"column_start":9,"column_end":14},"name":"ctrl1","qualname":"::cubic_bezier::CubicBezierSegment::ctrl1","value":"euclid::point::TypedPoint2D<S, euclid::UnknownUnit>","parent":{"krate":0,"index":1526},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":451},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":47204,"byte_end":47209,"line_start":26,"line_end":26,"column_start":9,"column_end":14},"name":"ctrl2","qualname":"::cubic_bezier::CubicBezierSegment::ctrl2","value":"euclid::point::TypedPoint2D<S, euclid::UnknownUnit>","parent":{"krate":0,"index":1526},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":453},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":47229,"byte_end":47231,"line_start":27,"line_end":27,"column_start":9,"column_end":11},"name":"to","qualname":"::cubic_bezier::CubicBezierSegment::to","value":"euclid::point::TypedPoint2D<S, euclid::UnknownUnit>","parent":{"krate":0,"index":1526},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":47358,"byte_end":47364,"line_start":32,"line_end":32,"column_start":12,"column_end":18},"name":"sample","qualname":"<CubicBezierSegment<S>>::sample","value":"fn (&self, t: S) -> Point<S>","parent":null,"children":[],"decl_id":null,"docs":" Sample the curve at t (expecting t between 0 and 1).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":47841,"byte_end":47842,"line_start":45,"line_end":45,"column_start":12,"column_end":13},"name":"x","qualname":"<CubicBezierSegment<S>>::x","value":"fn (&self, t: S) -> S","parent":null,"children":[],"decl_id":null,"docs":" Sample the x coordinate of the curve at t (expecting t between 0 and 1).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":384},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":48284,"byte_end":48285,"line_start":58,"line_end":58,"column_start":12,"column_end":13},"name":"y","qualname":"<CubicBezierSegment<S>>::y","value":"fn (&self, t: S) -> S","parent":null,"children":[],"decl_id":null,"docs":" Sample the y coordinate of the curve at t (expecting t between 0 and 1).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":48774,"byte_end":48787,"line_start":72,"line_end":72,"column_start":12,"column_end":25},"name":"solve_t_for_x","qualname":"<CubicBezierSegment<S>>::solve_t_for_x","value":"fn (&self, x: S) -> ArrayVec<[S; 3]>","parent":null,"children":[],"decl_id":null,"docs":" Return the parameter values corresponding to a given x coordinate.\n See also solve_t_for_x for monotonic curves.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":49233,"byte_end":49246,"line_start":84,"line_end":84,"column_start":12,"column_end":25},"name":"solve_t_for_y","qualname":"<CubicBezierSegment<S>>::solve_t_for_y","value":"fn (&self, y: S) -> ArrayVec<[S; 3]>","parent":null,"children":[],"decl_id":null,"docs":" Return the parameter values corresponding to a given y coordinate.\n See also solve_t_for_y for monotonic curves.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":50579,"byte_end":50589,"line_start":131,"line_end":131,"column_start":12,"column_end":22},"name":"derivative","qualname":"<CubicBezierSegment<S>>::derivative","value":"fn (&self, t: S) -> Vector<S>","parent":null,"children":[],"decl_id":null,"docs":" Sample the curve's derivative at t (expecting t between 0 and 1).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":50952,"byte_end":50954,"line_start":140,"line_end":140,"column_start":12,"column_end":14},"name":"dx","qualname":"<CubicBezierSegment<S>>::dx","value":"fn (&self, t: S) -> S","parent":null,"children":[],"decl_id":null,"docs":" Sample the x coordinate of the curve's derivative at t (expecting t between 0 and 1).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":51233,"byte_end":51235,"line_start":146,"line_end":146,"column_start":12,"column_end":14},"name":"dy","qualname":"<CubicBezierSegment<S>>::dy","value":"fn (&self, t: S) -> S","parent":null,"children":[],"decl_id":null,"docs":" Sample the y coordinate of the curve's derivative at t (expecting t between 0 and 1).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":51551,"byte_end":51562,"line_start":154,"line_end":154,"column_start":12,"column_end":23},"name":"split_range","qualname":"<CubicBezierSegment<S>>::split_range","value":"fn (&self, t_range: Range<S>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return the sub-curve inside a given range of t.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":52078,"byte_end":52083,"line_start":172,"line_end":172,"column_start":12,"column_end":17},"name":"split","qualname":"<CubicBezierSegment<S>>::split","value":"fn (&self, t: S) -> (CubicBezierSegment<S>, CubicBezierSegment<S>)","parent":null,"children":[],"decl_id":null,"docs":" Split this curve into two sub-curves.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":52901,"byte_end":52913,"line_start":196,"line_end":196,"column_start":12,"column_end":24},"name":"before_split","qualname":"<CubicBezierSegment<S>>::before_split","value":"fn (&self, t: S) -> CubicBezierSegment<S>","parent":null,"children":[],"decl_id":null,"docs":" Return the curve before the split point.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":53533,"byte_end":53544,"line_start":212,"line_end":212,"column_start":12,"column_end":23},"name":"after_split","qualname":"<CubicBezierSegment<S>>::after_split","value":"fn (&self, t: S) -> CubicBezierSegment<S>","parent":null,"children":[],"decl_id":null,"docs":" Return the curve after the split point.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":54118,"byte_end":54126,"line_start":227,"line_end":227,"column_start":12,"column_end":20},"name":"baseline","qualname":"<CubicBezierSegment<S>>::baseline","value":"fn (&self) -> LineSegment<S>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":54097,"byte_end":54106,"line_start":226,"line_end":226,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":54225,"byte_end":54234,"line_start":231,"line_end":231,"column_start":12,"column_end":21},"name":"is_linear","qualname":"<CubicBezierSegment<S>>::is_linear","value":"fn (&self, tolerance: S) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":418},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":56054,"byte_end":56062,"line_start":283,"line_end":283,"column_start":12,"column_end":20},"name":"fat_line","qualname":"<CubicBezierSegment<S>>::fat_line","value":"fn (&self) -> (LineEquation<S>, LineEquation<S>)","parent":null,"children":[],"decl_id":null,"docs":" Computes a \"fat line\" of this segment.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":420},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":56372,"byte_end":56381,"line_start":292,"line_end":292,"column_start":12,"column_end":21},"name":"transform","qualname":"<CubicBezierSegment<S>>::transform","value":"fn (&self, transform: &Transform2D<S>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Applies the transform to this curve and returns the results.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":56351,"byte_end":56360,"line_start":291,"line_end":291,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":422},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":56766,"byte_end":56770,"line_start":302,"line_end":302,"column_start":12,"column_end":16},"name":"flip","qualname":"<CubicBezierSegment<S>>::flip","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Swap the beginning and the end of the segment.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":424},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":57079,"byte_end":57088,"line_start":313,"line_end":313,"column_start":12,"column_end":21},"name":"flattened","qualname":"<CubicBezierSegment<S>>::flattened","value":"fn (&self, tolerance: S) -> Flattened<S>","parent":null,"children":[],"decl_id":null,"docs":" Returns the flattened representation of the curve as an iterator, starting *after* the\n current point.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":57258,"byte_end":57278,"line_start":318,"line_end":318,"column_start":12,"column_end":32},"name":"for_each_monotonic_t","qualname":"<CubicBezierSegment<S>>::for_each_monotonic_t","value":"fn <F> (&self, mut cb: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Invokes a callback between each monotonic part of the segment.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":58619,"byte_end":58643,"line_start":362,"line_end":362,"column_start":12,"column_end":36},"name":"for_each_monotonic_range","qualname":"<CubicBezierSegment<S>>::for_each_monotonic_range","value":"fn <F> (&self, mut cb: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Invokes a callback for each monotonic part of the segment..\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":430},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":58996,"byte_end":59021,"line_start":376,"line_end":376,"column_start":12,"column_end":37},"name":"for_each_quadratic_bezier","qualname":"<CubicBezierSegment<S>>::for_each_quadratic_bezier","value":"fn <F> (&self, tolerance: S, cb: &mut F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Approximates the cubic bézier curve with sequence of quadratic ones,\n invoking a callback at each step.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":59317,"byte_end":59345,"line_start":385,"line_end":385,"column_start":12,"column_end":40},"name":"for_each_monotonic_quadratic","qualname":"<CubicBezierSegment<S>>::for_each_monotonic_quadratic","value":"fn <F> (&self, tolerance: S, cb: &mut F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Approximates the cubic bézier curve with sequence of monotonic quadratic\n ones, invoking a callback at each step.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":59602,"byte_end":59620,"line_start":393,"line_end":393,"column_start":12,"column_end":30},"name":"for_each_flattened","qualname":"<CubicBezierSegment<S>>::for_each_flattened","value":"fn <F> (&self, tolerance: S, call_back: &mut F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Iterates through the curve invoking a callback at each point.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":436},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":59835,"byte_end":59853,"line_start":398,"line_end":398,"column_start":12,"column_end":30},"name":"approximate_length","qualname":"<CubicBezierSegment<S>>::approximate_length","value":"fn (&self, tolerance: S) -> S","parent":null,"children":[],"decl_id":null,"docs":" Compute the length of the segment using a flattened approximation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":59960,"byte_end":59981,"line_start":402,"line_end":402,"column_start":12,"column_end":33},"name":"for_each_inflection_t","qualname":"<CubicBezierSegment<S>>::for_each_inflection_t","value":"fn <F> (&self, cb: &mut F) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":60258,"byte_end":60285,"line_start":410,"line_end":410,"column_start":12,"column_end":39},"name":"for_each_local_x_extremum_t","qualname":"<CubicBezierSegment<S>>::for_each_local_x_extremum_t","value":"fn <F> (&self, cb: &mut F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Return local x extrema or None if this curve is monotonic.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":60601,"byte_end":60628,"line_start":418,"line_end":418,"column_start":12,"column_end":39},"name":"for_each_local_y_extremum_t","qualname":"<CubicBezierSegment<S>>::for_each_local_y_extremum_t","value":"fn <F> (&self, cb: &mut F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Return local y extrema or None if this curve is monotonic.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":448},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":62596,"byte_end":62607,"line_start":481,"line_end":481,"column_start":12,"column_end":23},"name":"y_maximum_t","qualname":"<CubicBezierSegment<S>>::y_maximum_t","value":"fn (&self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Find the advancement of the y-most position in the curve.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":63177,"byte_end":63188,"line_start":501,"line_end":501,"column_start":12,"column_end":23},"name":"y_minimum_t","qualname":"<CubicBezierSegment<S>>::y_minimum_t","value":"fn (&self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Find the advancement of the y-least position in the curve.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":452},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":63758,"byte_end":63769,"line_start":521,"line_end":521,"column_start":12,"column_end":23},"name":"x_maximum_t","qualname":"<CubicBezierSegment<S>>::x_maximum_t","value":"fn (&self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Find the advancement of the x-most position in the curve.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":64232,"byte_end":64243,"line_start":539,"line_end":539,"column_start":12,"column_end":23},"name":"x_minimum_t","qualname":"<CubicBezierSegment<S>>::x_minimum_t","value":"fn (&self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Find the x-least position in the curve.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":64808,"byte_end":64826,"line_start":559,"line_end":559,"column_start":12,"column_end":30},"name":"fast_bounding_rect","qualname":"<CubicBezierSegment<S>>::fast_bounding_rect","value":"fn (&self) -> Rect<S>","parent":null,"children":[],"decl_id":null,"docs":" Returns a conservative rectangle the curve is contained in.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":65133,"byte_end":65154,"line_start":568,"line_end":568,"column_start":12,"column_end":33},"name":"fast_bounding_range_x","qualname":"<CubicBezierSegment<S>>::fast_bounding_range_x","value":"fn (&self) -> (S, S)","parent":null,"children":[],"decl_id":null,"docs":" Returns a conservative range of x this curve is contained in.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":65112,"byte_end":65121,"line_start":567,"line_end":567,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":65468,"byte_end":65489,"line_start":577,"line_end":577,"column_start":12,"column_end":33},"name":"fast_bounding_range_y","qualname":"<CubicBezierSegment<S>>::fast_bounding_range_y","value":"fn (&self) -> (S, S)","parent":null,"children":[],"decl_id":null,"docs":" Returns a conservative range of y this curve is contained in.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":65447,"byte_end":65456,"line_start":576,"line_end":576,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":65784,"byte_end":65797,"line_start":585,"line_end":585,"column_start":12,"column_end":25},"name":"bounding_rect","qualname":"<CubicBezierSegment<S>>::bounding_rect","value":"fn (&self) -> Rect<S>","parent":null,"children":[],"decl_id":null,"docs":" Returns the smallest rectangle the curve is contained in\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":464},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":66092,"byte_end":66108,"line_start":594,"line_end":594,"column_start":12,"column_end":28},"name":"bounding_range_x","qualname":"<CubicBezierSegment<S>>::bounding_range_x","value":"fn (&self) -> (S, S)","parent":null,"children":[],"decl_id":null,"docs":" Returns the smallest range of x this curve is contained in.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":66071,"byte_end":66080,"line_start":593,"line_end":593,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":66348,"byte_end":66364,"line_start":603,"line_end":603,"column_start":12,"column_end":28},"name":"bounding_range_y","qualname":"<CubicBezierSegment<S>>::bounding_range_y","value":"fn (&self) -> (S, S)","parent":null,"children":[],"decl_id":null,"docs":" Returns the smallest range of y this curve is contained in.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":66327,"byte_end":66336,"line_start":602,"line_end":602,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":66639,"byte_end":66655,"line_start":612,"line_end":612,"column_start":12,"column_end":28},"name":"assume_monotonic","qualname":"<CubicBezierSegment<S>>::assume_monotonic","value":"fn (&self) -> MonotonicCubicBezierSegment<S>","parent":null,"children":[],"decl_id":null,"docs":" Cast this curve into a monotonic curve without checking that the monotonicity\n assumption is correct.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":66837,"byte_end":66851,"line_start":617,"line_end":617,"column_start":12,"column_end":26},"name":"is_x_monotonic","qualname":"<CubicBezierSegment<S>>::is_x_monotonic","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this segment is monotonic on the x axis.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":67067,"byte_end":67081,"line_start":624,"line_end":624,"column_start":12,"column_end":26},"name":"is_y_monotonic","qualname":"<CubicBezierSegment<S>>::is_y_monotonic","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this segment is monotonic on the y axis.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":67289,"byte_end":67301,"line_start":631,"line_end":631,"column_start":12,"column_end":24},"name":"is_monotonic","qualname":"<CubicBezierSegment<S>>::is_monotonic","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this segment is fully monotonic.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":67893,"byte_end":67914,"line_start":644,"line_end":644,"column_start":12,"column_end":33},"name":"cubic_intersections_t","qualname":"<CubicBezierSegment<S>>::cubic_intersections_t","value":"fn (&self, curve: &CubicBezierSegment<S>) -> ArrayVec<[(S, S); 9]>","parent":null,"children":[],"decl_id":null,"docs":" Computes the intersections (if any) between this segment and another one.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":68136,"byte_end":68155,"line_start":649,"line_end":649,"column_start":12,"column_end":31},"name":"cubic_intersections","qualname":"<CubicBezierSegment<S>>::cubic_intersections","value":"fn (&self, curve: &CubicBezierSegment<S>) -> ArrayVec<[Point<S>; 9]>","parent":null,"children":[],"decl_id":null,"docs":" Computes the intersection points (if any) between this segment and another one.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":70634,"byte_end":70659,"line_start":708,"line_end":708,"column_start":12,"column_end":37},"name":"quadratic_intersections_t","qualname":"<CubicBezierSegment<S>>::quadratic_intersections_t","value":"fn (&self, curve: &QuadraticBezierSegment<S>) -> ArrayVec<[(S, S); 9]>","parent":null,"children":[],"decl_id":null,"docs":" Computes the intersections (if any) between this segment a quadratic bézier segment.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":70905,"byte_end":70928,"line_start":713,"line_end":713,"column_start":12,"column_end":35},"name":"quadratic_intersections","qualname":"<CubicBezierSegment<S>>::quadratic_intersections","value":"fn (&self, curve: &QuadraticBezierSegment<S>) -> ArrayVec<[Point<S>; 9]>","parent":null,"children":[],"decl_id":null,"docs":" Computes the intersection points (if any) between this segment and a quadratic bézier segment.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":71341,"byte_end":71361,"line_start":722,"line_end":722,"column_start":12,"column_end":32},"name":"line_intersections_t","qualname":"<CubicBezierSegment<S>>::line_intersections_t","value":"fn (&self, line: &Line<S>) -> ArrayVec<[S; 3]>","parent":null,"children":[],"decl_id":null,"docs":" Computes the intersections (if any) between this segment and a line.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":72544,"byte_end":72562,"line_start":758,"line_end":758,"column_start":12,"column_end":30},"name":"line_intersections","qualname":"<CubicBezierSegment<S>>::line_intersections","value":"fn (&self, line: &Line<S>) -> ArrayVec<[Point<S>; 3]>","parent":null,"children":[],"decl_id":null,"docs":" Computes the intersection points (if any) between this segment and a line.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":73140,"byte_end":73168,"line_start":774,"line_end":774,"column_start":12,"column_end":40},"name":"line_segment_intersections_t","qualname":"<CubicBezierSegment<S>>::line_segment_intersections_t","value":"fn (&self, segment: &LineSegment<S>) -> ArrayVec<[(S, S); 3]>","parent":null,"children":[],"decl_id":null,"docs":" Computes the intersections (if any) between this segment and a line segment.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":74281,"byte_end":74285,"line_start":806,"line_end":806,"column_start":12,"column_end":16},"name":"from","qualname":"<CubicBezierSegment<S>>::from","value":"fn (&self) -> Point<S>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":74260,"byte_end":74269,"line_start":805,"line_end":805,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":74345,"byte_end":74347,"line_start":809,"line_end":809,"column_start":12,"column_end":14},"name":"to","qualname":"<CubicBezierSegment<S>>::to","value":"fn (&self) -> Point<S>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":74324,"byte_end":74333,"line_start":808,"line_end":808,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":74391,"byte_end":74417,"line_start":811,"line_end":811,"column_start":12,"column_end":38},"name":"line_segment_intersections","qualname":"<CubicBezierSegment<S>>::line_segment_intersections","value":"fn (&self, segment: &LineSegment<S>) -> ArrayVec<[Point<S>; 3]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":520},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":75602,"byte_end":75629,"line_start":842,"line_end":842,"column_start":10,"column_end":37},"name":"MonotonicCubicBezierSegment","qualname":"::cubic_bezier::MonotonicCubicBezierSegment","value":"Monotonic<CubicBezierSegment<S>>","parent":null,"children":[],"decl_id":null,"docs":" A monotonically increasing in x and y quadratic bézier curve segment\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":522},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"arc","qualname":"::arc","value":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/lyon_geom-0.12.6/src/arc.rs","parent":null,"children":[{"krate":0,"index":524},{"krate":0,"index":526},{"krate":0,"index":528},{"krate":0,"index":530},{"krate":0,"index":538},{"krate":0,"index":556},{"krate":0,"index":566},{"krate":0,"index":568},{"krate":0,"index":570},{"krate":0,"index":572},{"krate":0,"index":1574},{"krate":0,"index":1590},{"krate":0,"index":1586},{"krate":0,"index":1582},{"krate":0,"index":1576},{"krate":0,"index":1592},{"krate":0,"index":1608},{"krate":0,"index":1604},{"krate":0,"index":1600},{"krate":0,"index":1594},{"krate":0,"index":574},{"krate":0,"index":640},{"krate":0,"index":644},{"krate":0,"index":1610},{"krate":0,"index":1626},{"krate":0,"index":1622},{"krate":0,"index":1618},{"krate":0,"index":1612},{"krate":0,"index":656},{"krate":0,"index":660},{"krate":0,"index":662},{"krate":0,"index":664},{"krate":0,"index":666},{"krate":0,"index":694},{"krate":0,"index":710}],"decl_id":null,"docs":" Elliptic arc related maths and tools.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":572},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":87049,"byte_end":87058,"line_start":15,"line_end":15,"column_start":10,"column_end":19},"name":"Flattened","qualname":"::arc::Flattened","value":"segment::Flattened<S, Arc<S>>","parent":null,"children":[],"decl_id":null,"docs":" A flattening iterator for arc segments.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1574},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":87289,"byte_end":87295,"line_start":20,"line_end":20,"column_start":12,"column_end":18},"name":"SvgArc","qualname":"::arc::SvgArc","value":"SvgArc { from, to, radii, x_rotation, flags }","parent":null,"children":[{"krate":0,"index":465},{"krate":0,"index":467},{"krate":0,"index":469},{"krate":0,"index":471},{"krate":0,"index":473}],"decl_id":null,"docs":" An elliptic arc curve segment using the SVG's end-point notation.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":87278,"byte_end":87429,"line_start":20,"line_end":26,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":465},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":87309,"byte_end":87313,"line_start":21,"line_end":21,"column_start":9,"column_end":13},"name":"from","qualname":"::arc::SvgArc::from","value":"euclid::point::TypedPoint2D<S, euclid::UnknownUnit>","parent":{"krate":0,"index":1574},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":467},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":87333,"byte_end":87335,"line_start":22,"line_end":22,"column_start":9,"column_end":11},"name":"to","qualname":"::arc::SvgArc::to","value":"euclid::point::TypedPoint2D<S, euclid::UnknownUnit>","parent":{"krate":0,"index":1574},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":469},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":87355,"byte_end":87360,"line_start":23,"line_end":23,"column_start":9,"column_end":14},"name":"radii","qualname":"::arc::SvgArc::radii","value":"euclid::vector::TypedVector2D<S, euclid::UnknownUnit>","parent":{"krate":0,"index":1574},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":471},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":87381,"byte_end":87391,"line_start":24,"line_end":24,"column_start":9,"column_end":19},"name":"x_rotation","qualname":"::arc::SvgArc::x_rotation","value":"euclid::rotation::Angle<S>","parent":{"krate":0,"index":1574},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":473},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":87411,"byte_end":87416,"line_start":25,"line_end":25,"column_start":9,"column_end":14},"name":"flags","qualname":"::arc::SvgArc::flags","value":"arc::ArcFlags","parent":{"krate":0,"index":1574},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1592},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":87589,"byte_end":87592,"line_start":31,"line_end":31,"column_start":12,"column_end":15},"name":"Arc","qualname":"::arc::Arc","value":"Arc { center, radii, start_angle, sweep_angle, x_rotation }","parent":null,"children":[{"krate":0,"index":485},{"krate":0,"index":487},{"krate":0,"index":489},{"krate":0,"index":491},{"krate":0,"index":493}],"decl_id":null,"docs":" An elliptic arc curve segment.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":87578,"byte_end":87743,"line_start":31,"line_end":37,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":485},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":87606,"byte_end":87612,"line_start":32,"line_end":32,"column_start":9,"column_end":15},"name":"center","qualname":"::arc::Arc::center","value":"euclid::point::TypedPoint2D<S, euclid::UnknownUnit>","parent":{"krate":0,"index":1592},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":487},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":87632,"byte_end":87637,"line_start":33,"line_end":33,"column_start":9,"column_end":14},"name":"radii","qualname":"::arc::Arc::radii","value":"euclid::vector::TypedVector2D<S, euclid::UnknownUnit>","parent":{"krate":0,"index":1592},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":489},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":87658,"byte_end":87669,"line_start":34,"line_end":34,"column_start":9,"column_end":20},"name":"start_angle","qualname":"::arc::Arc::start_angle","value":"euclid::rotation::Angle<S>","parent":{"krate":0,"index":1592},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":491},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":87689,"byte_end":87700,"line_start":35,"line_end":35,"column_start":9,"column_end":20},"name":"sweep_angle","qualname":"::arc::Arc::sweep_angle","value":"euclid::rotation::Angle<S>","parent":{"krate":0,"index":1592},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":493},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":87720,"byte_end":87730,"line_start":36,"line_end":36,"column_start":9,"column_end":19},"name":"x_rotation","qualname":"::arc::Arc::x_rotation","value":"euclid::rotation::Angle<S>","parent":{"krate":0,"index":1592},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":576},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":87811,"byte_end":87817,"line_start":41,"line_end":41,"column_start":12,"column_end":18},"name":"circle","qualname":"<Arc<S>>::circle","value":"fn (center: Point<S>, radius: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create simple circle.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":578},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":88126,"byte_end":88138,"line_start":52,"line_end":52,"column_start":12,"column_end":24},"name":"from_svg_arc","qualname":"<Arc<S>>::from_svg_arc","value":"fn (arc: &SvgArc<S>) -> Arc<S>","parent":null,"children":[],"decl_id":null,"docs":" Convert from the SVG arc notation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":580},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":91363,"byte_end":91373,"line_start":145,"line_end":145,"column_start":12,"column_end":22},"name":"to_svg_arc","qualname":"<Arc<S>>::to_svg_arc","value":"fn (&self) -> SvgArc<S>","parent":null,"children":[],"decl_id":null,"docs":" Convert to the SVG arc notation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":582},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":91894,"byte_end":91919,"line_start":163,"line_end":163,"column_start":12,"column_end":37},"name":"for_each_quadratic_bezier","qualname":"<Arc<S>>::for_each_quadratic_bezier","value":"fn <F> (&self, cb: &mut F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Approximate the arc with a sequence of quadratic bézier curves.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":91873,"byte_end":91882,"line_start":162,"line_end":162,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":584},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":92148,"byte_end":92169,"line_start":172,"line_end":172,"column_start":12,"column_end":33},"name":"for_each_cubic_bezier","qualname":"<Arc<S>>::for_each_cubic_bezier","value":"fn <F> (&self, cb: &mut F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Approximate the arc with a sequence of cubic bézier curves.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":92127,"byte_end":92136,"line_start":171,"line_end":171,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":586},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":92382,"byte_end":92388,"line_start":181,"line_end":181,"column_start":12,"column_end":18},"name":"sample","qualname":"<Arc<S>>::sample","value":"fn (&self, t: S) -> Point<S>","parent":null,"children":[],"decl_id":null,"docs":" Sample the curve at t (expecting t between 0 and 1).\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":92361,"byte_end":92370,"line_start":180,"line_end":180,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":588},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":92572,"byte_end":92573,"line_start":187,"line_end":187,"column_start":12,"column_end":13},"name":"x","qualname":"<Arc<S>>::x","value":"fn (&self, t: S) -> S","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":92551,"byte_end":92560,"line_start":186,"line_end":186,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":92639,"byte_end":92640,"line_start":190,"line_end":190,"column_start":12,"column_end":13},"name":"y","qualname":"<Arc<S>>::y","value":"fn (&self, t: S) -> S","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":92618,"byte_end":92627,"line_start":189,"line_end":189,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":92777,"byte_end":92791,"line_start":194,"line_end":194,"column_start":12,"column_end":26},"name":"sample_tangent","qualname":"<Arc<S>>::sample_tangent","value":"fn (&self, t: S) -> Vector<S>","parent":null,"children":[],"decl_id":null,"docs":" Sample the curve's tangent at t (expecting t between 0 and 1).\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":92756,"byte_end":92765,"line_start":193,"line_end":193,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":594},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":92970,"byte_end":92979,"line_start":200,"line_end":200,"column_start":12,"column_end":21},"name":"get_angle","qualname":"<Arc<S>>::get_angle","value":"fn (&self, t: S) -> Angle<S>","parent":null,"children":[],"decl_id":null,"docs":" Sample the curve's angle at t (expecting t between 0 and 1).\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":92949,"byte_end":92958,"line_start":199,"line_end":199,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":596},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":93109,"byte_end":93118,"line_start":205,"line_end":205,"column_start":12,"column_end":21},"name":"end_angle","qualname":"<Arc<S>>::end_angle","value":"fn (&self) -> Angle<S>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":93088,"byte_end":93097,"line_start":204,"line_end":204,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":93216,"byte_end":93220,"line_start":210,"line_end":210,"column_start":12,"column_end":16},"name":"from","qualname":"<Arc<S>>::from","value":"fn (&self) -> Point<S>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":93195,"byte_end":93204,"line_start":209,"line_end":209,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":93303,"byte_end":93305,"line_start":215,"line_end":215,"column_start":12,"column_end":14},"name":"to","qualname":"<Arc<S>>::to","value":"fn (&self) -> Point<S>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":93282,"byte_end":93291,"line_start":214,"line_end":214,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":602},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":93501,"byte_end":93512,"line_start":222,"line_end":222,"column_start":12,"column_end":23},"name":"split_range","qualname":"<Arc<S>>::split_range","value":"fn (&self, t_range: Range<S>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return the sub-curve inside a given range of t.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":93994,"byte_end":93999,"line_start":236,"line_end":236,"column_start":12,"column_end":17},"name":"split","qualname":"<Arc<S>>::split","value":"fn (&self, t: S) -> (Arc<S>, Arc<S>)","parent":null,"children":[],"decl_id":null,"docs":" Split this curve into two sub-curves.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":606},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":94703,"byte_end":94715,"line_start":257,"line_end":257,"column_start":12,"column_end":24},"name":"before_split","qualname":"<Arc<S>>::before_split","value":"fn (&self, t: S) -> Arc<S>","parent":null,"children":[],"decl_id":null,"docs":" Return the curve before the split point.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":608},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":95087,"byte_end":95098,"line_start":269,"line_end":269,"column_start":12,"column_end":23},"name":"after_split","qualname":"<Arc<S>>::after_split","value":"fn (&self, t: S) -> Arc<S>","parent":null,"children":[],"decl_id":null,"docs":" Return the curve after the split point.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":610},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":95498,"byte_end":95502,"line_start":281,"line_end":281,"column_start":12,"column_end":16},"name":"flip","qualname":"<Arc<S>>::flip","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Swap the direction of the segment.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":612},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":95750,"byte_end":95768,"line_start":290,"line_end":290,"column_start":12,"column_end":30},"name":"for_each_flattened","qualname":"<Arc<S>>::for_each_flattened","value":"fn <F> (&self, tolerance: S, call_back: &mut F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Approximates the arc with a sequence of line segments.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":96044,"byte_end":96059,"line_start":296,"line_end":296,"column_start":12,"column_end":27},"name":"flattening_step","qualname":"<Arc<S>>::flattening_step","value":"fn (&self, tolerance: S) -> S","parent":null,"children":[],"decl_id":null,"docs":" Finds the interval of the beginning of the curve that can be approximated with a\n line segment.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":616},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":96745,"byte_end":96754,"line_start":316,"line_end":316,"column_start":12,"column_end":21},"name":"flattened","qualname":"<Arc<S>>::flattened","value":"fn (&self, tolerance: S) -> Flattened<S>","parent":null,"children":[],"decl_id":null,"docs":" Returns the flattened representation of the curve as an iterator, starting *after* the\n current point.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":618},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":96919,"byte_end":96937,"line_start":321,"line_end":321,"column_start":12,"column_end":30},"name":"fast_bounding_rect","qualname":"<Arc<S>>::fast_bounding_rect","value":"fn (&self) -> Rect<S>","parent":null,"children":[],"decl_id":null,"docs":" Returns a conservative rectangle that contains the curve.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":620},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":97248,"byte_end":97261,"line_start":331,"line_end":331,"column_start":12,"column_end":25},"name":"bounding_rect","qualname":"<Arc<S>>::bounding_rect","value":"fn (&self) -> Rect<S>","parent":null,"children":[],"decl_id":null,"docs":" Returns a conservative rectangle that contains the curve.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":622},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":97898,"byte_end":97925,"line_start":353,"line_end":353,"column_start":12,"column_end":39},"name":"for_each_local_x_extremum_t","qualname":"<Arc<S>>::for_each_local_x_extremum_t","value":"fn <F> (&self, cb: &mut F) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":624},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":98228,"byte_end":98255,"line_start":363,"line_end":363,"column_start":12,"column_end":39},"name":"for_each_local_y_extremum_t","qualname":"<Arc<S>>::for_each_local_y_extremum_t","value":"fn <F> (&self, cb: &mut F) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":99449,"byte_end":99465,"line_start":403,"line_end":403,"column_start":12,"column_end":28},"name":"bounding_range_x","qualname":"<Arc<S>>::bounding_range_x","value":"fn (&self) -> (S, S)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":99572,"byte_end":99588,"line_start":408,"line_end":408,"column_start":12,"column_end":28},"name":"bounding_range_y","qualname":"<Arc<S>>::bounding_range_y","value":"fn (&self) -> (S, S)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":99695,"byte_end":99716,"line_start":413,"line_end":413,"column_start":12,"column_end":33},"name":"fast_bounding_range_x","qualname":"<Arc<S>>::fast_bounding_range_x","value":"fn (&self) -> (S, S)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":634},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":99828,"byte_end":99849,"line_start":418,"line_end":418,"column_start":12,"column_end":33},"name":"fast_bounding_range_y","qualname":"<Arc<S>>::fast_bounding_range_y","value":"fn (&self) -> (S, S)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":636},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":99961,"byte_end":99979,"line_start":423,"line_end":423,"column_start":12,"column_end":30},"name":"approximate_length","qualname":"<Arc<S>>::approximate_length","value":"fn (&self, tolerance: S) -> S","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":646},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":100543,"byte_end":100549,"line_start":442,"line_end":442,"column_start":12,"column_end":18},"name":"to_arc","qualname":"<SvgArc<S>>::to_arc","value":"fn (&self) -> Arc<S>","parent":null,"children":[],"decl_id":null,"docs":" Converts this arc from endpoints to center notation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":648},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":100758,"byte_end":100774,"line_start":447,"line_end":447,"column_start":12,"column_end":28},"name":"is_straight_line","qualname":"<SvgArc<S>>::is_straight_line","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Per SVG spec, this arc should be rendered as a line_to segment.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":650},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":101015,"byte_end":101040,"line_start":454,"line_end":454,"column_start":12,"column_end":37},"name":"for_each_quadratic_bezier","qualname":"<SvgArc<S>>::for_each_quadratic_bezier","value":"fn <F> (&self, cb: &mut F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Approximates the arc with a sequence of quadratic bézier segments.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":652},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":101496,"byte_end":101517,"line_start":471,"line_end":471,"column_start":12,"column_end":33},"name":"for_each_cubic_bezier","qualname":"<SvgArc<S>>::for_each_cubic_bezier","value":"fn <F> (&self, cb: &mut F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Approximates the arc with a sequence of cubic bézier segments.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":654},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":101986,"byte_end":102004,"line_start":489,"line_end":489,"column_start":12,"column_end":30},"name":"for_each_flattened","qualname":"<SvgArc<S>>::for_each_flattened","value":"fn <F> (&self, tolerance: S, cb: &mut F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Approximates the arc with a sequence of line segments.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1610},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":102420,"byte_end":102428,"line_start":502,"line_end":502,"column_start":12,"column_end":20},"name":"ArcFlags","qualname":"::arc::ArcFlags","value":"ArcFlags { large_arc, sweep }","parent":null,"children":[{"krate":0,"index":503},{"krate":0,"index":505}],"decl_id":null,"docs":" Flag parameters for arcs as described by the SVG specification.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":102409,"byte_end":102478,"line_start":502,"line_end":505,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":503},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":102439,"byte_end":102448,"line_start":503,"line_end":503,"column_start":9,"column_end":18},"name":"large_arc","qualname":"::arc::ArcFlags::large_arc","value":"bool","parent":{"krate":0,"index":1610},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":505},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":102464,"byte_end":102469,"line_start":504,"line_end":504,"column_start":9,"column_end":14},"name":"sweep","qualname":"::arc::ArcFlags::sweep","value":"bool","parent":{"krate":0,"index":1610},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":714},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,117,116,105,108,115,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"utils","qualname":"::utils","value":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/lyon_geom-0.12.6/src/utils.rs","parent":null,"children":[{"krate":0,"index":716},{"krate":0,"index":722},{"krate":0,"index":730},{"krate":0,"index":732},{"krate":0,"index":734},{"krate":0,"index":736},{"krate":0,"index":738},{"krate":0,"index":740},{"krate":0,"index":742}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":732},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,117,116,105,108,115,46,114,115],"byte_start":114496,"byte_end":114503,"line_start":6,"line_end":6,"column_start":8,"column_end":15},"name":"min_max","qualname":"::utils::min_max","value":"fn <S> (a: S, b: S) -> (S, S)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,117,116,105,108,115,46,114,115],"byte_start":114479,"byte_end":114488,"line_start":5,"line_end":5,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":734},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,117,116,105,108,115,46,114,115],"byte_start":114598,"byte_end":114605,"line_start":11,"line_end":11,"column_start":8,"column_end":15},"name":"tangent","qualname":"::utils::tangent","value":"fn <S> (v: Vector<S>) -> Vector<S>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,117,116,105,108,115,46,114,115],"byte_start":114581,"byte_end":114590,"line_start":10,"line_end":10,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":736},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,117,116,105,108,115,46,114,115],"byte_start":114687,"byte_end":114705,"line_start":16,"line_end":16,"column_start":8,"column_end":26},"name":"normalized_tangent","qualname":"::utils::normalized_tangent","value":"fn <S> (v: Vector<S>) -> Vector<S>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,117,116,105,108,115,46,114,115],"byte_start":114670,"byte_end":114679,"line_start":15,"line_end":15,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":738},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,117,116,105,108,115,46,114,115],"byte_start":115316,"byte_end":115330,"line_start":44,"line_end":44,"column_start":8,"column_end":22},"name":"directed_angle","qualname":"::utils::directed_angle","value":"fn <S> (v1: Vector<S>, v2: Vector<S>) -> S","parent":null,"children":[],"decl_id":null,"docs":" Angle between vectors v1 and v2 (oriented clockwise assyming y points downwards).\n The result is a number between `0` and `2 * PI`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,117,116,105,108,115,46,114,115],"byte_start":115299,"byte_end":115308,"line_start":43,"line_end":43,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":740},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,117,116,105,108,115,46,114,115],"byte_start":115535,"byte_end":115550,"line_start":49,"line_end":49,"column_start":8,"column_end":23},"name":"directed_angle2","qualname":"::utils::directed_angle2","value":"fn <S> (center: Point<S>, a: Point<S>, b: Point<S>) -> S","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":742},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,117,116,105,108,115,46,114,115],"byte_start":115666,"byte_end":115688,"line_start":53,"line_end":53,"column_start":8,"column_end":30},"name":"cubic_polynomial_roots","qualname":"::utils::cubic_polynomial_roots","value":"fn <S> (a: S, b: S, c: S, d: S) -> ArrayVec<[S; 3]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":744},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,116,111,95,113,117,97,100,114,97,116,105,99,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"cubic_to_quadratic","qualname":"::cubic_to_quadratic","value":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/lyon_geom-0.12.6/src/cubic_to_quadratic.rs","parent":null,"children":[{"krate":0,"index":746},{"krate":0,"index":748},{"krate":0,"index":754},{"krate":0,"index":756},{"krate":0,"index":758},{"krate":0,"index":760},{"krate":0,"index":762},{"krate":0,"index":764},{"krate":0,"index":766}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":758},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,116,111,95,113,117,97,100,114,97,116,105,99,46,114,115],"byte_start":119252,"byte_end":119271,"line_start":7,"line_end":7,"column_start":8,"column_end":27},"name":"cubic_to_quadratics","qualname":"::cubic_to_quadratic::cubic_to_quadratics","value":"fn <S, F> (curve: &CubicBezierSegment<S>, tolerance: S, cb: &mut F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Approximates a cubic bézier segment with a sequence of quadratic béziers.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":760},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,116,111,95,113,117,97,100,114,97,116,105,99,46,114,115],"byte_start":120164,"byte_end":120190,"line_start":37,"line_end":37,"column_start":8,"column_end":34},"name":"single_curve_approximation","qualname":"::cubic_to_quadratic::single_curve_approximation","value":"fn <S> (cubic: &CubicBezierSegment<S>) -> QuadraticBezierSegment<S>","parent":null,"children":[],"decl_id":null,"docs":" This is terrible as a general approximation but works if the cubic\n curve does not have inflection points and is \"flat\" enough. Typically\n usables after subdiving the curve a few times.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":762},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,116,111,95,113,117,97,100,114,97,116,105,99,46,114,115],"byte_start":120681,"byte_end":120713,"line_start":49,"line_end":49,"column_start":8,"column_end":40},"name":"single_curve_approximation_error","qualname":"::cubic_to_quadratic::single_curve_approximation_error","value":"fn <S> (curve: &CubicBezierSegment<S>) -> S","parent":null,"children":[],"decl_id":null,"docs":" Evaluates an upper bound on the maximum distance between the curve\n and its quadratic approximation obtained using the single curve approximation.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":764},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,116,111,95,113,117,97,100,114,97,116,105,99,46,114,115],"byte_start":120975,"byte_end":121004,"line_start":54,"line_end":54,"column_start":8,"column_end":37},"name":"cubic_to_monotonic_quadratics","qualname":"::cubic_to_quadratic::cubic_to_monotonic_quadratics","value":"fn <S, F> (curve: &CubicBezierSegment<S>, tolerance: S, cb: &mut F) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":834},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,102,108,97,116,116,101,110,95,99,117,98,105,99,46,114,115],"byte_start":170031,"byte_end":170040,"line_start":19,"line_end":19,"column_start":12,"column_end":21},"name":"Flattened","qualname":"::flatten_cubic::Flattened","value":"Flattened {  }","parent":null,"children":[{"krate":0,"index":307},{"krate":0,"index":309},{"krate":0,"index":311},{"krate":0,"index":313},{"krate":0,"index":315},{"krate":0,"index":317}],"decl_id":null,"docs":" An iterator over a cubic bezier segment that yields line segments approximating the\n curve for a given approximation threshold.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":838},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,102,108,97,116,116,101,110,95,99,117,98,105,99,46,114,115],"byte_start":170539,"byte_end":170542,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"new","qualname":"<Flattened<S>>::new","value":"fn (bezier: CubicBezierSegment<S>, tolerance: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an iterator that yields points along a cubic bezier segment, useful to build a\n flattened approximation of the curve given a certain tolerance.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1628},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,116,114,105,97,110,103,108,101,46,114,115],"byte_start":184482,"byte_end":184490,"line_start":8,"line_end":8,"column_start":12,"column_end":20},"name":"Triangle","qualname":"::triangle::Triangle","value":"Triangle { a, b, c }","parent":null,"children":[{"krate":0,"index":509},{"krate":0,"index":511},{"krate":0,"index":513}],"decl_id":null,"docs":" A 2D triangle defined by three points `a`, `b` and `c`.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,116,114,105,97,110,103,108,101,46,114,115],"byte_start":184471,"byte_end":184560,"line_start":8,"line_end":12,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":509},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,116,114,105,97,110,103,108,101,46,114,115],"byte_start":184504,"byte_end":184505,"line_start":9,"line_end":9,"column_start":9,"column_end":10},"name":"a","qualname":"::triangle::Triangle::a","value":"euclid::point::TypedPoint2D<S, euclid::UnknownUnit>","parent":{"krate":0,"index":1628},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":511},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,116,114,105,97,110,103,108,101,46,114,115],"byte_start":184525,"byte_end":184526,"line_start":10,"line_end":10,"column_start":9,"column_end":10},"name":"b","qualname":"::triangle::Triangle::b","value":"euclid::point::TypedPoint2D<S, euclid::UnknownUnit>","parent":{"krate":0,"index":1628},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":513},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,116,114,105,97,110,103,108,101,46,114,115],"byte_start":184546,"byte_end":184547,"line_start":11,"line_end":11,"column_start":9,"column_end":10},"name":"c","qualname":"::triangle::Triangle::c","value":"euclid::point::TypedPoint2D<S, euclid::UnknownUnit>","parent":{"krate":0,"index":1628},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":880},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,116,114,105,97,110,103,108,101,46,114,115],"byte_start":184967,"byte_end":184981,"line_start":27,"line_end":27,"column_start":12,"column_end":26},"name":"contains_point","qualname":"<Triangle<S>>::contains_point","value":"fn (&self, point: Point<S>) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":882},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,116,114,105,97,110,103,108,101,46,114,115],"byte_start":185233,"byte_end":185246,"line_start":34,"line_end":34,"column_start":12,"column_end":25},"name":"bounding_rect","qualname":"<Triangle<S>>::bounding_rect","value":"fn (&self) -> Rect<S>","parent":null,"children":[],"decl_id":null,"docs":" Return the minimum bounding rectangle.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,116,114,105,97,110,103,108,101,46,114,115],"byte_start":185212,"byte_end":185221,"line_start":33,"line_end":33,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":884},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,116,114,105,97,110,103,108,101,46,114,115],"byte_start":185673,"byte_end":185675,"line_start":46,"line_end":46,"column_start":12,"column_end":14},"name":"ab","qualname":"<Triangle<S>>::ab","value":"fn (&self) -> LineSegment<S>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,116,114,105,97,110,103,108,101,46,114,115],"byte_start":185652,"byte_end":185661,"line_start":45,"line_end":45,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":886},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,116,114,105,97,110,103,108,101,46,114,115],"byte_start":185784,"byte_end":185786,"line_start":51,"line_end":51,"column_start":12,"column_end":14},"name":"ba","qualname":"<Triangle<S>>::ba","value":"fn (&self) -> LineSegment<S>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,116,114,105,97,110,103,108,101,46,114,115],"byte_start":185763,"byte_end":185772,"line_start":50,"line_end":50,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":888},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,116,114,105,97,110,103,108,101,46,114,115],"byte_start":185895,"byte_end":185897,"line_start":56,"line_end":56,"column_start":12,"column_end":14},"name":"bc","qualname":"<Triangle<S>>::bc","value":"fn (&self) -> LineSegment<S>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,116,114,105,97,110,103,108,101,46,114,115],"byte_start":185874,"byte_end":185883,"line_start":55,"line_end":55,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":890},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,116,114,105,97,110,103,108,101,46,114,115],"byte_start":186006,"byte_end":186008,"line_start":61,"line_end":61,"column_start":12,"column_end":14},"name":"cb","qualname":"<Triangle<S>>::cb","value":"fn (&self) -> LineSegment<S>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,116,114,105,97,110,103,108,101,46,114,115],"byte_start":185985,"byte_end":185994,"line_start":60,"line_end":60,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":892},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,116,114,105,97,110,103,108,101,46,114,115],"byte_start":186117,"byte_end":186119,"line_start":66,"line_end":66,"column_start":12,"column_end":14},"name":"ca","qualname":"<Triangle<S>>::ca","value":"fn (&self) -> LineSegment<S>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,116,114,105,97,110,103,108,101,46,114,115],"byte_start":186096,"byte_end":186105,"line_start":65,"line_end":65,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":894},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,116,114,105,97,110,103,108,101,46,114,115],"byte_start":186228,"byte_end":186230,"line_start":71,"line_end":71,"column_start":12,"column_end":14},"name":"ac","qualname":"<Triangle<S>>::ac","value":"fn (&self) -> LineSegment<S>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,116,114,105,97,110,103,108,101,46,114,115],"byte_start":186207,"byte_end":186216,"line_start":70,"line_end":70,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":896},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,116,114,105,97,110,103,108,101,46,114,115],"byte_start":186429,"byte_end":186438,"line_start":77,"line_end":77,"column_start":12,"column_end":21},"name":"transform","qualname":"<Triangle<S>>::transform","value":"fn (&self, transform: &Transform2D<S>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" [Not implemented] Applies the transform to this triangle and returns the results.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,116,114,105,97,110,103,108,101,46,114,115],"byte_start":186408,"byte_end":186417,"line_start":76,"line_end":76,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":898},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,116,114,105,97,110,103,108,101,46,114,115],"byte_start":186732,"byte_end":186742,"line_start":86,"line_end":86,"column_start":12,"column_end":22},"name":"intersects","qualname":"<Triangle<S>>::intersects","value":"fn (&self, other: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test for triangle-triangle intersection.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":900},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,116,114,105,97,110,103,108,101,46,114,115],"byte_start":187662,"byte_end":187685,"line_start":107,"line_end":107,"column_start":12,"column_end":35},"name":"intersects_line_segment","qualname":"<Triangle<S>>::intersects_line_segment","value":"fn (&self, segment: &LineSegment<S>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test for triangle-segment intersection.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,116,114,105,97,110,103,108,101,46,114,115],"byte_start":187641,"byte_end":187650,"line_start":106,"line_end":106,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1646},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":192040,"byte_end":192051,"line_start":13,"line_end":13,"column_start":12,"column_end":23},"name":"LineSegment","qualname":"::line::LineSegment","value":"LineSegment { from, to }","parent":null,"children":[{"krate":0,"index":525},{"krate":0,"index":527}],"decl_id":null,"docs":" A linear segment.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":192029,"byte_end":192104,"line_start":13,"line_end":16,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":525},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":192065,"byte_end":192069,"line_start":14,"line_end":14,"column_start":9,"column_end":13},"name":"from","qualname":"::line::LineSegment::from","value":"euclid::point::TypedPoint2D<S, euclid::UnknownUnit>","parent":{"krate":0,"index":1646},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":527},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":192089,"byte_end":192091,"line_start":15,"line_end":15,"column_start":9,"column_end":11},"name":"to","qualname":"::line::LineSegment::to","value":"euclid::point::TypedPoint2D<S, euclid::UnknownUnit>","parent":{"krate":0,"index":1646},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":940},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":192227,"byte_end":192233,"line_start":21,"line_end":21,"column_start":12,"column_end":18},"name":"sample","qualname":"<LineSegment<S>>::sample","value":"fn (&self, t: S) -> Point<S>","parent":null,"children":[],"decl_id":null,"docs":" Sample the segment at t (expecting t between 0 and 1).\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":192206,"byte_end":192215,"line_start":20,"line_end":20,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":942},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":192411,"byte_end":192412,"line_start":27,"line_end":27,"column_start":12,"column_end":13},"name":"x","qualname":"<LineSegment<S>>::x","value":"fn (&self, t: S) -> S","parent":null,"children":[],"decl_id":null,"docs":" Sample the x coordinate of the segment at t (expecting t between 0 and 1).\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":192390,"byte_end":192399,"line_start":26,"line_end":26,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":944},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":192599,"byte_end":192600,"line_start":33,"line_end":33,"column_start":12,"column_end":13},"name":"y","qualname":"<LineSegment<S>>::y","value":"fn (&self, t: S) -> S","parent":null,"children":[],"decl_id":null,"docs":" Sample the y coordinate of the segment at t (expecting t between 0 and 1).\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":192578,"byte_end":192587,"line_start":32,"line_end":32,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":946},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":192704,"byte_end":192708,"line_start":38,"line_end":38,"column_start":12,"column_end":16},"name":"from","qualname":"<LineSegment<S>>::from","value":"fn (&self) -> Point<S>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":192683,"byte_end":192692,"line_start":37,"line_end":37,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":948},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":192768,"byte_end":192770,"line_start":41,"line_end":41,"column_start":12,"column_end":14},"name":"to","qualname":"<LineSegment<S>>::to","value":"fn (&self) -> Point<S>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":192747,"byte_end":192756,"line_start":40,"line_end":40,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":950},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":192814,"byte_end":192827,"line_start":43,"line_end":43,"column_start":12,"column_end":25},"name":"solve_t_for_x","qualname":"<LineSegment<S>>::solve_t_for_x","value":"fn (&self, x: S) -> S","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":952},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":193005,"byte_end":193018,"line_start":52,"line_end":52,"column_start":12,"column_end":25},"name":"solve_t_for_y","qualname":"<LineSegment<S>>::solve_t_for_y","value":"fn (&self, y: S) -> S","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":954},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":193195,"byte_end":193208,"line_start":61,"line_end":61,"column_start":12,"column_end":25},"name":"solve_y_for_x","qualname":"<LineSegment<S>>::solve_y_for_x","value":"fn (&self, x: S) -> S","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":956},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":193285,"byte_end":193298,"line_start":65,"line_end":65,"column_start":12,"column_end":25},"name":"solve_x_for_y","qualname":"<LineSegment<S>>::solve_x_for_y","value":"fn (&self, y: S) -> S","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":958},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":193501,"byte_end":193505,"line_start":72,"line_end":72,"column_start":12,"column_end":16},"name":"flip","qualname":"<LineSegment<S>>::flip","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an inverted version of this segment where the beginning and the end\n points are swapped.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":193480,"byte_end":193489,"line_start":71,"line_end":71,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":960},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":193724,"byte_end":193735,"line_start":79,"line_end":79,"column_start":12,"column_end":23},"name":"split_range","qualname":"<LineSegment<S>>::split_range","value":"fn (&self, t_range: Range<S>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return the sub-segment inside a given range of t.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":962},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":193996,"byte_end":194001,"line_start":88,"line_end":88,"column_start":12,"column_end":17},"name":"split","qualname":"<LineSegment<S>>::split","value":"fn (&self, t: S) -> (Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Split this curve into two sub-segments.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":193975,"byte_end":193984,"line_start":87,"line_end":87,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":964},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":194308,"byte_end":194320,"line_start":98,"line_end":98,"column_start":12,"column_end":24},"name":"before_split","qualname":"<LineSegment<S>>::before_split","value":"fn (&self, t: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return the segment before the split point.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":194287,"byte_end":194296,"line_start":97,"line_end":97,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":966},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":194486,"byte_end":194497,"line_start":104,"line_end":104,"column_start":12,"column_end":23},"name":"after_split","qualname":"<LineSegment<S>>::after_split","value":"fn (&self, t: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return the segment after the split point.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":194465,"byte_end":194474,"line_start":103,"line_end":103,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":968},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":194597,"byte_end":194607,"line_start":108,"line_end":108,"column_start":12,"column_end":22},"name":"split_at_x","qualname":"<LineSegment<S>>::split_at_x","value":"fn (&self, x: S) -> (Self, Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":970},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":194759,"byte_end":194772,"line_start":114,"line_end":114,"column_start":12,"column_end":25},"name":"bounding_rect","qualname":"<LineSegment<S>>::bounding_rect","value":"fn (&self) -> Rect<S>","parent":null,"children":[],"decl_id":null,"docs":" Return the minimum bounding rectangle\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":194738,"byte_end":194747,"line_start":113,"line_end":113,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":976},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":195358,"byte_end":195367,"line_start":135,"line_end":135,"column_start":12,"column_end":21},"name":"to_vector","qualname":"<LineSegment<S>>::to_vector","value":"fn (&self) -> Vector<S>","parent":null,"children":[],"decl_id":null,"docs":" Returns the vector between this segment's `from` and `to` points.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":195337,"byte_end":195346,"line_start":134,"line_end":134,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":978},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":195500,"byte_end":195507,"line_start":141,"line_end":141,"column_start":12,"column_end":19},"name":"to_line","qualname":"<LineSegment<S>>::to_line","value":"fn (&self) -> Line<S>","parent":null,"children":[],"decl_id":null,"docs":" Returns the line containing this segment.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":195479,"byte_end":195488,"line_start":140,"line_end":140,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":980},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":195701,"byte_end":195707,"line_start":150,"line_end":150,"column_start":12,"column_end":18},"name":"length","qualname":"<LineSegment<S>>::length","value":"fn (&self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Computes the length of this segment.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":195680,"byte_end":195689,"line_start":149,"line_end":149,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":982},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":195838,"byte_end":195848,"line_start":155,"line_end":155,"column_start":12,"column_end":22},"name":"set_length","qualname":"<LineSegment<S>>::set_length","value":"fn (&mut self, new_length: S) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Changes the segment's length, moving destination point.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":984},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":196041,"byte_end":196050,"line_start":162,"line_end":162,"column_start":12,"column_end":21},"name":"translate","qualname":"<LineSegment<S>>::translate","value":"fn (&mut self, by: Vector<S>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":196020,"byte_end":196029,"line_start":161,"line_end":161,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":986},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":196286,"byte_end":196295,"line_start":171,"line_end":171,"column_start":12,"column_end":21},"name":"transform","qualname":"<LineSegment<S>>::transform","value":"fn (&self, transform: &Transform2D<S>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Applies the transform to this segment and returns the results.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":196265,"byte_end":196274,"line_start":170,"line_end":170,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":988},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":196773,"byte_end":196787,"line_start":183,"line_end":183,"column_start":12,"column_end":26},"name":"intersection_t","qualname":"<LineSegment<S>>::intersection_t","value":"fn (&self, other: &Self) -> Option<(S, S)>","parent":null,"children":[],"decl_id":null,"docs":" Computes the intersection (if any) between this segment and another one.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":990},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":198176,"byte_end":198188,"line_start":229,"line_end":229,"column_start":12,"column_end":24},"name":"intersection","qualname":"<LineSegment<S>>::intersection","value":"fn (&self, other: &Self) -> Option<Point<S>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":198155,"byte_end":198164,"line_start":228,"line_end":228,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":992},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":198314,"byte_end":198333,"line_start":233,"line_end":233,"column_start":12,"column_end":31},"name":"line_intersection_t","qualname":"<LineSegment<S>>::line_intersection_t","value":"fn (&self, line: &Line<S>) -> Option<S>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":994},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":198940,"byte_end":198957,"line_start":258,"line_end":258,"column_start":12,"column_end":29},"name":"line_intersection","qualname":"<LineSegment<S>>::line_intersection","value":"fn (&self, line: &Line<S>) -> Option<Point<S>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":198919,"byte_end":198928,"line_start":257,"line_end":257,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":996},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":199098,"byte_end":199108,"line_start":263,"line_end":263,"column_start":12,"column_end":22},"name":"intersects","qualname":"<LineSegment<S>>::intersects","value":"fn (&self, other: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":199077,"byte_end":199086,"line_start":262,"line_end":262,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":998},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":199217,"byte_end":199232,"line_start":268,"line_end":268,"column_start":12,"column_end":27},"name":"intersects_line","qualname":"<LineSegment<S>>::intersects_line","value":"fn (&self, line: &Line<S>) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":199196,"byte_end":199205,"line_start":267,"line_end":267,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1000},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":199333,"byte_end":199346,"line_start":272,"line_end":272,"column_start":12,"column_end":25},"name":"overlaps_line","qualname":"<LineSegment<S>>::overlaps_line","value":"fn (&self, line: &Line<S>) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1002},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":199564,"byte_end":199580,"line_start":280,"line_end":280,"column_start":12,"column_end":28},"name":"overlaps_segment","qualname":"<LineSegment<S>>::overlaps_segment","value":"fn (&self, other: &LineSegment<S>) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1004},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":200254,"byte_end":200270,"line_start":307,"line_end":307,"column_start":12,"column_end":28},"name":"contains_segment","qualname":"<LineSegment<S>>::contains_segment","value":"fn (&self, other: &LineSegment<S>) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1664},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":202652,"byte_end":202656,"line_start":373,"line_end":373,"column_start":12,"column_end":16},"name":"Line","qualname":"::line::Line","value":"Line { point, vector }","parent":null,"children":[{"krate":0,"index":539},{"krate":0,"index":541}],"decl_id":null,"docs":" An infinite line defined by a point and a vector.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":202641,"byte_end":202715,"line_start":373,"line_end":376,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":539},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":202670,"byte_end":202675,"line_start":374,"line_end":374,"column_start":9,"column_end":14},"name":"point","qualname":"::line::Line::point","value":"euclid::point::TypedPoint2D<S, euclid::UnknownUnit>","parent":{"krate":0,"index":1664},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":541},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":202695,"byte_end":202701,"line_start":375,"line_end":375,"column_start":9,"column_end":15},"name":"vector","qualname":"::line::Line::vector","value":"euclid::vector::TypedVector2D<S, euclid::UnknownUnit>","parent":{"krate":0,"index":1664},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1066},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":202754,"byte_end":202766,"line_start":379,"line_end":379,"column_start":12,"column_end":24},"name":"intersection","qualname":"<Line<S>>::intersection","value":"fn (&self, other: &Self) -> Option<Point<S>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1068},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":203477,"byte_end":203501,"line_start":398,"line_end":398,"column_start":12,"column_end":36},"name":"signed_distance_to_point","qualname":"<Line<S>>::signed_distance_to_point","value":"fn (&self, p: &Point<S>) -> S","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1070},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":203705,"byte_end":203722,"line_start":404,"line_end":404,"column_start":12,"column_end":29},"name":"distance_to_point","qualname":"<Line<S>>::distance_to_point","value":"fn (&self, p: &Point<S>) -> S","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1072},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":203818,"byte_end":203826,"line_start":408,"line_end":408,"column_start":12,"column_end":20},"name":"equation","qualname":"<Line<S>>::equation","value":"fn (&self) -> LineEquation<S>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1676},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":204229,"byte_end":204241,"line_start":421,"line_end":421,"column_start":12,"column_end":24},"name":"LineEquation","qualname":"::line::LineEquation","value":"LineEquation {  }","parent":null,"children":[{"krate":0,"index":551},{"krate":0,"index":553},{"krate":0,"index":555}],"decl_id":null,"docs":" A line defined by the equation\n `a * x + b * y + c = 0; a * a + b * b = 1`.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":204218,"byte_end":204278,"line_start":421,"line_end":425,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":204218,"byte_end":204278,"line_start":421,"line_end":425,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":1076},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":204325,"byte_end":204328,"line_start":428,"line_end":428,"column_start":12,"column_end":15},"name":"new","qualname":"<LineEquation<S>>::new","value":"fn (a: S, b: S, c: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1078},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":204553,"byte_end":204554,"line_start":435,"line_end":435,"column_start":12,"column_end":13},"name":"a","qualname":"<LineEquation<S>>::a","value":"fn (&self) -> S","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":204532,"byte_end":204541,"line_start":434,"line_end":434,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1080},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":204604,"byte_end":204605,"line_start":438,"line_end":438,"column_start":12,"column_end":13},"name":"b","qualname":"<LineEquation<S>>::b","value":"fn (&self) -> S","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":204583,"byte_end":204592,"line_start":437,"line_end":437,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1082},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":204655,"byte_end":204656,"line_start":441,"line_end":441,"column_start":12,"column_end":13},"name":"c","qualname":"<LineEquation<S>>::c","value":"fn (&self) -> S","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":204634,"byte_end":204643,"line_start":440,"line_end":440,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1084},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":204692,"byte_end":204705,"line_start":443,"line_end":443,"column_start":12,"column_end":25},"name":"project_point","qualname":"<LineEquation<S>>::project_point","value":"fn (&self, p: &Point<S>) -> Point<S>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1086},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":204938,"byte_end":204962,"line_start":451,"line_end":451,"column_start":12,"column_end":36},"name":"signed_distance_to_point","qualname":"<LineEquation<S>>::signed_distance_to_point","value":"fn (&self, p: &Point<S>) -> S","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":204917,"byte_end":204926,"line_start":450,"line_end":450,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1088},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":205068,"byte_end":205085,"line_start":456,"line_end":456,"column_start":12,"column_end":29},"name":"distance_to_point","qualname":"<LineEquation<S>>::distance_to_point","value":"fn (&self, p: &Point<S>) -> S","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":205047,"byte_end":205056,"line_start":455,"line_end":455,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1090},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":205195,"byte_end":205201,"line_start":461,"line_end":461,"column_start":12,"column_end":18},"name":"invert","qualname":"<LineEquation<S>>::invert","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":205174,"byte_end":205183,"line_start":460,"line_end":460,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1092},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":205311,"byte_end":205324,"line_start":466,"line_end":466,"column_start":12,"column_end":25},"name":"parallel_line","qualname":"<LineEquation<S>>::parallel_line","value":"fn (&self, p: &Point<S>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":205290,"byte_end":205299,"line_start":465,"line_end":465,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1094},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":205485,"byte_end":205491,"line_start":472,"line_end":472,"column_start":12,"column_end":18},"name":"offset","qualname":"<LineEquation<S>>::offset","value":"fn (&self, d: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":205464,"byte_end":205473,"line_start":471,"line_end":471,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1096},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":205608,"byte_end":205615,"line_start":477,"line_end":477,"column_start":12,"column_end":19},"name":"tangent","qualname":"<LineEquation<S>>::tangent","value":"fn (&self) -> Vector<S>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":205587,"byte_end":205596,"line_start":476,"line_end":476,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1098},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":205702,"byte_end":205708,"line_start":482,"line_end":482,"column_start":12,"column_end":18},"name":"normal","qualname":"<LineEquation<S>>::normal","value":"fn (&self) -> Vector<S>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":205681,"byte_end":205690,"line_start":481,"line_end":481,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1100},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":205794,"byte_end":205807,"line_start":487,"line_end":487,"column_start":12,"column_end":25},"name":"solve_y_for_x","qualname":"<LineEquation<S>>::solve_y_for_x","value":"fn (&self, x: S) -> Option<S>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":205773,"byte_end":205782,"line_start":486,"line_end":486,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1102},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":205981,"byte_end":205994,"line_start":496,"line_end":496,"column_start":12,"column_end":25},"name":"solve_x_for_y","qualname":"<LineEquation<S>>::solve_x_for_y","value":"fn (&self, y: S) -> Option<S>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":205960,"byte_end":205969,"line_start":495,"line_end":495,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1104},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":206168,"byte_end":206181,"line_start":505,"line_end":505,"column_start":12,"column_end":25},"name":"is_horizontal","qualname":"<LineEquation<S>>::is_horizontal","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":206147,"byte_end":206156,"line_start":504,"line_end":504,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1106},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":206257,"byte_end":206268,"line_start":510,"line_end":510,"column_start":12,"column_end":23},"name":"is_vertical","qualname":"<LineEquation<S>>::is_vertical","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":206236,"byte_end":206245,"line_start":509,"line_end":509,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":1144},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,109,111,110,111,116,111,110,105,99,46,114,115],"byte_start":214471,"byte_end":214477,"line_start":11,"line_end":11,"column_start":10,"column_end":16},"name":"Scalar","qualname":"::monotonic::MonotonicSegment::Scalar","value":"type Scalar: Scalar;","parent":{"krate":0,"index":1142},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1698},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,109,111,110,111,116,111,110,105,99,46,114,115],"byte_start":214736,"byte_end":214745,"line_start":17,"line_end":17,"column_start":12,"column_end":21},"name":"Monotonic","qualname":"::monotonic::Monotonic","value":"Monotonic {  }","parent":null,"children":[{"krate":0,"index":569}],"decl_id":null,"docs":" A x and y monotonic curve segment, for example `Monotonic<QuadraticBezierSegment>`.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,109,111,110,111,116,111,110,105,99,46,114,115],"byte_start":214725,"byte_end":214779,"line_start":17,"line_end":19,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":1150},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,109,111,110,111,116,111,110,105,99,46,114,115],"byte_start":214838,"byte_end":214845,"line_start":23,"line_end":23,"column_start":12,"column_end":19},"name":"segment","qualname":"<Monotonic<T>>::segment","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,109,111,110,111,116,111,110,105,99,46,114,115],"byte_start":214817,"byte_end":214826,"line_start":22,"line_end":22,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1152},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,109,111,110,111,116,111,110,105,99,46,114,115],"byte_start":214902,"byte_end":214906,"line_start":25,"line_end":25,"column_start":12,"column_end":16},"name":"from","qualname":"<Monotonic<T>>::from","value":"fn (&self) -> Point<T::Scalar>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,109,111,110,111,116,111,110,105,99,46,114,115],"byte_start":214881,"byte_end":214890,"line_start":24,"line_end":24,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1154},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,109,111,110,111,116,111,110,105,99,46,114,115],"byte_start":214983,"byte_end":214985,"line_start":27,"line_end":27,"column_start":12,"column_end":14},"name":"to","qualname":"<Monotonic<T>>::to","value":"fn (&self) -> Point<T::Scalar>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,109,111,110,111,116,111,110,105,99,46,114,115],"byte_start":214962,"byte_end":214971,"line_start":26,"line_end":26,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1156},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,109,111,110,111,116,111,110,105,99,46,114,115],"byte_start":215060,"byte_end":215066,"line_start":29,"line_end":29,"column_start":12,"column_end":18},"name":"sample","qualname":"<Monotonic<T>>::sample","value":"fn (&self, t: T::Scalar) -> Point<T::Scalar>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,109,111,110,111,116,111,110,105,99,46,114,115],"byte_start":215039,"byte_end":215048,"line_start":28,"line_end":28,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1158},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,109,111,110,111,116,111,110,105,99,46,114,115],"byte_start":215160,"byte_end":215161,"line_start":31,"line_end":31,"column_start":12,"column_end":13},"name":"x","qualname":"<Monotonic<T>>::x","value":"fn (&self, t: T::Scalar) -> T::Scalar","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,109,111,110,111,116,111,110,105,99,46,114,115],"byte_start":215139,"byte_end":215148,"line_start":30,"line_end":30,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1160},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,109,111,110,111,116,111,110,105,99,46,114,115],"byte_start":215243,"byte_end":215244,"line_start":33,"line_end":33,"column_start":12,"column_end":13},"name":"y","qualname":"<Monotonic<T>>::y","value":"fn (&self, t: T::Scalar) -> T::Scalar","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,109,111,110,111,116,111,110,105,99,46,114,115],"byte_start":215222,"byte_end":215231,"line_start":32,"line_end":32,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1162},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,109,111,110,111,116,111,110,105,99,46,114,115],"byte_start":215326,"byte_end":215336,"line_start":35,"line_end":35,"column_start":12,"column_end":22},"name":"derivative","qualname":"<Monotonic<T>>::derivative","value":"fn (&self, t: T::Scalar) -> Vector<T::Scalar>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,109,111,110,111,116,111,110,105,99,46,114,115],"byte_start":215305,"byte_end":215314,"line_start":34,"line_end":34,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1164},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,109,111,110,111,116,111,110,105,99,46,114,115],"byte_start":215435,"byte_end":215437,"line_start":37,"line_end":37,"column_start":12,"column_end":14},"name":"dx","qualname":"<Monotonic<T>>::dx","value":"fn (&self, t: T::Scalar) -> T::Scalar","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,109,111,110,111,116,111,110,105,99,46,114,115],"byte_start":215414,"byte_end":215423,"line_start":36,"line_end":36,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1166},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,109,111,110,111,116,111,110,105,99,46,114,115],"byte_start":215520,"byte_end":215522,"line_start":39,"line_end":39,"column_start":12,"column_end":14},"name":"dy","qualname":"<Monotonic<T>>::dy","value":"fn (&self, t: T::Scalar) -> T::Scalar","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,109,111,110,111,116,111,110,105,99,46,114,115],"byte_start":215499,"byte_end":215508,"line_start":38,"line_end":38,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1168},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,109,111,110,111,116,111,110,105,99,46,114,115],"byte_start":215605,"byte_end":215616,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"name":"split_range","qualname":"<Monotonic<T>>::split_range","value":"fn (&self, t_range: Range<T::Scalar>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,109,111,110,111,116,111,110,105,99,46,114,115],"byte_start":215584,"byte_end":215593,"line_start":40,"line_end":40,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1170},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,109,111,110,111,116,111,110,105,99,46,114,115],"byte_start":215752,"byte_end":215757,"line_start":45,"line_end":45,"column_start":12,"column_end":17},"name":"split","qualname":"<Monotonic<T>>::split","value":"fn (&self, t: T::Scalar) -> (Self, Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,109,111,110,111,116,111,110,105,99,46,114,115],"byte_start":215731,"byte_end":215740,"line_start":44,"line_end":44,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1172},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,109,111,110,111,116,111,110,105,99,46,114,115],"byte_start":215923,"byte_end":215935,"line_start":50,"line_end":50,"column_start":12,"column_end":24},"name":"before_split","qualname":"<Monotonic<T>>::before_split","value":"fn (&self, t: T::Scalar) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,109,111,110,111,116,111,110,105,99,46,114,115],"byte_start":215902,"byte_end":215911,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1174},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,109,111,110,111,116,111,110,105,99,46,114,115],"byte_start":216053,"byte_end":216064,"line_start":54,"line_end":54,"column_start":12,"column_end":23},"name":"after_split","qualname":"<Monotonic<T>>::after_split","value":"fn (&self, t: T::Scalar) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,109,111,110,111,116,111,110,105,99,46,114,115],"byte_start":216032,"byte_end":216041,"line_start":53,"line_end":53,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1176},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,109,111,110,111,116,111,110,105,99,46,114,115],"byte_start":216181,"byte_end":216185,"line_start":58,"line_end":58,"column_start":12,"column_end":16},"name":"flip","qualname":"<Monotonic<T>>::flip","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,109,111,110,111,116,111,110,105,99,46,114,115],"byte_start":216160,"byte_end":216169,"line_start":57,"line_end":57,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1178},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,109,111,110,111,116,111,110,105,99,46,114,115],"byte_start":216280,"byte_end":216298,"line_start":62,"line_end":62,"column_start":12,"column_end":30},"name":"approximate_length","qualname":"<Monotonic<T>>::approximate_length","value":"fn (&self, tolerance: T::Scalar) -> T::Scalar","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,109,111,110,111,116,111,110,105,99,46,114,115],"byte_start":216259,"byte_end":216268,"line_start":61,"line_end":61,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1200},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,109,111,110,111,116,111,110,105,99,46,114,115],"byte_start":217359,"byte_end":217372,"line_start":94,"line_end":94,"column_start":12,"column_end":25},"name":"solve_t_for_x","qualname":"<Monotonic<QuadraticBezierSegment<S>>>::solve_t_for_x","value":"fn (&self, x: S) -> S","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1202},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,109,111,110,111,116,111,110,105,99,46,114,115],"byte_start":217652,"byte_end":217665,"line_start":103,"line_end":103,"column_start":12,"column_end":25},"name":"solve_t_for_y","qualname":"<Monotonic<QuadraticBezierSegment<S>>>::solve_t_for_y","value":"fn (&self, y: S) -> S","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1206},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,109,111,110,111,116,111,110,105,99,46,114,115],"byte_start":218254,"byte_end":218264,"line_start":123,"line_end":123,"column_start":12,"column_end":22},"name":"split_at_x","qualname":"<Monotonic<QuadraticBezierSegment<S>>>::split_at_x","value":"fn (&self, x: S) -> (Self, Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,109,111,110,111,116,111,110,105,99,46,114,115],"byte_start":218233,"byte_end":218242,"line_start":122,"line_end":122,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1208},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,109,111,110,111,116,111,110,105,99,46,114,115],"byte_start":218356,"byte_end":218371,"line_start":127,"line_end":127,"column_start":12,"column_end":27},"name":"intersections_t","qualname":"<Monotonic<QuadraticBezierSegment<S>>>::intersections_t","value":"fn (&self, self_t_range: Range<S>, other: &Self, other_t_range: Range<S>, tolerance: S) -> ArrayVec<[(S, S); 2]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1210},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,109,111,110,111,116,111,110,105,99,46,114,115],"byte_start":218669,"byte_end":218682,"line_start":139,"line_end":139,"column_start":12,"column_end":25},"name":"intersections","qualname":"<Monotonic<QuadraticBezierSegment<S>>>::intersections","value":"fn (&self, self_t_range: Range<S>, other: &Self, other_t_range: Range<S>, tolerance: S) -> ArrayVec<[Point<S>; 2]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1212},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,109,111,110,111,116,111,110,105,99,46,114,115],"byte_start":219150,"byte_end":219170,"line_start":157,"line_end":157,"column_start":12,"column_end":32},"name":"first_intersection_t","qualname":"<Monotonic<QuadraticBezierSegment<S>>>::first_intersection_t","value":"fn (&self, self_t_range: Range<S>, other: &Self, other_t_range: Range<S>, tolerance: S) -> Option<(S, S)>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1214},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,109,111,110,111,116,111,110,105,99,46,114,115],"byte_start":219467,"byte_end":219485,"line_start":169,"line_end":169,"column_start":12,"column_end":30},"name":"first_intersection","qualname":"<Monotonic<QuadraticBezierSegment<S>>>::first_intersection","value":"fn (&self, self_t_range: Range<S>, other: &Self, other_t_range: Range<S>, tolerance: S) -> Option<Point<S>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1224},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,109,111,110,111,116,111,110,105,99,46,114,115],"byte_start":220081,"byte_end":220094,"line_start":190,"line_end":190,"column_start":12,"column_end":25},"name":"solve_t_for_x","qualname":"<Monotonic<CubicBezierSegment<S>>>::solve_t_for_x","value":"fn (&self, x: S, t_range: Range<S>, tolerance: S) -> S","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1226},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,109,111,110,111,116,111,110,105,99,46,114,115],"byte_start":221278,"byte_end":221288,"line_start":244,"line_end":244,"column_start":12,"column_end":22},"name":"split_at_x","qualname":"<Monotonic<CubicBezierSegment<S>>>::split_at_x","value":"fn (&self, x: S) -> (Self, Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,109,111,110,111,116,111,110,105,99,46,114,115],"byte_start":221257,"byte_end":221266,"line_start":243,"line_end":243,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":1304},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7829,"byte_end":7835,"line_start":121,"line_end":121,"column_start":15,"column_end":21},"name":"Scalar","qualname":"::scalar::Scalar","value":"Scalar: Float + NumCast + FloatConst + Sized + Display + Debug + Trig + AddAssign +\nSubAssign + MulAssign + DivAssign","parent":null,"children":[{"krate":0,"index":1306},{"krate":0,"index":1308},{"krate":0,"index":1310},{"krate":0,"index":1312},{"krate":0,"index":1314},{"krate":0,"index":1316},{"krate":0,"index":1318},{"krate":0,"index":1320},{"krate":0,"index":1322},{"krate":0,"index":1324},{"krate":0,"index":1326},{"krate":0,"index":1328},{"krate":0,"index":1330},{"krate":0,"index":1332}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1306},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8056,"byte_end":8060,"line_start":134,"line_end":134,"column_start":15,"column_end":19},"name":"HALF","qualname":"::scalar::Scalar::HALF","value":"Self","parent":{"krate":0,"index":1304},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1308},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8082,"byte_end":8086,"line_start":135,"line_end":135,"column_start":15,"column_end":19},"name":"ZERO","qualname":"::scalar::Scalar::ZERO","value":"Self","parent":{"krate":0,"index":1304},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1310},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8108,"byte_end":8111,"line_start":136,"line_end":136,"column_start":15,"column_end":18},"name":"ONE","qualname":"::scalar::Scalar::ONE","value":"Self","parent":{"krate":0,"index":1304},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1312},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8133,"byte_end":8136,"line_start":137,"line_end":137,"column_start":15,"column_end":18},"name":"TWO","qualname":"::scalar::Scalar::TWO","value":"Self","parent":{"krate":0,"index":1304},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1314},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8158,"byte_end":8163,"line_start":138,"line_end":138,"column_start":15,"column_end":20},"name":"THREE","qualname":"::scalar::Scalar::THREE","value":"Self","parent":{"krate":0,"index":1304},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1316},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8185,"byte_end":8189,"line_start":139,"line_end":139,"column_start":15,"column_end":19},"name":"FOUR","qualname":"::scalar::Scalar::FOUR","value":"Self","parent":{"krate":0,"index":1304},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1318},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8211,"byte_end":8215,"line_start":140,"line_end":140,"column_start":15,"column_end":19},"name":"FIVE","qualname":"::scalar::Scalar::FIVE","value":"Self","parent":{"krate":0,"index":1304},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1320},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8237,"byte_end":8240,"line_start":141,"line_end":141,"column_start":15,"column_end":18},"name":"SIX","qualname":"::scalar::Scalar::SIX","value":"Self","parent":{"krate":0,"index":1304},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1322},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8262,"byte_end":8267,"line_start":142,"line_end":142,"column_start":15,"column_end":20},"name":"SEVEN","qualname":"::scalar::Scalar::SEVEN","value":"Self","parent":{"krate":0,"index":1304},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1324},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8289,"byte_end":8294,"line_start":143,"line_end":143,"column_start":15,"column_end":20},"name":"EIGHT","qualname":"::scalar::Scalar::EIGHT","value":"Self","parent":{"krate":0,"index":1304},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1326},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8316,"byte_end":8320,"line_start":144,"line_end":144,"column_start":15,"column_end":19},"name":"NINE","qualname":"::scalar::Scalar::NINE","value":"Self","parent":{"krate":0,"index":1304},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1328},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8342,"byte_end":8345,"line_start":145,"line_end":145,"column_start":15,"column_end":18},"name":"TEN","qualname":"::scalar::Scalar::TEN","value":"Self","parent":{"krate":0,"index":1304},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1330},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8368,"byte_end":8375,"line_start":147,"line_end":147,"column_start":15,"column_end":22},"name":"EPSILON","qualname":"::scalar::Scalar::EPSILON","value":"Self","parent":{"krate":0,"index":1304},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1332},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8395,"byte_end":8400,"line_start":149,"line_end":149,"column_start":12,"column_end":17},"name":"value","qualname":"::scalar::Scalar::value","value":"fn (v: f32) -> Self","parent":{"krate":0,"index":1304},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1418},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10312,"byte_end":10316,"line_start":228,"line_end":228,"column_start":9,"column_end":13},"name":"math","qualname":"::math","value":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/lyon_geom-0.12.6/src/lib.rs","parent":null,"children":[{"krate":0,"index":1420},{"krate":0,"index":1422},{"krate":0,"index":1424},{"krate":0,"index":1426},{"krate":0,"index":1428},{"krate":0,"index":1430},{"krate":0,"index":1432},{"krate":0,"index":1434},{"krate":0,"index":1436},{"krate":0,"index":1438},{"krate":0,"index":1440},{"krate":0,"index":1442},{"krate":0,"index":1444},{"krate":0,"index":1446}],"decl_id":null,"docs":" Basic types that are used everywhere. Most other lyon crates\n reexport them.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1422},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10488,"byte_end":10493,"line_start":235,"line_end":235,"column_start":14,"column_end":19},"name":"Point","qualname":"::math::Point","value":"euclid::Point2D<f32>","parent":null,"children":[],"decl_id":null,"docs":" Alias for ```euclid::Point2D<f32>```.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1424},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10578,"byte_end":10586,"line_start":238,"line_end":238,"column_start":14,"column_end":22},"name":"F64Point","qualname":"::math::F64Point","value":"euclid::Point2D<f64>","parent":null,"children":[],"decl_id":null,"docs":" Alias for ```euclid::Point2D<f64>```.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1426},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10671,"byte_end":10677,"line_start":241,"line_end":241,"column_start":14,"column_end":20},"name":"Vector","qualname":"::math::Vector","value":"euclid::Vector2D<f32>","parent":null,"children":[],"decl_id":null,"docs":" Alias for ```euclid::Point2D<f32>```.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1428},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10762,"byte_end":10766,"line_start":244,"line_end":244,"column_start":14,"column_end":18},"name":"Size","qualname":"::math::Size","value":"euclid::Size2D<f32>","parent":null,"children":[],"decl_id":null,"docs":" Alias for ```euclid::Size2D<f32>```.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1430},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10846,"byte_end":10850,"line_start":247,"line_end":247,"column_start":14,"column_end":18},"name":"Rect","qualname":"::math::Rect","value":"euclid::Rect<f32>","parent":null,"children":[],"decl_id":null,"docs":" Alias for ```euclid::Rect<f32>```\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1432},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10935,"byte_end":10946,"line_start":250,"line_end":250,"column_start":14,"column_end":25},"name":"Transform2D","qualname":"::math::Transform2D","value":"euclid::Transform2D<f32>","parent":null,"children":[],"decl_id":null,"docs":" Alias for ```euclid::Transform2D<f32>```\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1434},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11037,"byte_end":11047,"line_start":253,"line_end":253,"column_start":14,"column_end":24},"name":"Rotation2D","qualname":"::math::Rotation2D","value":"euclid::Rotation2D<f32>","parent":null,"children":[],"decl_id":null,"docs":" Alias for ```euclid::Rotation2D<f32>```\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1436},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11124,"byte_end":11129,"line_start":256,"line_end":256,"column_start":14,"column_end":19},"name":"Angle","qualname":"::math::Angle","value":"euclid::Angle<f32>","parent":null,"children":[],"decl_id":null,"docs":" An angle in radians (f32).\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1446},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11549,"byte_end":11558,"line_start":271,"line_end":271,"column_start":15,"column_end":24},"name":"Transform","qualname":"::math::Transform","value":"Transform","parent":null,"children":[{"krate":0,"index":1448}],"decl_id":null,"docs":" Anything that can be transformed in 2D.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1448},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11572,"byte_end":11581,"line_start":272,"line_end":272,"column_start":12,"column_end":21},"name":"transform","qualname":"::math::Transform::transform","value":"fn (&self, mat: &Transform2D) -> Self","parent":{"krate":0,"index":1446},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1450},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11635,"byte_end":11641,"line_start":277,"line_end":277,"column_start":9,"column_end":15},"name":"traits","qualname":"::traits","value":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/lyon_geom-0.12.6/src/lib.rs","parent":null,"children":[{"krate":0,"index":1452}],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,115,101,103,109,101,110,116,46,114,115],"byte_start":15435,"byte_end":15436,"line_start":99,"line_end":99,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,115,101,103,109,101,110,116,46,114,115],"byte_start":16246,"byte_end":16255,"line_start":127,"line_end":127,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,115,101,103,109,101,110,116,46,114,115],"byte_start":16533,"byte_end":16542,"line_start":138,"line_end":138,"column_start":59,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":106},{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,115,101,103,109,101,110,116,46,114,115],"byte_start":18489,"byte_end":18502,"line_start":197,"line_end":197,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":116},{"krate":0,"index":118},{"krate":0,"index":120},{"krate":0,"index":122},{"krate":0,"index":124},{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,115,101,103,109,101,110,116,46,114,115],"byte_start":20665,"byte_end":20678,"line_start":262,"line_end":262,"column_start":34,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,115,101,103,109,101,110,116,46,114,115],"byte_start":20811,"byte_end":20824,"line_start":268,"line_end":268,"column_start":45,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,115,101,103,109,101,110,116,46,114,115],"byte_start":20967,"byte_end":20980,"line_start":274,"line_end":274,"column_start":41,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,113,117,97,100,114,97,116,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":22073,"byte_end":22095,"line_start":28,"line_end":28,"column_start":17,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":192},{"krate":0,"index":194},{"krate":0,"index":196},{"krate":0,"index":198},{"krate":0,"index":200},{"krate":0,"index":202},{"krate":0,"index":204},{"krate":0,"index":206},{"krate":0,"index":208},{"krate":0,"index":210},{"krate":0,"index":212},{"krate":0,"index":214},{"krate":0,"index":216},{"krate":0,"index":218},{"krate":0,"index":220},{"krate":0,"index":222},{"krate":0,"index":224},{"krate":0,"index":226},{"krate":0,"index":228},{"krate":0,"index":230},{"krate":0,"index":232},{"krate":0,"index":234},{"krate":0,"index":236},{"krate":0,"index":238},{"krate":0,"index":240},{"krate":0,"index":242},{"krate":0,"index":244},{"krate":0,"index":246},{"krate":0,"index":248},{"krate":0,"index":250},{"krate":0,"index":252},{"krate":0,"index":254},{"krate":0,"index":256},{"krate":0,"index":258},{"krate":0,"index":260},{"krate":0,"index":262},{"krate":0,"index":264},{"krate":0,"index":266},{"krate":0,"index":268},{"krate":0,"index":270},{"krate":0,"index":272},{"krate":0,"index":274},{"krate":0,"index":276},{"krate":0,"index":278},{"krate":0,"index":280},{"krate":0,"index":282},{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,113,117,97,100,114,97,116,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":37796,"byte_end":37818,"line_start":499,"line_end":499,"column_start":29,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1496},{"krate":0,"index":1498},{"krate":0,"index":1500},{"krate":0,"index":1502},{"krate":0,"index":1504},{"krate":0,"index":1506},{"krate":0,"index":1508},{"krate":0,"index":1510},{"krate":0,"index":1512},{"krate":0,"index":1514},{"krate":0,"index":1516},{"krate":0,"index":1518},{"krate":0,"index":1520},{"krate":0,"index":1522},{"krate":0,"index":1524}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,113,117,97,100,114,97,116,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":37878,"byte_end":37900,"line_start":501,"line_end":501,"column_start":34,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":290},{"krate":0,"index":292},{"krate":0,"index":294},{"krate":0,"index":296},{"krate":0,"index":298},{"krate":0,"index":300},{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,113,117,97,100,114,97,116,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":38399,"byte_end":38421,"line_start":511,"line_end":511,"column_start":36,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":47262,"byte_end":47280,"line_start":30,"line_end":30,"column_start":17,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":380},{"krate":0,"index":382},{"krate":0,"index":384},{"krate":0,"index":386},{"krate":0,"index":388},{"krate":0,"index":390},{"krate":0,"index":392},{"krate":0,"index":394},{"krate":0,"index":396},{"krate":0,"index":398},{"krate":0,"index":400},{"krate":0,"index":402},{"krate":0,"index":404},{"krate":0,"index":406},{"krate":0,"index":408},{"krate":0,"index":410},{"krate":0,"index":412},{"krate":0,"index":414},{"krate":0,"index":416},{"krate":0,"index":418},{"krate":0,"index":420},{"krate":0,"index":422},{"krate":0,"index":424},{"krate":0,"index":426},{"krate":0,"index":428},{"krate":0,"index":430},{"krate":0,"index":432},{"krate":0,"index":434},{"krate":0,"index":436},{"krate":0,"index":438},{"krate":0,"index":440},{"krate":0,"index":442},{"krate":0,"index":444},{"krate":0,"index":448},{"krate":0,"index":450},{"krate":0,"index":452},{"krate":0,"index":454},{"krate":0,"index":456},{"krate":0,"index":458},{"krate":0,"index":460},{"krate":0,"index":462},{"krate":0,"index":464},{"krate":0,"index":466},{"krate":0,"index":468},{"krate":0,"index":470},{"krate":0,"index":472},{"krate":0,"index":474},{"krate":0,"index":476},{"krate":0,"index":478},{"krate":0,"index":482},{"krate":0,"index":484},{"krate":0,"index":486},{"krate":0,"index":488},{"krate":0,"index":490},{"krate":0,"index":492},{"krate":0,"index":494},{"krate":0,"index":496}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":74746,"byte_end":74764,"line_start":823,"line_end":823,"column_start":29,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1544},{"krate":0,"index":1546},{"krate":0,"index":1548},{"krate":0,"index":1550},{"krate":0,"index":1552},{"krate":0,"index":1554},{"krate":0,"index":1556},{"krate":0,"index":1558},{"krate":0,"index":1560},{"krate":0,"index":1562},{"krate":0,"index":1564},{"krate":0,"index":1566},{"krate":0,"index":1568},{"krate":0,"index":1570},{"krate":0,"index":1572}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":74824,"byte_end":74842,"line_start":825,"line_end":825,"column_start":34,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":502},{"krate":0,"index":504},{"krate":0,"index":506},{"krate":0,"index":508},{"krate":0,"index":510},{"krate":0,"index":512},{"krate":0,"index":514}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":75343,"byte_end":75361,"line_start":835,"line_end":835,"column_start":38,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":518}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":87761,"byte_end":87764,"line_start":39,"line_end":39,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":576},{"krate":0,"index":578},{"krate":0,"index":580},{"krate":0,"index":582},{"krate":0,"index":584},{"krate":0,"index":586},{"krate":0,"index":588},{"krate":0,"index":590},{"krate":0,"index":592},{"krate":0,"index":594},{"krate":0,"index":596},{"krate":0,"index":598},{"krate":0,"index":600},{"krate":0,"index":602},{"krate":0,"index":604},{"krate":0,"index":606},{"krate":0,"index":608},{"krate":0,"index":610},{"krate":0,"index":612},{"krate":0,"index":614},{"krate":0,"index":616},{"krate":0,"index":618},{"krate":0,"index":620},{"krate":0,"index":622},{"krate":0,"index":624},{"krate":0,"index":626},{"krate":0,"index":628},{"krate":0,"index":630},{"krate":0,"index":632},{"krate":0,"index":634},{"krate":0,"index":636},{"krate":0,"index":638}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":100382,"byte_end":100388,"line_start":436,"line_end":436,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":642}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":100459,"byte_end":100465,"line_start":440,"line_end":440,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":646},{"krate":0,"index":648},{"krate":0,"index":650},{"krate":0,"index":652},{"krate":0,"index":654}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":102497,"byte_end":102505,"line_start":507,"line_end":507,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":658}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":105400,"byte_end":105403,"line_start":589,"line_end":589,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":668},{"krate":0,"index":670},{"krate":0,"index":672},{"krate":0,"index":674},{"krate":0,"index":676},{"krate":0,"index":678},{"krate":0,"index":680},{"krate":0,"index":682},{"krate":0,"index":684},{"krate":0,"index":686},{"krate":0,"index":688},{"krate":0,"index":690},{"krate":0,"index":692}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":106186,"byte_end":106189,"line_start":607,"line_end":607,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":696},{"krate":0,"index":698},{"krate":0,"index":700},{"krate":0,"index":702},{"krate":0,"index":704},{"krate":0,"index":706},{"krate":0,"index":708}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":106688,"byte_end":106691,"line_start":617,"line_end":617,"column_start":36,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":712}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,102,108,97,116,116,101,110,95,99,117,98,105,99,46,114,115],"byte_start":170346,"byte_end":170355,"line_start":29,"line_end":29,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":838}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,102,108,97,116,116,101,110,95,99,117,98,105,99,46,114,115],"byte_start":171705,"byte_end":171714,"line_start":65,"line_end":65,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":842},{"krate":0,"index":844}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,116,114,105,97,110,103,108,101,46,114,115],"byte_start":184578,"byte_end":184586,"line_start":14,"line_end":14,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":878},{"krate":0,"index":880},{"krate":0,"index":882},{"krate":0,"index":884},{"krate":0,"index":886},{"krate":0,"index":888},{"krate":0,"index":890},{"krate":0,"index":892},{"krate":0,"index":894},{"krate":0,"index":896},{"krate":0,"index":898},{"krate":0,"index":900}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":192122,"byte_end":192133,"line_start":18,"line_end":18,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":940},{"krate":0,"index":942},{"krate":0,"index":944},{"krate":0,"index":946},{"krate":0,"index":948},{"krate":0,"index":950},{"krate":0,"index":952},{"krate":0,"index":954},{"krate":0,"index":956},{"krate":0,"index":958},{"krate":0,"index":960},{"krate":0,"index":962},{"krate":0,"index":964},{"krate":0,"index":966},{"krate":0,"index":968},{"krate":0,"index":970},{"krate":0,"index":972},{"krate":0,"index":974},{"krate":0,"index":976},{"krate":0,"index":978},{"krate":0,"index":980},{"krate":0,"index":982},{"krate":0,"index":984},{"krate":0,"index":986},{"krate":0,"index":988},{"krate":0,"index":990},{"krate":0,"index":992},{"krate":0,"index":994},{"krate":0,"index":996},{"krate":0,"index":998},{"krate":0,"index":1000},{"krate":0,"index":1002},{"krate":0,"index":1004}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":200853,"byte_end":200864,"line_start":331,"line_end":331,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1008},{"krate":0,"index":1010},{"krate":0,"index":1012},{"krate":0,"index":1014},{"krate":0,"index":1016},{"krate":0,"index":1018},{"krate":0,"index":1020},{"krate":0,"index":1022},{"krate":0,"index":1024},{"krate":0,"index":1026},{"krate":0,"index":1028},{"krate":0,"index":1030},{"krate":0,"index":1032},{"krate":0,"index":1034},{"krate":0,"index":1036}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":201720,"byte_end":201731,"line_start":349,"line_end":349,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1040},{"krate":0,"index":1042},{"krate":0,"index":1044},{"krate":0,"index":1046},{"krate":0,"index":1048},{"krate":0,"index":1050},{"krate":0,"index":1052}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":202217,"byte_end":202228,"line_start":359,"line_end":359,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1056},{"krate":0,"index":1058}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":202405,"byte_end":202416,"line_start":366,"line_end":366,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1062}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":202733,"byte_end":202737,"line_start":378,"line_end":378,"column_start":17,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1066},{"krate":0,"index":1068},{"krate":0,"index":1070},{"krate":0,"index":1072}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":204296,"byte_end":204308,"line_start":427,"line_end":427,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1076},{"krate":0,"index":1078},{"krate":0,"index":1080},{"krate":0,"index":1082},{"krate":0,"index":1084},{"krate":0,"index":1086},{"krate":0,"index":1088},{"krate":0,"index":1090},{"krate":0,"index":1092},{"krate":0,"index":1094},{"krate":0,"index":1096},{"krate":0,"index":1098},{"krate":0,"index":1100},{"krate":0,"index":1102},{"krate":0,"index":1104},{"krate":0,"index":1106}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,109,111,110,111,116,111,110,105,99,46,114,115],"byte_start":214798,"byte_end":214807,"line_start":21,"line_end":21,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1150},{"krate":0,"index":1152},{"krate":0,"index":1154},{"krate":0,"index":1156},{"krate":0,"index":1158},{"krate":0,"index":1160},{"krate":0,"index":1162},{"krate":0,"index":1164},{"krate":0,"index":1166},{"krate":0,"index":1168},{"krate":0,"index":1170},{"krate":0,"index":1172},{"krate":0,"index":1174},{"krate":0,"index":1176},{"krate":0,"index":1178}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,109,111,110,111,116,111,110,105,99,46,114,115],"byte_start":216432,"byte_end":216441,"line_start":67,"line_end":67,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1710},{"krate":0,"index":1712},{"krate":0,"index":1714},{"krate":0,"index":1716},{"krate":0,"index":1718},{"krate":0,"index":1720},{"krate":0,"index":1722},{"krate":0,"index":1724},{"krate":0,"index":1726},{"krate":0,"index":1728},{"krate":0,"index":1730},{"krate":0,"index":1732},{"krate":0,"index":1734},{"krate":0,"index":1736},{"krate":0,"index":1738}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,109,111,110,111,116,111,110,105,99,46,114,115],"byte_start":216515,"byte_end":216524,"line_start":69,"line_end":69,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1184},{"krate":0,"index":1186},{"krate":0,"index":1188},{"krate":0,"index":1190},{"krate":0,"index":1192},{"krate":0,"index":1194},{"krate":0,"index":1196}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,109,111,110,111,116,111,110,105,99,46,114,115],"byte_start":217309,"byte_end":217318,"line_start":93,"line_end":93,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1200},{"krate":0,"index":1202},{"krate":0,"index":1204},{"krate":0,"index":1206},{"krate":0,"index":1208},{"krate":0,"index":1210},{"krate":0,"index":1212},{"krate":0,"index":1214}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,109,111,110,111,116,111,110,105,99,46,114,115],"byte_start":219844,"byte_end":219853,"line_start":182,"line_end":182,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1218},{"krate":0,"index":1220}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,109,111,110,111,116,111,110,105,99,46,114,115],"byte_start":220035,"byte_end":220044,"line_start":189,"line_end":189,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1224},{"krate":0,"index":1226}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,109,111,110,111,116,111,110,105,99,46,114,115],"byte_start":221475,"byte_end":221484,"line_start":250,"line_end":250,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1230},{"krate":0,"index":1232}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6903,"byte_end":6919,"line_start":86,"line_end":86,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":140}},{"kind":"Mod","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6929,"byte_end":6941,"line_start":87,"line_end":87,"column_start":9,"column_end":21},"ref_id":{"krate":0,"index":310}},{"kind":"Mod","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6951,"byte_end":6954,"line_start":88,"line_end":88,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":522}},{"kind":"Mod","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6964,"byte_end":6969,"line_start":89,"line_end":89,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":714}},{"kind":"Mod","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6979,"byte_end":6997,"line_start":90,"line_end":90,"column_start":9,"column_end":27},"ref_id":{"krate":0,"index":744}}],"macro_refs":[],"relations":[{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,115,101,103,109,101,110,116,46,114,115],"byte_start":11991,"byte_end":11995,"line_start":8,"line_end":8,"column_start":20,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":1710},"to":{"krate":0,"index":36}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,115,101,103,109,101,110,116,46,114,115],"byte_start":11998,"byte_end":12003,"line_start":8,"line_end":8,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":1706},"to":{"krate":0,"index":36}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,115,101,103,109,101,110,116,46,114,115],"byte_start":14654,"byte_end":14661,"line_start":81,"line_end":81,"column_start":29,"column_end":36},"kind":"SuperTrait","from":{"krate":0,"index":36},"to":{"krate":0,"index":84}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,115,101,103,109,101,110,116,46,114,115],"byte_start":14955,"byte_end":14971,"line_start":87,"line_end":87,"column_start":27,"column_end":43},"kind":"SuperTrait","from":{"krate":0,"index":84},"to":{"krate":0,"index":88}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,115,101,103,109,101,110,116,46,114,115],"byte_start":15435,"byte_end":15436,"line_start":99,"line_end":99,"column_start":30,"column_end":31},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":21},"to":{"krate":0,"index":84}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,115,101,103,109,101,110,116,46,114,115],"byte_start":16246,"byte_end":16255,"line_start":127,"line_end":127,"column_start":36,"column_end":45},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":98},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,115,101,103,109,101,110,116,46,114,115],"byte_start":16533,"byte_end":16542,"line_start":138,"line_end":138,"column_start":59,"column_end":68},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":98},"to":{"krate":2,"index":4316}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,115,101,103,109,101,110,116,46,114,115],"byte_start":18489,"byte_end":18502,"line_start":197,"line_end":197,"column_start":17,"column_end":30},"kind":{"variant":"Impl","fields":[3]},"from":{"krate":0,"index":1460},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,115,101,103,109,101,110,116,46,114,115],"byte_start":20665,"byte_end":20678,"line_start":262,"line_end":262,"column_start":34,"column_end":47},"kind":{"variant":"Impl","fields":[4]},"from":{"krate":0,"index":1460},"to":{"krate":2,"index":2656}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,115,101,103,109,101,110,116,46,114,115],"byte_start":20811,"byte_end":20824,"line_start":268,"line_end":268,"column_start":45,"column_end":58},"kind":{"variant":"Impl","fields":[5]},"from":{"krate":0,"index":1460},"to":{"krate":2,"index":2656}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,115,101,103,109,101,110,116,46,114,115],"byte_start":20967,"byte_end":20980,"line_start":274,"line_end":274,"column_start":41,"column_end":54},"kind":{"variant":"Impl","fields":[6]},"from":{"krate":0,"index":1460},"to":{"krate":2,"index":2656}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,113,117,97,100,114,97,116,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":22073,"byte_end":22095,"line_start":28,"line_end":28,"column_start":17,"column_end":39},"kind":{"variant":"Impl","fields":[7]},"from":{"krate":0,"index":1478},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,113,117,97,100,114,97,116,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":37796,"byte_end":37818,"line_start":499,"line_end":499,"column_start":29,"column_end":51},"kind":{"variant":"Impl","fields":[8]},"from":{"krate":0,"index":1478},"to":{"krate":0,"index":36}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,113,117,97,100,114,97,116,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":37878,"byte_end":37900,"line_start":501,"line_end":501,"column_start":34,"column_end":56},"kind":{"variant":"Impl","fields":[9]},"from":{"krate":0,"index":1478},"to":{"krate":0,"index":68}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,113,117,97,100,114,97,116,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":38399,"byte_end":38421,"line_start":511,"line_end":511,"column_start":36,"column_end":58},"kind":{"variant":"Impl","fields":[10]},"from":{"krate":0,"index":1478},"to":{"krate":0,"index":88}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":47262,"byte_end":47280,"line_start":30,"line_end":30,"column_start":17,"column_end":35},"kind":{"variant":"Impl","fields":[11]},"from":{"krate":0,"index":1526},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":74746,"byte_end":74764,"line_start":823,"line_end":823,"column_start":29,"column_end":47},"kind":{"variant":"Impl","fields":[12]},"from":{"krate":0,"index":1526},"to":{"krate":0,"index":36}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":74824,"byte_end":74842,"line_start":825,"line_end":825,"column_start":34,"column_end":52},"kind":{"variant":"Impl","fields":[13]},"from":{"krate":0,"index":1526},"to":{"krate":0,"index":68}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,99,117,98,105,99,95,98,101,122,105,101,114,46,114,115],"byte_start":75343,"byte_end":75361,"line_start":835,"line_end":835,"column_start":38,"column_end":56},"kind":{"variant":"Impl","fields":[14]},"from":{"krate":0,"index":1526},"to":{"krate":0,"index":84}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":87761,"byte_end":87764,"line_start":39,"line_end":39,"column_start":17,"column_end":20},"kind":{"variant":"Impl","fields":[15]},"from":{"krate":0,"index":1592},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":100382,"byte_end":100388,"line_start":436,"line_end":436,"column_start":34,"column_end":40},"kind":{"variant":"Impl","fields":[16]},"from":{"krate":0,"index":1574},"to":{"krate":2,"index":2652}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":100459,"byte_end":100465,"line_start":440,"line_end":440,"column_start":17,"column_end":23},"kind":{"variant":"Impl","fields":[17]},"from":{"krate":0,"index":1574},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":102497,"byte_end":102505,"line_start":507,"line_end":507,"column_start":18,"column_end":26},"kind":{"variant":"Impl","fields":[18]},"from":{"krate":0,"index":1610},"to":{"krate":2,"index":2632}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":105400,"byte_end":105403,"line_start":589,"line_end":589,"column_start":29,"column_end":32},"kind":{"variant":"Impl","fields":[19]},"from":{"krate":0,"index":1592},"to":{"krate":0,"index":36}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":106186,"byte_end":106189,"line_start":607,"line_end":607,"column_start":34,"column_end":37},"kind":{"variant":"Impl","fields":[20]},"from":{"krate":0,"index":1592},"to":{"krate":0,"index":68}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,97,114,99,46,114,115],"byte_start":106688,"byte_end":106691,"line_start":617,"line_end":617,"column_start":36,"column_end":39},"kind":{"variant":"Impl","fields":[21]},"from":{"krate":0,"index":1592},"to":{"krate":0,"index":88}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,102,108,97,116,116,101,110,95,99,117,98,105,99,46,114,115],"byte_start":170346,"byte_end":170355,"line_start":29,"line_end":29,"column_start":17,"column_end":26},"kind":{"variant":"Impl","fields":[22]},"from":{"krate":0,"index":834},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,102,108,97,116,116,101,110,95,99,117,98,105,99,46,114,115],"byte_start":171705,"byte_end":171714,"line_start":65,"line_end":65,"column_start":30,"column_end":39},"kind":{"variant":"Impl","fields":[23]},"from":{"krate":0,"index":834},"to":{"krate":2,"index":4316}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,116,114,105,97,110,103,108,101,46,114,115],"byte_start":184578,"byte_end":184586,"line_start":14,"line_end":14,"column_start":17,"column_end":25},"kind":{"variant":"Impl","fields":[24]},"from":{"krate":0,"index":1628},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":192122,"byte_end":192133,"line_start":18,"line_end":18,"column_start":17,"column_end":28},"kind":{"variant":"Impl","fields":[25]},"from":{"krate":0,"index":1646},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":200853,"byte_end":200864,"line_start":331,"line_end":331,"column_start":29,"column_end":40},"kind":{"variant":"Impl","fields":[26]},"from":{"krate":0,"index":1646},"to":{"krate":0,"index":36}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":201720,"byte_end":201731,"line_start":349,"line_end":349,"column_start":34,"column_end":45},"kind":{"variant":"Impl","fields":[27]},"from":{"krate":0,"index":1646},"to":{"krate":0,"index":68}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":202217,"byte_end":202228,"line_start":359,"line_end":359,"column_start":38,"column_end":49},"kind":{"variant":"Impl","fields":[28]},"from":{"krate":0,"index":1646},"to":{"krate":0,"index":1142}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":202405,"byte_end":202416,"line_start":366,"line_end":366,"column_start":36,"column_end":47},"kind":{"variant":"Impl","fields":[29]},"from":{"krate":0,"index":1646},"to":{"krate":0,"index":88}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":202733,"byte_end":202737,"line_start":378,"line_end":378,"column_start":17,"column_end":21},"kind":{"variant":"Impl","fields":[30]},"from":{"krate":0,"index":1664},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,110,101,46,114,115],"byte_start":204296,"byte_end":204308,"line_start":427,"line_end":427,"column_start":17,"column_end":29},"kind":{"variant":"Impl","fields":[31]},"from":{"krate":0,"index":1676},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,109,111,110,111,116,111,110,105,99,46,114,115],"byte_start":214798,"byte_end":214807,"line_start":21,"line_end":21,"column_start":18,"column_end":27},"kind":{"variant":"Impl","fields":[32]},"from":{"krate":0,"index":1698},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,109,111,110,111,116,111,110,105,99,46,114,115],"byte_start":216432,"byte_end":216441,"line_start":67,"line_end":67,"column_start":30,"column_end":39},"kind":{"variant":"Impl","fields":[33]},"from":{"krate":0,"index":1698},"to":{"krate":0,"index":36}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,109,111,110,111,116,111,110,105,99,46,114,115],"byte_start":216515,"byte_end":216524,"line_start":69,"line_end":69,"column_start":40,"column_end":49},"kind":{"variant":"Impl","fields":[34]},"from":{"krate":0,"index":1698},"to":{"krate":0,"index":68}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,109,111,110,111,116,111,110,105,99,46,114,115],"byte_start":217309,"byte_end":217318,"line_start":93,"line_end":93,"column_start":17,"column_end":26},"kind":{"variant":"Impl","fields":[35]},"from":{"krate":0,"index":1698},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,109,111,110,111,116,111,110,105,99,46,114,115],"byte_start":219844,"byte_end":219853,"line_start":182,"line_end":182,"column_start":38,"column_end":47},"kind":{"variant":"Impl","fields":[36]},"from":{"krate":0,"index":1698},"to":{"krate":0,"index":1142}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,109,111,110,111,116,111,110,105,99,46,114,115],"byte_start":220035,"byte_end":220044,"line_start":189,"line_end":189,"column_start":17,"column_end":26},"kind":{"variant":"Impl","fields":[37]},"from":{"krate":0,"index":1698},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,109,111,110,111,116,111,110,105,99,46,114,115],"byte_start":221475,"byte_end":221484,"line_start":250,"line_end":250,"column_start":38,"column_end":47},"kind":{"variant":"Impl","fields":[38]},"from":{"krate":0,"index":1698},"to":{"krate":0,"index":1142}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7846,"byte_end":7851,"line_start":122,"line_end":122,"column_start":11,"column_end":16},"kind":"SuperTrait","from":{"krate":14,"index":434},"to":{"krate":0,"index":1304}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7862,"byte_end":7869,"line_start":123,"line_end":123,"column_start":11,"column_end":18},"kind":"SuperTrait","from":{"krate":14,"index":330},"to":{"krate":0,"index":1304}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7880,"byte_end":7890,"line_start":124,"line_end":124,"column_start":11,"column_end":21},"kind":"SuperTrait","from":{"krate":14,"index":3640},"to":{"krate":0,"index":1304}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7901,"byte_end":7906,"line_start":125,"line_end":125,"column_start":11,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":1706},"to":{"krate":0,"index":1304}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7917,"byte_end":7924,"line_start":126,"line_end":126,"column_start":11,"column_end":18},"kind":"SuperTrait","from":{"krate":2,"index":8430},"to":{"krate":0,"index":1304}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7935,"byte_end":7940,"line_start":127,"line_end":127,"column_start":11,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":8426},"to":{"krate":0,"index":1304}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7951,"byte_end":7955,"line_start":128,"line_end":128,"column_start":11,"column_end":15},"kind":"SuperTrait","from":{"krate":12,"index":2588},"to":{"krate":0,"index":1304}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7966,"byte_end":7975,"line_start":129,"line_end":129,"column_start":11,"column_end":20},"kind":"SuperTrait","from":{"krate":2,"index":1824},"to":{"krate":0,"index":1304}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7986,"byte_end":7995,"line_start":130,"line_end":130,"column_start":11,"column_end":20},"kind":"SuperTrait","from":{"krate":2,"index":1830},"to":{"krate":0,"index":1304}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8006,"byte_end":8015,"line_start":131,"line_end":131,"column_start":11,"column_end":20},"kind":"SuperTrait","from":{"krate":2,"index":1836},"to":{"krate":0,"index":1304}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,121,111,110,95,103,101,111,109,45,48,46,49,50,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8026,"byte_end":8035,"line_start":132,"line_end":132,"column_start":11,"column_end":20},"kind":"SuperTrait","from":{"krate":2,"index":1842},"to":{"krate":0,"index":1304}}]}