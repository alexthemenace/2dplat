{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.18.2","compilation":{"directory":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,97,119,112,111,105,110,116,101,114,45,48,46,49,46,48],"program":"/Users/Kumar/.rustup/toolchains/nightly-2019-02-27-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","rawpointer","/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/rawpointer-0.1.0/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=ff45cea31d55ddc8","-C","extra-filename=-ff45cea31d55ddc8","--out-dir","/Users/Kumar/personal/workspace/rust/mayhem-galactica/target/rls/debug/deps","-L","dependency=/Users/Kumar/personal/workspace/rust/mayhem-galactica/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/Kumar/.rustup/toolchains/nightly-2019-02-27-x86_64-apple-darwin"],"output":[47,85,115,101,114,115,47,75,117,109,97,114,47,112,101,114,115,111,110,97,108,47,119,111,114,107,115,112,97,99,101,47,114,117,115,116,47,109,97,121,104,101,109,45,103,97,108,97,99,116,105,99,97,47,116,97,114,103,101,116,47,114,108,115,47,100,101,98,117,103,47,100,101,112,115,47,108,105,98,114,97,119,112,111,105,110,116,101,114,45,102,102,52,53,99,101,97,51,49,100,53,53,100,100,99,56,46,114,109,101,116,97]},"prelude":{"crate_id":{"name":"rawpointer","disambiguator":[11547590561825514690,12220801786680448118]},"crate_root":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/rawpointer-0.1.0/src","external_crates":[{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/rawpointer-0.1.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[6760693024494354245,14002820984158080208]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/rawpointer-0.1.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[199464317358532175,14697293645914925506]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/rawpointer-0.1.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[13558819658400235840,6800895293433658904]}}],"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,97,119,112,111,105,110,116,101,114,45,48,46,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":354,"byte_end":3000,"line_start":8,"line_end":118,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,97,119,112,111,105,110,116,101,114,45,48,46,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":354,"byte_end":3000,"line_start":8,"line_end":118,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/rawpointer-0.1.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":12},{"krate":0,"index":30},{"krate":0,"index":34}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"no_std","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,97,119,112,111,105,110,116,101,114,45,48,46,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":354,"byte_end":364,"line_start":8,"line_end":8,"column_start":1,"column_end":11}}]},{"kind":"Function","id":{"krate":0,"index":10},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,97,119,112,111,105,110,116,101,114,45,48,46,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":542,"byte_end":553,"line_start":15,"line_end":15,"column_start":8,"column_end":19},"name":"ptrdistance","qualname":"::ptrdistance","value":"fn <T> (start: *const T, end: *const T) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of elements of `T` from `start` to `end`.<br>\n Return the arithmetic difference if `T` is zero size.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,97,119,112,111,105,110,116,101,114,45,48,46,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":517,"byte_end":534,"line_start":14,"line_end":14,"column_start":1,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":12},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,97,119,112,111,105,110,116,101,114,45,48,46,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":820,"byte_end":830,"line_start":25,"line_end":25,"column_start":11,"column_end":21},"name":"PointerExt","qualname":"::PointerExt","value":"PointerExt: Copy","parent":null,"children":[{"krate":0,"index":14},{"krate":0,"index":16},{"krate":0,"index":18},{"krate":0,"index":20},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":26},{"krate":0,"index":28}],"decl_id":null,"docs":" Extension methods for raw pointers\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":14},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,97,119,112,111,105,110,116,101,114,45,48,46,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":854,"byte_end":860,"line_start":26,"line_end":26,"column_start":15,"column_end":21},"name":"offset","qualname":"::PointerExt::offset","value":"fn (self, i: isize) -> Self","parent":{"krate":0,"index":12},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":16},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,97,119,112,111,105,110,116,101,114,45,48,46,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1036,"byte_end":1043,"line_start":32,"line_end":32,"column_start":15,"column_end":22},"name":"pre_inc","qualname":"::PointerExt::pre_inc","value":"fn (&mut self) -> Self","parent":{"krate":0,"index":12},"children":[],"decl_id":null,"docs":" Increment the pointer by 1, and return its new value.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,97,119,112,111,105,110,116,101,114,45,48,46,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1004,"byte_end":1021,"line_start":31,"line_end":31,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,97,119,112,111,105,110,116,101,114,45,48,46,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1267,"byte_end":1275,"line_start":41,"line_end":41,"column_start":15,"column_end":23},"name":"post_inc","qualname":"::PointerExt::post_inc","value":"fn (&mut self) -> Self","parent":{"krate":0,"index":12},"children":[],"decl_id":null,"docs":" Increment the pointer by 1, but return its old value.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,97,119,112,111,105,110,116,101,114,45,48,46,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1235,"byte_end":1252,"line_start":40,"line_end":40,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,97,119,112,111,105,110,116,101,114,45,48,46,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1530,"byte_end":1537,"line_start":51,"line_end":51,"column_start":15,"column_end":22},"name":"pre_dec","qualname":"::PointerExt::pre_dec","value":"fn (&mut self) -> Self","parent":{"krate":0,"index":12},"children":[],"decl_id":null,"docs":" Decrement the pointer by 1, and return its new value.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,97,119,112,111,105,110,116,101,114,45,48,46,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1498,"byte_end":1515,"line_start":50,"line_end":50,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,97,119,112,111,105,110,116,101,114,45,48,46,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1762,"byte_end":1770,"line_start":60,"line_end":60,"column_start":15,"column_end":23},"name":"post_dec","qualname":"::PointerExt::post_dec","value":"fn (&mut self) -> Self","parent":{"krate":0,"index":12},"children":[],"decl_id":null,"docs":" Decrement the pointer by 1, but return its old value.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,97,119,112,111,105,110,116,101,114,45,48,46,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1730,"byte_end":1747,"line_start":59,"line_end":59,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,97,119,112,111,105,110,116,101,114,45,48,46,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1936,"byte_end":1939,"line_start":68,"line_end":68,"column_start":15,"column_end":18},"name":"inc","qualname":"::PointerExt::inc","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":12},"children":[],"decl_id":null,"docs":" Increment by 1\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,97,119,112,111,105,110,116,101,114,45,48,46,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1904,"byte_end":1921,"line_start":67,"line_end":67,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,97,119,112,111,105,110,116,101,114,45,48,46,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2051,"byte_end":2054,"line_start":74,"line_end":74,"column_start":15,"column_end":18},"name":"dec","qualname":"::PointerExt::dec","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":12},"children":[],"decl_id":null,"docs":" Decrement by 1\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,97,119,112,111,105,110,116,101,114,45,48,46,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2019,"byte_end":2036,"line_start":73,"line_end":73,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,97,119,112,111,105,110,116,101,114,45,48,46,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2201,"byte_end":2214,"line_start":80,"line_end":80,"column_start":15,"column_end":28},"name":"stride_offset","qualname":"::PointerExt::stride_offset","value":"fn (self, s: isize, index: usize) -> Self","parent":{"krate":0,"index":12},"children":[],"decl_id":null,"docs":" Offset the pointer by `s` multiplied by `index`.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,97,119,112,111,105,110,116,101,114,45,48,46,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2169,"byte_end":2186,"line_start":79,"line_end":79,"column_start":5,"column_end":22}}]}],"impls":[],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,97,119,112,111,105,110,116,101,114,45,48,46,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":833,"byte_end":837,"line_start":25,"line_end":25,"column_start":24,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":1710},"to":{"krate":0,"index":12}}]}