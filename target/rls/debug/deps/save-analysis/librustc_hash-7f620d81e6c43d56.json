{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.18.2","compilation":{"directory":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,104,97,115,104,45,49,46,48,46,49],"program":"/Users/Kumar/.rustup/toolchains/nightly-2019-02-27-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","rustc_hash","/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.0.1/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=7f620d81e6c43d56","-C","extra-filename=-7f620d81e6c43d56","--out-dir","/Users/Kumar/personal/workspace/rust/mayhem-galactica/target/rls/debug/deps","-L","dependency=/Users/Kumar/personal/workspace/rust/mayhem-galactica/target/rls/debug/deps","--extern","byteorder=/Users/Kumar/personal/workspace/rust/mayhem-galactica/target/rls/debug/deps/libbyteorder-6744f278cffd5578.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/Kumar/.rustup/toolchains/nightly-2019-02-27-x86_64-apple-darwin"],"output":[47,85,115,101,114,115,47,75,117,109,97,114,47,112,101,114,115,111,110,97,108,47,119,111,114,107,115,112,97,99,101,47,114,117,115,116,47,109,97,121,104,101,109,45,103,97,108,97,99,116,105,99,97,47,116,97,114,103,101,116,47,114,108,115,47,100,101,98,117,103,47,100,101,112,115,47,108,105,98,114,117,115,116,99,95,104,97,115,104,45,55,102,54,50,48,100,56,49,101,54,99,52,51,100,53,54,46,114,109,101,116,97]},"prelude":{"crate_id":{"name":"rustc_hash","disambiguator":[4786700296657886300,3198581485759698632]},"crate_root":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.0.1/src","external_crates":[{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.0.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[17365010580081952725,18206160307474953630]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.0.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[6760693024494354245,14002820984158080208]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.0.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[199464317358532175,14697293645914925506]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.0.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13558819658400235840,6800895293433658904]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.0.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[18425220944332119967,14239145101900690943]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.0.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10854247164472963508,11478657302719725741]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.0.1/src/lib.rs","num":7,"id":{"name":"rustc_demangle","disambiguator":[4168194895173621532,15234647754953002462]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.0.1/src/lib.rs","num":8,"id":{"name":"unwind","disambiguator":[12306654840912142307,10869972980572175885]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.0.1/src/lib.rs","num":9,"id":{"name":"backtrace_sys","disambiguator":[1531625639640313062,14514900902579754273]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.0.1/src/lib.rs","num":10,"id":{"name":"panic_unwind","disambiguator":[13209889598193010227,616765238597587583]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.0.1/src/lib.rs","num":11,"id":{"name":"byteorder","disambiguator":[5633574704660589010,1124758284593715500]}}],"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,104,97,115,104,45,49,46,48,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":467,"byte_end":4166,"line_start":11,"line_end":136,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,104,97,115,104,45,49,46,48,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":467,"byte_end":4166,"line_start":11,"line_end":136,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.0.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":14},{"krate":0,"index":16},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":26},{"krate":0,"index":32},{"krate":0,"index":34},{"krate":0,"index":36},{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":44},{"krate":0,"index":48}],"decl_id":null,"docs":" Fast, non-cryptographic hash used by rustc and Firefox.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":32},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,104,97,115,104,45,49,46,48,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":983,"byte_end":992,"line_start":32,"line_end":32,"column_start":10,"column_end":19},"name":"FxHashMap","qualname":"::FxHashMap","value":"HashMap<K, V, BuildHasherDefault<FxHasher>>","parent":null,"children":[],"decl_id":null,"docs":" Type alias for a hashmap using the `fx` hash algorithm.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":34},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,104,97,115,104,45,49,46,48,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1116,"byte_end":1125,"line_start":35,"line_end":35,"column_start":10,"column_end":19},"name":"FxHashSet","qualname":"::FxHashSet","value":"HashSet<V, BuildHasherDefault<FxHasher>>","parent":null,"children":[],"decl_id":null,"docs":" Type alias for a hashmap using the `fx` hash algorithm.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":36},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,104,97,115,104,45,49,46,48,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1892,"byte_end":1900,"line_start":48,"line_end":48,"column_start":12,"column_end":20},"name":"FxHasher","qualname":"::FxHasher","value":"FxHasher {  }","parent":null,"children":[{"krate":0,"index":25}],"decl_id":null,"docs":" A speedy hash algorithm for use within rustc. The hashmap in liballoc\n by default uses SipHash which isn't quite as speedy as we want. In the\n compiler we're not really worried about DOS attempts, so we use a fast\n non-cryptographic hash.","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,104,97,115,104,45,49,46,48,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2078,"byte_end":2086,"line_start":57,"line_end":57,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,104,97,115,104,45,49,46,48,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2177,"byte_end":2185,"line_start":64,"line_end":64,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,104,97,115,104,45,49,46,48,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2341,"byte_end":2349,"line_start":71,"line_end":71,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":50},{"krate":0,"index":52},{"krate":0,"index":54},{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":60},{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,104,97,115,104,45,49,46,48,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2078,"byte_end":2086,"line_start":57,"line_end":57,"column_start":18,"column_end":26},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":36},"to":{"krate":2,"index":2632}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,104,97,115,104,45,49,46,48,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2177,"byte_end":2185,"line_start":64,"line_end":64,"column_start":6,"column_end":14},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":36},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,104,97,115,104,45,49,46,48,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2341,"byte_end":2349,"line_start":71,"line_end":71,"column_start":17,"column_end":25},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":36},"to":{"krate":2,"index":8008}}]}