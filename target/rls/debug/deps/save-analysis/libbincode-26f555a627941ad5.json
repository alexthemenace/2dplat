{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.18.2","compilation":{"directory":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52],"program":"/Users/Kumar/.rustup/toolchains/nightly-2019-02-27-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","bincode","/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.1.4/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=26f555a627941ad5","-C","extra-filename=-26f555a627941ad5","--out-dir","/Users/Kumar/personal/workspace/rust/mayhem-galactica/target/rls/debug/deps","-L","dependency=/Users/Kumar/personal/workspace/rust/mayhem-galactica/target/rls/debug/deps","--extern","byteorder=/Users/Kumar/personal/workspace/rust/mayhem-galactica/target/rls/debug/deps/libbyteorder-6744f278cffd5578.rmeta","--extern","serde=/Users/Kumar/personal/workspace/rust/mayhem-galactica/target/rls/debug/deps/libserde-48b0c7b6a5be35fd.rmeta","--cap-lints","allow","--cfg","has_i128","--error-format=json","--sysroot","/Users/Kumar/.rustup/toolchains/nightly-2019-02-27-x86_64-apple-darwin"],"output":[47,85,115,101,114,115,47,75,117,109,97,114,47,112,101,114,115,111,110,97,108,47,119,111,114,107,115,112,97,99,101,47,114,117,115,116,47,109,97,121,104,101,109,45,103,97,108,97,99,116,105,99,97,47,116,97,114,103,101,116,47,114,108,115,47,100,101,98,117,103,47,100,101,112,115,47,108,105,98,98,105,110,99,111,100,101,45,50,54,102,53,53,53,97,54,50,55,57,52,49,97,100,53,46,114,109,101,116,97]},"prelude":{"crate_id":{"name":"bincode","disambiguator":[18409190179881467619,11598480607626108702]},"crate_root":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.1.4/src","external_crates":[{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.1.4/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[17365010580081952725,18206160307474953630]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.1.4/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[6760693024494354245,14002820984158080208]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.1.4/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[199464317358532175,14697293645914925506]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.1.4/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13558819658400235840,6800895293433658904]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.1.4/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[18425220944332119967,14239145101900690943]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.1.4/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10854247164472963508,11478657302719725741]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.1.4/src/lib.rs","num":7,"id":{"name":"rustc_demangle","disambiguator":[4168194895173621532,15234647754953002462]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.1.4/src/lib.rs","num":8,"id":{"name":"unwind","disambiguator":[12306654840912142307,10869972980572175885]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.1.4/src/lib.rs","num":9,"id":{"name":"backtrace_sys","disambiguator":[1531625639640313062,14514900902579754273]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.1.4/src/lib.rs","num":10,"id":{"name":"panic_unwind","disambiguator":[13209889598193010227,616765238597587583]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.1.4/src/lib.rs","num":11,"id":{"name":"byteorder","disambiguator":[5633574704660589010,1124758284593715500]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.1.4/src/lib.rs","num":12,"id":{"name":"serde","disambiguator":[981439461511807069,17258384571547190005]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.1.4/src/lib.rs","num":13,"id":{"name":"serde_derive","disambiguator":[658740448506970560,9548512885115359140]}}],"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":5089,"line_start":1,"line_end":173,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":98},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1074,"byte_end":1080,"line_start":41,"line_end":41,"column_start":17,"column_end":23},"alias_span":null,"name":"Config","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":198},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1101,"byte_end":1112,"line_start":42,"line_end":42,"column_start":20,"column_end":31},"alias_span":null,"name":"BincodeRead","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":208},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1114,"byte_end":1122,"line_start":42,"line_end":42,"column_start":33,"column_end":41},"alias_span":null,"name":"IoReader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":206},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1124,"byte_end":1135,"line_start":42,"line_end":42,"column_start":43,"column_end":54},"alias_span":null,"name":"SliceReader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":388},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1154,"byte_end":1159,"line_start":43,"line_end":43,"column_start":17,"column_end":22},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":932},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1161,"byte_end":1170,"line_start":43,"line_end":43,"column_start":24,"column_end":33},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":386},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1172,"byte_end":1178,"line_start":43,"line_end":43,"column_start":35,"column_end":41},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":5089,"line_start":1,"line_end":173,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.1.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":164},{"krate":0,"index":370},{"krate":0,"index":412},{"krate":0,"index":476},{"krate":0,"index":846},{"krate":0,"index":848},{"krate":0,"index":856},{"krate":0,"index":864},{"krate":0,"index":870},{"krate":0,"index":876},{"krate":0,"index":878},{"krate":0,"index":880},{"krate":0,"index":882},{"krate":0,"index":884},{"krate":0,"index":886},{"krate":0,"index":888},{"krate":0,"index":890},{"krate":0,"index":892},{"krate":0,"index":894}],"decl_id":null,"docs":" Bincode is a crate for encoding and decoding using a tiny binary\n serialization strategy.  Using it, you can easily go from having\n an object in memory, quickly serialize it to bytes, and then\n deserialize it back just as fast!","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":22,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"crate_name = \"bincode\"","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":868,"byte_end":894,"line_start":27,"line_end":27,"column_start":1,"column_end":27}},{"value":"crate_type = \"rlib\"","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":895,"byte_end":918,"line_start":28,"line_end":28,"column_start":1,"column_end":24}},{"value":"crate_type = \"dylib\"","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":919,"byte_end":943,"line_start":29,"line_end":29,"column_start":1,"column_end":25}}]},{"kind":"Type","id":{"krate":0,"index":58},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":5499,"byte_end":5504,"line_start":16,"line_end":16,"column_start":10,"column_end":15},"name":"Limit","qualname":"::config::Options::Limit","value":"type Limit: SizeLimit + 'static;","parent":{"krate":0,"index":56},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":60},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":5536,"byte_end":5542,"line_start":17,"line_end":17,"column_start":10,"column_end":16},"name":"Endian","qualname":"::config::Options::Endian","value":"type Endian: ByteOrder + 'static;","parent":{"krate":0,"index":56},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":5573,"byte_end":5578,"line_start":19,"line_end":19,"column_start":8,"column_end":13},"name":"limit","qualname":"::config::Options::limit","value":"fn (&mut self) -> &mut Self::Limit","parent":{"krate":0,"index":56},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":98},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":7709,"byte_end":7715,"line_start":98,"line_end":98,"column_start":12,"column_end":18},"name":"Config","qualname":"::config::Config","value":"Config {  }","parent":null,"children":[{"krate":0,"index":29},{"krate":0,"index":31}],"decl_id":null,"docs":" A configuration builder whose options Bincode will use\n while serializing and deserializing.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":10306,"byte_end":10314,"line_start":196,"line_end":196,"column_start":12,"column_end":20},"name":"no_limit","qualname":"<Config>::no_limit","value":"fn (&mut self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the byte limit to be unlimited.\n This is the default.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":10277,"byte_end":10294,"line_start":195,"line_end":195,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":10479,"byte_end":10484,"line_start":203,"line_end":203,"column_start":12,"column_end":17},"name":"limit","qualname":"<Config>::limit","value":"fn (&mut self, limit: u64) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the byte limit to `limit`.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":10450,"byte_end":10467,"line_start":202,"line_end":202,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":10700,"byte_end":10713,"line_start":211,"line_end":211,"column_start":12,"column_end":25},"name":"little_endian","qualname":"<Config>::little_endian","value":"fn (&mut self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the endianness to little-endian\n This is the default.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":10671,"byte_end":10688,"line_start":210,"line_end":210,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":10879,"byte_end":10889,"line_start":218,"line_end":218,"column_start":12,"column_end":22},"name":"big_endian","qualname":"<Config>::big_endian","value":"fn (&mut self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the endianness to big-endian\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":10850,"byte_end":10867,"line_start":217,"line_end":217,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":11075,"byte_end":11088,"line_start":225,"line_end":225,"column_start":12,"column_end":25},"name":"native_endian","qualname":"<Config>::native_endian","value":"fn (&mut self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the endianness to the the machine-native endianness\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":11046,"byte_end":11063,"line_start":224,"line_end":224,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":11300,"byte_end":11309,"line_start":232,"line_end":232,"column_start":12,"column_end":21},"name":"serialize","qualname":"<Config>::serialize","value":"fn <T> (&self, t: &T) -> Result<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Serializes a serializable object into a `Vec` of bytes using this configuration\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":11271,"byte_end":11288,"line_start":231,"line_end":231,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":11582,"byte_end":11597,"line_start":238,"line_end":238,"column_start":12,"column_end":27},"name":"serialized_size","qualname":"<Config>::serialized_size","value":"fn <T> (&self, t: &T) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Returns the size that an object would be if serialized using Bincode with this configuration\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":11553,"byte_end":11570,"line_start":237,"line_end":237,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":12019,"byte_end":12033,"line_start":247,"line_end":247,"column_start":12,"column_end":26},"name":"serialize_into","qualname":"<Config>::serialize_into","value":"fn <W, T> (&self, w: W, t: &T) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Serializes an object directly into a `Writer` using this configuration","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":11990,"byte_end":12007,"line_start":246,"line_end":246,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":12342,"byte_end":12353,"line_start":257,"line_end":257,"column_start":12,"column_end":23},"name":"deserialize","qualname":"<Config>::deserialize","value":"fn <'a, T> (&self, bytes: &'a [u8]) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Deserializes a slice of bytes into an instance of `T` using this configuration\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":12313,"byte_end":12330,"line_start":256,"line_end":256,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":12578,"byte_end":12598,"line_start":264,"line_end":264,"column_start":12,"column_end":32},"name":"deserialize_in_place","qualname":"<Config>::deserialize_in_place","value":"fn <'a, R, T> (&self, reader: R, place: &mut T) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" TODO: document\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":12549,"byte_end":12566,"line_start":263,"line_end":263,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":12950,"byte_end":12966,"line_start":274,"line_end":274,"column_start":12,"column_end":28},"name":"deserialize_seed","qualname":"<Config>::deserialize_seed","value":"fn <'a, T> (&self, seed: T, bytes: &'a [u8]) -> Result<T::Value>","parent":null,"children":[],"decl_id":null,"docs":" Deserializes a slice of bytes with state `seed` using this configuration.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":12921,"byte_end":12938,"line_start":273,"line_end":273,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":13377,"byte_end":13393,"line_start":286,"line_end":286,"column_start":12,"column_end":28},"name":"deserialize_from","qualname":"<Config>::deserialize_from","value":"fn <R, T> (&self, reader: R) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Deserializes an object directly from a `Read`er using this configuration","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":13348,"byte_end":13365,"line_start":285,"line_end":285,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":13919,"byte_end":13942,"line_start":299,"line_end":299,"column_start":12,"column_end":35},"name":"deserialize_from_custom","qualname":"<Config>::deserialize_from_custom","value":"fn <'a, R, T> (&self, reader: R) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Deserializes an object from a custom `BincodeRead`er using the default configuration.\n It is highly recommended to use `deserialize_from` unless you need to implement\n `BincodeRead` for performance reasons.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":13890,"byte_end":13907,"line_start":298,"line_end":298,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":14288,"byte_end":14305,"line_start":309,"line_end":309,"column_start":12,"column_end":29},"name":"with_deserializer","qualname":"<Config>::with_deserializer","value":"fn <'a, A, R> (&self, reader: R, acceptor: A) -> A::Output","parent":null,"children":[],"decl_id":null,"docs":" Executes the acceptor with a serde::Deserializer instance.\n NOT A PART OF THE STABLE PUBLIC API\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":14755,"byte_end":14770,"line_start":323,"line_end":323,"column_start":12,"column_end":27},"name":"with_serializer","qualname":"<Config>::with_serializer","value":"fn <A, W> (&self, writer: W, acceptor: A) -> A::Output","parent":null,"children":[],"decl_id":null,"docs":" Executes the acceptor with a serde::Serializer instance.\n NOT A PART OF THE STABLE PUBLIC API\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":198},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,100,101,47,114,101,97,100,46,114,115],"byte_start":29600,"byte_end":29611,"line_start":9,"line_end":9,"column_start":11,"column_end":22},"name":"BincodeRead","qualname":"::de::read::BincodeRead","value":"BincodeRead<'storage>: io::Read","parent":null,"children":[{"krate":0,"index":200},{"krate":0,"index":202},{"krate":0,"index":204}],"decl_id":null,"docs":" An optional Read trait for advanced Bincode usage.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,100,101,47,114,101,97,100,46,114,115],"byte_start":29717,"byte_end":29733,"line_start":11,"line_end":11,"column_start":8,"column_end":24},"name":"forward_read_str","qualname":"::de::read::BincodeRead::forward_read_str","value":"fn <V> (&mut self, length: usize, visitor: V) -> Result<V::Value>","parent":{"krate":0,"index":198},"children":[],"decl_id":null,"docs":" Forwards reading `length` bytes of a string on to the serde reader.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,100,101,47,114,101,97,100,46,114,115],"byte_start":29923,"byte_end":29938,"line_start":16,"line_end":16,"column_start":8,"column_end":23},"name":"get_byte_buffer","qualname":"::de::read::BincodeRead::get_byte_buffer","value":"fn (&mut self, length: usize) -> Result<Vec<u8>>","parent":{"krate":0,"index":198},"children":[],"decl_id":null,"docs":" Return the first `length` bytes of the internal byte buffer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,100,101,47,114,101,97,100,46,114,115],"byte_start":30057,"byte_end":30075,"line_start":19,"line_end":19,"column_start":8,"column_end":26},"name":"forward_read_bytes","qualname":"::de::read::BincodeRead::forward_read_bytes","value":"fn <V> (&mut self, length: usize, visitor: V) -> Result<V::Value>","parent":{"krate":0,"index":198},"children":[],"decl_id":null,"docs":" Forwards reading `length` bytes on to the serde reader.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":206},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,100,101,47,114,101,97,100,46,114,115],"byte_start":30306,"byte_end":30317,"line_start":27,"line_end":27,"column_start":12,"column_end":23},"name":"SliceReader","qualname":"::de::read::SliceReader","value":"SliceReader {  }","parent":null,"children":[{"krate":0,"index":115}],"decl_id":null,"docs":" A BincodeRead implementation for byte slices\n NOT A PART OF THE STABLE PUBLIC API\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":208},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,100,101,47,114,101,97,100,46,114,115],"byte_start":30475,"byte_end":30483,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"name":"IoReader","qualname":"::de::read::IoReader","value":"IoReader {  }","parent":null,"children":[{"krate":0,"index":119},{"krate":0,"index":121}],"decl_id":null,"docs":" A BincodeRead implementation for io::Readers\n NOT A PART OF THE STABLE PUBLIC API\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,100,101,47,114,101,97,100,46,114,115],"byte_start":30617,"byte_end":30620,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<SliceReader>::new","value":"fn (bytes: &'storage [u8]) -> SliceReader<'storage>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a slice reader\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,100,101,47,114,101,97,100,46,114,115],"byte_start":30785,"byte_end":30788,"line_start":48,"line_end":48,"column_start":12,"column_end":15},"name":"new","qualname":"<IoReader<R>>::new","value":"fn (r: R) -> IoReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Constructs an IoReadReader\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":386},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":34673,"byte_end":34679,"line_start":9,"line_end":9,"column_start":10,"column_end":16},"name":"Result","qualname":"::error::Result","value":"::std::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" The result of a serialization or deserialization operation.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":388},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":34786,"byte_end":34791,"line_start":12,"line_end":12,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"Box<ErrorKind>","parent":null,"children":[],"decl_id":null,"docs":" An error that can be produced during (de)serializing.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":593},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":35087,"byte_end":35089,"line_start":19,"line_end":19,"column_start":5,"column_end":7},"name":"Io","qualname":"::error::ErrorKind::Io","value":"ErrorKind::Io(io::Error)","parent":{"krate":0,"index":932},"children":[],"decl_id":null,"docs":" If the error stems from the reader/writer that is being used\n during (de)serialization, that error will be stored and returned here.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":597},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":35199,"byte_end":35218,"line_start":21,"line_end":21,"column_start":5,"column_end":24},"name":"InvalidUtf8Encoding","qualname":"::error::ErrorKind::InvalidUtf8Encoding","value":"ErrorKind::InvalidUtf8Encoding(Utf8Error)","parent":{"krate":0,"index":932},"children":[],"decl_id":null,"docs":" Returned if the deserializer attempts to deserialize a string that is not valid utf8\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":601},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":35353,"byte_end":35372,"line_start":24,"line_end":24,"column_start":5,"column_end":24},"name":"InvalidBoolEncoding","qualname":"::error::ErrorKind::InvalidBoolEncoding","value":"ErrorKind::InvalidBoolEncoding(u8)","parent":{"krate":0,"index":932},"children":[],"decl_id":null,"docs":" Returned if the deserializer attempts to deserialize a bool that was\n not encoded as either a 1 or a 0\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":605},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":35485,"byte_end":35504,"line_start":26,"line_end":26,"column_start":5,"column_end":24},"name":"InvalidCharEncoding","qualname":"::error::ErrorKind::InvalidCharEncoding","value":"ErrorKind::InvalidCharEncoding","parent":{"krate":0,"index":932},"children":[],"decl_id":null,"docs":" Returned if the deserializer attempts to deserialize a char that is not in the correct format.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":607},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":35633,"byte_end":35651,"line_start":29,"line_end":29,"column_start":5,"column_end":23},"name":"InvalidTagEncoding","qualname":"::error::ErrorKind::InvalidTagEncoding","value":"ErrorKind::InvalidTagEncoding(usize)","parent":{"krate":0,"index":932},"children":[],"decl_id":null,"docs":" Returned if the deserializer attempts to deserialize the tag of an enum that is\n not in the expected ranges\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":611},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":35793,"byte_end":35819,"line_start":32,"line_end":32,"column_start":5,"column_end":31},"name":"DeserializeAnyNotSupported","qualname":"::error::ErrorKind::DeserializeAnyNotSupported","value":"ErrorKind::DeserializeAnyNotSupported","parent":{"krate":0,"index":932},"children":[],"decl_id":null,"docs":" Serde has a deserialize_any method that lets the format hint to the\n object which route to take in deserializing.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":613},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":35935,"byte_end":35944,"line_start":35,"line_end":35,"column_start":5,"column_end":14},"name":"SizeLimit","qualname":"::error::ErrorKind::SizeLimit","value":"ErrorKind::SizeLimit","parent":{"krate":0,"index":932},"children":[],"decl_id":null,"docs":" If (de)serializing a message takes more than the provided size limit, this\n error is returned.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":615},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":36027,"byte_end":36049,"line_start":37,"line_end":37,"column_start":5,"column_end":27},"name":"SequenceMustHaveLength","qualname":"::error::ErrorKind::SequenceMustHaveLength","value":"ErrorKind::SequenceMustHaveLength","parent":{"krate":0,"index":932},"children":[],"decl_id":null,"docs":" Bincode can not encode sequences of unknown length (like iterators).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":617},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":36098,"byte_end":36104,"line_start":39,"line_end":39,"column_start":5,"column_end":11},"name":"Custom","qualname":"::error::ErrorKind::Custom","value":"ErrorKind::Custom(String)","parent":{"krate":0,"index":932},"children":[],"decl_id":null,"docs":" A custom error message from Serde.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":932},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":34923,"byte_end":34932,"line_start":16,"line_end":16,"column_start":10,"column_end":19},"name":"ErrorKind","qualname":"::error::ErrorKind","value":"ErrorKind::{Io, InvalidUtf8Encoding, InvalidBoolEncoding, InvalidCharEncoding, InvalidTagEncoding, DeserializeAnyNotSupported, SizeLimit, SequenceMustHaveLength, Custom}","parent":null,"children":[{"krate":0,"index":593},{"krate":0,"index":597},{"krate":0,"index":601},{"krate":0,"index":605},{"krate":0,"index":607},{"krate":0,"index":611},{"krate":0,"index":613},{"krate":0,"index":615},{"krate":0,"index":617}],"decl_id":null,"docs":" The kind of error that can be produced during a serialization or deserialization.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,105,110,116,101,114,110,97,108,46,114,115],"byte_start":42854,"byte_end":42857,"line_start":131,"line_end":131,"column_start":8,"column_end":11},"name":"add","qualname":"::internal::SizeLimit::add","value":"fn (&mut self, n: u64) -> Result<()>","parent":{"krate":0,"index":458},"children":[],"decl_id":null,"docs":" Tells the SizeLimit that a certain number of bytes has been\n read or written.  Returns Err if the limit has been exceeded.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,105,110,116,101,114,110,97,108,46,114,115],"byte_start":42946,"byte_end":42951,"line_start":133,"line_end":133,"column_start":8,"column_end":13},"name":"limit","qualname":"::internal::SizeLimit::limit","value":"fn (&self) -> Option<u64>","parent":{"krate":0,"index":458},"children":[],"decl_id":null,"docs":" Returns the hard limit (if one exists)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,115,101,114,47,109,111,100,46,114,115],"byte_start":44462,"byte_end":44465,"line_start":26,"line_end":26,"column_start":12,"column_end":15},"name":"new","qualname":"<Serializer<W, O>>::new","value":"fn (w: W, options: O) -> Serializer<W, O>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Serializer with the given `Write`r.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":375},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,115,101,114,47,109,111,100,46,114,115],"byte_start":50496,"byte_end":50503,"line_start":241,"line_end":241,"column_start":9,"column_end":16},"name":"options","qualname":"::ser::SizeChecker::options","value":"O","parent":{"krate":0,"index":586},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,115,101,114,47,109,111,100,46,114,115],"byte_start":50556,"byte_end":50559,"line_start":245,"line_end":245,"column_start":12,"column_end":15},"name":"new","qualname":"<SizeChecker<O>>::new","value":"fn (options: O) -> SizeChecker<O>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":864},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1397,"byte_end":1417,"line_start":50,"line_end":50,"column_start":11,"column_end":31},"name":"DeserializerAcceptor","qualname":"::DeserializerAcceptor","value":"DeserializerAcceptor<'a>","parent":null,"children":[{"krate":0,"index":866},{"krate":0,"index":868}],"decl_id":null,"docs":" An object that implements this trait can be passed a\n serde::Deserializer without knowing its concrete type.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":866},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1479,"byte_end":1485,"line_start":52,"line_end":52,"column_start":10,"column_end":16},"name":"Output","qualname":"::DeserializerAcceptor::Output","value":"type Output;","parent":{"krate":0,"index":864},"children":[],"decl_id":null,"docs":" The return type for the accept method\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":868},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1565,"byte_end":1571,"line_start":54,"line_end":54,"column_start":8,"column_end":14},"name":"accept","qualname":"::DeserializerAcceptor::accept","value":"fn <T> (self, T) -> Self::Output","parent":{"krate":0,"index":864},"children":[],"decl_id":null,"docs":" Accept a serde::Deserializer and do whatever you want with it.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":870},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1840,"byte_end":1858,"line_start":62,"line_end":62,"column_start":11,"column_end":29},"name":"SerializerAcceptor","qualname":"::SerializerAcceptor","value":"SerializerAcceptor","parent":null,"children":[{"krate":0,"index":872},{"krate":0,"index":874}],"decl_id":null,"docs":" An object that implements this trait can be passed a\n serde::Serializer without knowing its concrete type.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":872},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1916,"byte_end":1922,"line_start":64,"line_end":64,"column_start":10,"column_end":16},"name":"Output","qualname":"::SerializerAcceptor::Output","value":"type Output;","parent":{"krate":0,"index":870},"children":[],"decl_id":null,"docs":" The return type for the accept method\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":874},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2000,"byte_end":2006,"line_start":66,"line_end":66,"column_start":8,"column_end":14},"name":"accept","qualname":"::SerializerAcceptor::accept","value":"fn <T> (self, T) -> Self::Output","parent":{"krate":0,"index":870},"children":[],"decl_id":null,"docs":" Accept a serde::Serializer and do whatever you want with it.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":876},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2258,"byte_end":2264,"line_start":77,"line_end":77,"column_start":8,"column_end":14},"name":"config","qualname":"::config","value":"fn () -> Config","parent":null,"children":[],"decl_id":null,"docs":" Get a default configuration object.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2233,"byte_end":2250,"line_start":76,"line_end":76,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":878},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2548,"byte_end":2562,"line_start":85,"line_end":85,"column_start":8,"column_end":22},"name":"serialize_into","qualname":"::serialize_into","value":"fn <W, T> (writer: W, value: &T) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Serializes an object directly into a `Writer` using the default configuration.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":880},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2814,"byte_end":2823,"line_start":94,"line_end":94,"column_start":8,"column_end":17},"name":"serialize","qualname":"::serialize","value":"fn <T> (value: &T) -> Result<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Serializes a serializable object into a `Vec` of bytes using the default configuration.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":882},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3096,"byte_end":3112,"line_start":104,"line_end":104,"column_start":8,"column_end":24},"name":"deserialize_from","qualname":"::deserialize_from","value":"fn <R, T> (reader: R) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Deserializes an object directly from a `Read`er using the default configuration.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":884},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3547,"byte_end":3570,"line_start":117,"line_end":117,"column_start":8,"column_end":31},"name":"deserialize_from_custom","qualname":"::deserialize_from_custom","value":"fn <'a, R, T> (reader: R) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Deserializes an object from a custom `BincodeRead`er using the default configuration.\n It is highly recommended to use `deserialize_from` unless you need to implement\n `BincodeRead` for performance reasons.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":886},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3842,"byte_end":3862,"line_start":129,"line_end":129,"column_start":8,"column_end":28},"name":"deserialize_in_place","qualname":"::deserialize_in_place","value":"fn <'a, R, T> (reader: R, place: &mut T) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Only use this if you know what you're doing.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":888},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4130,"byte_end":4141,"line_start":138,"line_end":138,"column_start":8,"column_end":19},"name":"deserialize","qualname":"::deserialize","value":"fn <'a, T> (bytes: &'a [u8]) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Deserializes a slice of bytes into an instance of `T` using the default configuration.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":890},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4369,"byte_end":4384,"line_start":146,"line_end":146,"column_start":8,"column_end":23},"name":"serialized_size","qualname":"::serialized_size","value":"fn <T> (value: &T) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Returns the size that an object would be if serialized using Bincode with the default configuration.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":892},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4619,"byte_end":4636,"line_start":156,"line_end":156,"column_start":8,"column_end":25},"name":"with_deserializer","qualname":"::with_deserializer","value":"fn <'a, A, R> (reader: R, acceptor: A) -> A::Output","parent":null,"children":[],"decl_id":null,"docs":" Executes the acceptor with a serde::Deserializer instance.\n NOT A PART OF THE STABLE PUBLIC API\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":894},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4924,"byte_end":4939,"line_start":167,"line_end":167,"column_start":8,"column_end":23},"name":"with_serializer","qualname":"::with_serializer","value":"fn <A, W> (writer: W, acceptor: A) -> A::Output","parent":null,"children":[],"decl_id":null,"docs":" Executes the acceptor with a serde::Serializer instance.\n NOT A PART OF THE STABLE PUBLIC API\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":6479,"byte_end":6480,"line_start":54,"line_end":54,"column_start":33,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":6490,"byte_end":6504,"line_start":56,"line_end":56,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":6599,"byte_end":6613,"line_start":62,"line_end":62,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":94},{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":8022,"byte_end":8036,"line_start":113,"line_end":113,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":8273,"byte_end":8288,"line_start":123,"line_end":123,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":8542,"byte_end":8557,"line_start":133,"line_end":133,"column_start":54,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":116},{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":8771,"byte_end":8785,"line_start":143,"line_end":143,"column_start":54,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":122},{"krate":0,"index":124},{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":10013,"byte_end":10019,"line_start":184,"line_end":184,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":132},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":138},{"krate":0,"index":140},{"krate":0,"index":142},{"krate":0,"index":144},{"krate":0,"index":146},{"krate":0,"index":148},{"krate":0,"index":150},{"krate":0,"index":152},{"krate":0,"index":154},{"krate":0,"index":156},{"krate":0,"index":158},{"krate":0,"index":160},{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,100,101,47,114,101,97,100,46,114,115],"byte_start":30548,"byte_end":30559,"line_start":39,"line_end":39,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,100,101,47,114,101,97,100,46,114,115],"byte_start":30725,"byte_end":30733,"line_start":46,"line_end":46,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,100,101,47,114,101,97,100,46,114,115],"byte_start":30934,"byte_end":30945,"line_start":56,"line_end":56,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":220},{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,100,101,47,114,101,97,100,46,114,115],"byte_start":31253,"byte_end":31261,"line_start":67,"line_end":67,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":226},{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,100,101,47,114,101,97,100,46,114,115],"byte_start":31534,"byte_end":31545,"line_start":78,"line_end":78,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,100,101,47,114,101,97,100,46,114,115],"byte_start":31803,"byte_end":31814,"line_start":88,"line_end":88,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":236},{"krate":0,"index":240},{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,100,101,47,114,101,97,100,46,114,115],"byte_start":33138,"byte_end":33146,"line_start":134,"line_end":134,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,100,101,47,114,101,97,100,46,114,115],"byte_start":33593,"byte_end":33601,"line_start":153,"line_end":153,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":250},{"krate":0,"index":252},{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,100,101,47,109,111,100,46,114,115],"byte_start":15888,"byte_end":15900,"line_start":32,"line_end":32,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":260},{"krate":0,"index":262},{"krate":0,"index":264},{"krate":0,"index":268},{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,100,101,47,109,111,100,46,114,115],"byte_start":22907,"byte_end":22913,"line_start":267,"line_end":267,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":316},{"krate":0,"index":318},{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,100,101,47,109,111,100,46,114,115],"byte_start":24731,"byte_end":24737,"line_start":329,"line_end":329,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":332},{"krate":0,"index":334},{"krate":0,"index":336},{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":36135,"byte_end":36144,"line_start":42,"line_end":42,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":392},{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":37604,"byte_end":37609,"line_start":76,"line_end":76,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":37716,"byte_end":37725,"line_start":82,"line_end":82,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":402}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":38803,"byte_end":38808,"line_start":105,"line_end":105,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":38949,"byte_end":38954,"line_start":111,"line_end":111,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,105,110,116,101,114,110,97,108,46,114,115],"byte_start":40172,"byte_end":40181,"line_start":44,"line_end":44,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":442},{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,105,110,116,101,114,110,97,108,46,114,115],"byte_start":43315,"byte_end":43322,"line_start":146,"line_end":146,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":466},{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,105,110,116,101,114,110,97,108,46,114,115],"byte_start":43652,"byte_end":43660,"line_start":163,"line_end":163,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":472},{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,115,101,114,47,109,111,100,46,114,115],"byte_start":44374,"byte_end":44384,"line_start":24,"line_end":24,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,115,101,114,47,109,111,100,46,114,115],"byte_start":50528,"byte_end":50539,"line_start":244,"line_end":244,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":590},{"krate":0,"index":592},{"krate":0,"index":594}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,115,101,114,47,109,111,100,46,114,115],"byte_start":55707,"byte_end":55715,"line_start":447,"line_end":447,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":680},{"krate":0,"index":682},{"krate":0,"index":684},{"krate":0,"index":686}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,115,101,114,47,109,111,100,46,114,115],"byte_start":56107,"byte_end":56115,"line_start":469,"line_end":469,"column_start":47,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":690},{"krate":0,"index":692},{"krate":0,"index":694},{"krate":0,"index":696}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,115,101,114,47,109,111,100,46,114,115],"byte_start":56513,"byte_end":56521,"line_start":491,"line_end":491,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":700},{"krate":0,"index":702},{"krate":0,"index":704},{"krate":0,"index":706}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,115,101,114,47,109,111,100,46,114,115],"byte_start":56918,"byte_end":56926,"line_start":513,"line_end":513,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":710},{"krate":0,"index":712},{"krate":0,"index":714},{"krate":0,"index":716}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,115,101,114,47,109,111,100,46,114,115],"byte_start":57314,"byte_end":57322,"line_start":535,"line_end":535,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":720},{"krate":0,"index":722},{"krate":0,"index":724},{"krate":0,"index":726},{"krate":0,"index":728}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,115,101,114,47,109,111,100,46,114,115],"byte_start":57892,"byte_end":57900,"line_start":565,"line_end":565,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":732},{"krate":0,"index":734},{"krate":0,"index":736},{"krate":0,"index":738}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,115,101,114,47,109,111,100,46,114,115],"byte_start":58318,"byte_end":58326,"line_start":587,"line_end":587,"column_start":55,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":742},{"krate":0,"index":744},{"krate":0,"index":746},{"krate":0,"index":748}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,115,101,114,47,109,111,100,46,114,115],"byte_start":58830,"byte_end":58842,"line_start":613,"line_end":613,"column_start":51,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":754},{"krate":0,"index":756},{"krate":0,"index":758},{"krate":0,"index":760}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,115,101,114,47,109,111,100,46,114,115],"byte_start":59201,"byte_end":59213,"line_start":631,"line_end":631,"column_start":53,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":764},{"krate":0,"index":766},{"krate":0,"index":768},{"krate":0,"index":770}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,115,101,114,47,109,111,100,46,114,115],"byte_start":59578,"byte_end":59590,"line_start":649,"line_end":649,"column_start":59,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":774},{"krate":0,"index":776},{"krate":0,"index":778},{"krate":0,"index":780}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,115,101,114,47,109,111,100,46,114,115],"byte_start":59954,"byte_end":59966,"line_start":667,"line_end":667,"column_start":60,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":784},{"krate":0,"index":786},{"krate":0,"index":788},{"krate":0,"index":790}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,115,101,114,47,109,111,100,46,114,115],"byte_start":60326,"byte_end":60338,"line_start":685,"line_end":685,"column_start":56,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":794},{"krate":0,"index":796},{"krate":0,"index":798},{"krate":0,"index":800},{"krate":0,"index":802}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,115,101,114,47,109,111,100,46,114,115],"byte_start":60875,"byte_end":60887,"line_start":711,"line_end":711,"column_start":54,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":806},{"krate":0,"index":808},{"krate":0,"index":810},{"krate":0,"index":812}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,115,101,114,47,109,111,100,46,114,115],"byte_start":61272,"byte_end":61284,"line_start":729,"line_end":729,"column_start":61,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":816},{"krate":0,"index":818},{"krate":0,"index":820},{"krate":0,"index":822}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,115,101,114,47,109,111,100,46,114,115],"byte_start":62711,"byte_end":62721,"line_start":784,"line_end":784,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":844}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":5643,"byte_end":5650,"line_start":22,"line_end":22,"column_start":30,"column_end":37},"kind":"SuperTrait","from":{"krate":0,"index":56},"to":{"krate":0,"index":64}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":5653,"byte_end":5658,"line_start":22,"line_end":22,"column_start":40,"column_end":45},"kind":"SuperTrait","from":{"krate":2,"index":1706},"to":{"krate":0,"index":64}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":6479,"byte_end":6480,"line_start":54,"line_end":54,"column_start":33,"column_end":34},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":27},"to":{"krate":0,"index":64}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":6490,"byte_end":6504,"line_start":56,"line_end":56,"column_start":6,"column_end":20},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":54},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":6599,"byte_end":6613,"line_start":62,"line_end":62,"column_start":18,"column_end":32},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":54},"to":{"krate":0,"index":56}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":8022,"byte_end":8036,"line_start":113,"line_end":113,"column_start":32,"column_end":46},"kind":{"variant":"Impl","fields":[3]},"from":{"krate":0,"index":100},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":8273,"byte_end":8288,"line_start":123,"line_end":123,"column_start":32,"column_end":47},"kind":{"variant":"Impl","fields":[4]},"from":{"krate":0,"index":102},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":8542,"byte_end":8557,"line_start":133,"line_end":133,"column_start":54,"column_end":69},"kind":{"variant":"Impl","fields":[5]},"from":{"krate":0,"index":102},"to":{"krate":0,"index":56}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":8771,"byte_end":8785,"line_start":143,"line_end":143,"column_start":54,"column_end":68},"kind":{"variant":"Impl","fields":[6]},"from":{"krate":0,"index":100},"to":{"krate":0,"index":56}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":10013,"byte_end":10019,"line_start":184,"line_end":184,"column_start":6,"column_end":12},"kind":{"variant":"Impl","fields":[7]},"from":{"krate":0,"index":98},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,100,101,47,114,101,97,100,46,114,115],"byte_start":29627,"byte_end":29631,"line_start":9,"line_end":9,"column_start":38,"column_end":42},"kind":"SuperTrait","from":{"krate":1,"index":4432},"to":{"krate":0,"index":198}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,100,101,47,114,101,97,100,46,114,115],"byte_start":30548,"byte_end":30559,"line_start":39,"line_end":39,"column_start":16,"column_end":27},"kind":{"variant":"Impl","fields":[8]},"from":{"krate":0,"index":206},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,100,101,47,114,101,97,100,46,114,115],"byte_start":30725,"byte_end":30733,"line_start":46,"line_end":46,"column_start":9,"column_end":17},"kind":{"variant":"Impl","fields":[9]},"from":{"krate":0,"index":208},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,100,101,47,114,101,97,100,46,114,115],"byte_start":30934,"byte_end":30945,"line_start":56,"line_end":56,"column_start":29,"column_end":40},"kind":{"variant":"Impl","fields":[10]},"from":{"krate":0,"index":206},"to":{"krate":1,"index":4432}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,100,101,47,114,101,97,100,46,114,115],"byte_start":31253,"byte_end":31261,"line_start":67,"line_end":67,"column_start":32,"column_end":40},"kind":{"variant":"Impl","fields":[11]},"from":{"krate":0,"index":208},"to":{"krate":1,"index":4432}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,100,101,47,114,101,97,100,46,114,115],"byte_start":31534,"byte_end":31545,"line_start":78,"line_end":78,"column_start":16,"column_end":27},"kind":{"variant":"Impl","fields":[12]},"from":{"krate":0,"index":206},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,100,101,47,114,101,97,100,46,114,115],"byte_start":31803,"byte_end":31814,"line_start":88,"line_end":88,"column_start":42,"column_end":53},"kind":{"variant":"Impl","fields":[13]},"from":{"krate":0,"index":206},"to":{"krate":0,"index":198}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,100,101,47,114,101,97,100,46,114,115],"byte_start":33138,"byte_end":33146,"line_start":134,"line_end":134,"column_start":9,"column_end":17},"kind":{"variant":"Impl","fields":[14]},"from":{"krate":0,"index":208},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,100,101,47,114,101,97,100,46,114,115],"byte_start":33593,"byte_end":33601,"line_start":153,"line_end":153,"column_start":34,"column_end":42},"kind":{"variant":"Impl","fields":[15]},"from":{"krate":0,"index":208},"to":{"krate":0,"index":198}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,100,101,47,109,111,100,46,114,115],"byte_start":15888,"byte_end":15900,"line_start":32,"line_end":32,"column_start":44,"column_end":56},"kind":{"variant":"Impl","fields":[16]},"from":{"krate":0,"index":256},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,100,101,47,109,111,100,46,114,115],"byte_start":22907,"byte_end":22913,"line_start":267,"line_end":267,"column_start":17,"column_end":23},"kind":{"variant":"Impl","fields":[17]},"from":{"krate":0,"index":312},"to":{"krate":12,"index":1496}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,100,101,47,109,111,100,46,114,115],"byte_start":24731,"byte_end":24737,"line_start":329,"line_end":329,"column_start":17,"column_end":23},"kind":{"variant":"Impl","fields":[18]},"from":{"krate":0,"index":328},"to":{"krate":12,"index":1516}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":36135,"byte_end":36144,"line_start":42,"line_end":42,"column_start":19,"column_end":28},"kind":{"variant":"Impl","fields":[19]},"from":{"krate":0,"index":932},"to":{"krate":1,"index":2470}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":37604,"byte_end":37609,"line_start":76,"line_end":76,"column_start":26,"column_end":31},"kind":{"variant":"Impl","fields":[20]},"from":{"krate":0,"index":388},"to":{"krate":2,"index":2656}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":37716,"byte_end":37725,"line_start":82,"line_end":82,"column_start":23,"column_end":32},"kind":{"variant":"Impl","fields":[21]},"from":{"krate":0,"index":932},"to":{"krate":2,"index":8430}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":38803,"byte_end":38808,"line_start":105,"line_end":105,"column_start":27,"column_end":32},"kind":{"variant":"Impl","fields":[22]},"from":{"krate":0,"index":388},"to":{"krate":12,"index":7650}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":38949,"byte_end":38954,"line_start":111,"line_end":111,"column_start":28,"column_end":33},"kind":{"variant":"Impl","fields":[23]},"from":{"krate":0,"index":388},"to":{"krate":12,"index":8022}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,105,110,116,101,114,110,97,108,46,114,115],"byte_start":40172,"byte_end":40181,"line_start":44,"line_end":44,"column_start":34,"column_end":43},"kind":{"variant":"Impl","fields":[24]},"from":{"krate":0,"index":938},"to":{"krate":0,"index":458}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,105,110,116,101,114,110,97,108,46,114,115],"byte_start":42701,"byte_end":42706,"line_start":128,"line_end":128,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":2598},"to":{"krate":0,"index":458}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,105,110,116,101,114,110,97,108,46,114,115],"byte_start":43315,"byte_end":43322,"line_start":146,"line_end":146,"column_start":20,"column_end":27},"kind":{"variant":"Impl","fields":[25]},"from":{"krate":0,"index":944},"to":{"krate":0,"index":458}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,105,110,116,101,114,110,97,108,46,114,115],"byte_start":43652,"byte_end":43660,"line_start":163,"line_end":163,"column_start":20,"column_end":28},"kind":{"variant":"Impl","fields":[26]},"from":{"krate":0,"index":952},"to":{"krate":0,"index":458}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,115,101,114,47,109,111,100,46,114,115],"byte_start":44374,"byte_end":44384,"line_start":24,"line_end":24,"column_start":28,"column_end":38},"kind":{"variant":"Impl","fields":[27]},"from":{"krate":0,"index":498},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,115,101,114,47,109,111,100,46,114,115],"byte_start":50528,"byte_end":50539,"line_start":244,"line_end":244,"column_start":18,"column_end":29},"kind":{"variant":"Impl","fields":[28]},"from":{"krate":0,"index":586},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,115,101,114,47,109,111,100,46,114,115],"byte_start":55707,"byte_end":55715,"line_start":447,"line_end":447,"column_start":45,"column_end":53},"kind":{"variant":"Impl","fields":[29]},"from":{"krate":0,"index":676},"to":{"krate":12,"index":1962}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,115,101,114,47,109,111,100,46,114,115],"byte_start":56107,"byte_end":56115,"line_start":469,"line_end":469,"column_start":47,"column_end":55},"kind":{"variant":"Impl","fields":[30]},"from":{"krate":0,"index":676},"to":{"krate":12,"index":1972}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,115,101,114,47,109,111,100,46,114,115],"byte_start":56513,"byte_end":56521,"line_start":491,"line_end":491,"column_start":53,"column_end":61},"kind":{"variant":"Impl","fields":[31]},"from":{"krate":0,"index":676},"to":{"krate":12,"index":1982}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,115,101,114,47,109,111,100,46,114,115],"byte_start":56918,"byte_end":56926,"line_start":513,"line_end":513,"column_start":54,"column_end":62},"kind":{"variant":"Impl","fields":[32]},"from":{"krate":0,"index":676},"to":{"krate":12,"index":1992}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,115,101,114,47,109,111,100,46,114,115],"byte_start":57314,"byte_end":57322,"line_start":535,"line_end":535,"column_start":45,"column_end":53},"kind":{"variant":"Impl","fields":[33]},"from":{"krate":0,"index":676},"to":{"krate":12,"index":2002}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,115,101,114,47,109,111,100,46,114,115],"byte_start":57892,"byte_end":57900,"line_start":565,"line_end":565,"column_start":48,"column_end":56},"kind":{"variant":"Impl","fields":[34]},"from":{"krate":0,"index":676},"to":{"krate":12,"index":2016}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,115,101,114,47,109,111,100,46,114,115],"byte_start":58318,"byte_end":58326,"line_start":587,"line_end":587,"column_start":55,"column_end":63},"kind":{"variant":"Impl","fields":[35]},"from":{"krate":0,"index":676},"to":{"krate":12,"index":2028}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,115,101,114,47,109,111,100,46,114,115],"byte_start":58830,"byte_end":58842,"line_start":613,"line_end":613,"column_start":51,"column_end":63},"kind":{"variant":"Impl","fields":[36]},"from":{"krate":0,"index":750},"to":{"krate":12,"index":1962}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,115,101,114,47,109,111,100,46,114,115],"byte_start":59201,"byte_end":59213,"line_start":631,"line_end":631,"column_start":53,"column_end":65},"kind":{"variant":"Impl","fields":[37]},"from":{"krate":0,"index":750},"to":{"krate":12,"index":1972}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,115,101,114,47,109,111,100,46,114,115],"byte_start":59578,"byte_end":59590,"line_start":649,"line_end":649,"column_start":59,"column_end":71},"kind":{"variant":"Impl","fields":[38]},"from":{"krate":0,"index":750},"to":{"krate":12,"index":1982}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,115,101,114,47,109,111,100,46,114,115],"byte_start":59954,"byte_end":59966,"line_start":667,"line_end":667,"column_start":60,"column_end":72},"kind":{"variant":"Impl","fields":[39]},"from":{"krate":0,"index":750},"to":{"krate":12,"index":1992}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,115,101,114,47,109,111,100,46,114,115],"byte_start":60326,"byte_end":60338,"line_start":685,"line_end":685,"column_start":56,"column_end":68},"kind":{"variant":"Impl","fields":[40]},"from":{"krate":0,"index":750},"to":{"krate":12,"index":2002}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,115,101,114,47,109,111,100,46,114,115],"byte_start":60875,"byte_end":60887,"line_start":711,"line_end":711,"column_start":54,"column_end":66},"kind":{"variant":"Impl","fields":[41]},"from":{"krate":0,"index":750},"to":{"krate":12,"index":2016}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,115,101,114,47,109,111,100,46,114,115],"byte_start":61272,"byte_end":61284,"line_start":729,"line_end":729,"column_start":61,"column_end":73},"kind":{"variant":"Impl","fields":[42]},"from":{"krate":0,"index":750},"to":{"krate":12,"index":2028}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,105,110,99,111,100,101,45,49,46,49,46,52,47,115,114,99,47,115,101,114,47,109,111,100,46,114,115],"byte_start":62711,"byte_end":62721,"line_start":784,"line_end":784,"column_start":6,"column_end":16},"kind":{"variant":"Impl","fields":[43]},"from":{"krate":0,"index":840},"to":{"krate":4294967295,"index":4294967295}}]}