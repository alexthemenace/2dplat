{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.18.2","compilation":{"directory":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54],"program":"/Users/Kumar/.rustup/toolchains/nightly-2019-02-27-x86_64-apple-darwin/bin/rls","arguments":["--edition=2018","--crate-name","rusttype","/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.6/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"crossbeam-deque\"","--cfg","feature=\"crossbeam-utils\"","--cfg","feature=\"gpu_cache\"","--cfg","feature=\"linked-hash-map\"","--cfg","feature=\"num_cpus\"","--cfg","feature=\"rustc-hash\"","-C","metadata=7a5e18110ab95e20","-C","extra-filename=-7a5e18110ab95e20","--out-dir","/Users/Kumar/personal/workspace/rust/mayhem-galactica/target/rls/debug/deps","-L","dependency=/Users/Kumar/personal/workspace/rust/mayhem-galactica/target/rls/debug/deps","--extern","approx=/Users/Kumar/personal/workspace/rust/mayhem-galactica/target/rls/debug/deps/libapprox-b0c36c8157a7136c.rmeta","--extern","arrayvec=/Users/Kumar/personal/workspace/rust/mayhem-galactica/target/rls/debug/deps/libarrayvec-91ce23544bce0167.rmeta","--extern","crossbeam_deque=/Users/Kumar/personal/workspace/rust/mayhem-galactica/target/rls/debug/deps/libcrossbeam_deque-ddca881c23000c7f.rmeta","--extern","crossbeam_utils=/Users/Kumar/personal/workspace/rust/mayhem-galactica/target/rls/debug/deps/libcrossbeam_utils-98bd5701195eb8ff.rmeta","--extern","linked_hash_map=/Users/Kumar/personal/workspace/rust/mayhem-galactica/target/rls/debug/deps/liblinked_hash_map-16b3e0c539962879.rmeta","--extern","num_cpus=/Users/Kumar/personal/workspace/rust/mayhem-galactica/target/rls/debug/deps/libnum_cpus-6c5d6bb560a1e4b1.rmeta","--extern","ordered_float=/Users/Kumar/personal/workspace/rust/mayhem-galactica/target/rls/debug/deps/libordered_float-11b3f7a10edf9d66.rmeta","--extern","rustc_hash=/Users/Kumar/personal/workspace/rust/mayhem-galactica/target/rls/debug/deps/librustc_hash-7f620d81e6c43d56.rmeta","--extern","stb_truetype=/Users/Kumar/personal/workspace/rust/mayhem-galactica/target/rls/debug/deps/libstb_truetype-6b673760a4d38f42.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/Kumar/.rustup/toolchains/nightly-2019-02-27-x86_64-apple-darwin"],"output":[47,85,115,101,114,115,47,75,117,109,97,114,47,112,101,114,115,111,110,97,108,47,119,111,114,107,115,112,97,99,101,47,114,117,115,116,47,109,97,121,104,101,109,45,103,97,108,97,99,116,105,99,97,47,116,97,114,103,101,116,47,114,108,115,47,100,101,98,117,103,47,100,101,112,115,47,108,105,98,114,117,115,116,116,121,112,101,45,55,97,53,101,49,56,49,49,48,97,98,57,53,101,50,48,46,114,109,101,116,97]},"prelude":{"crate_id":{"name":"rusttype","disambiguator":[16863474890698872767,7010661695522827226]},"crate_root":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.6/src","external_crates":[{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.6/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[17365010580081952725,18206160307474953630]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.6/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[6760693024494354245,14002820984158080208]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.6/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[199464317358532175,14697293645914925506]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.6/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13558819658400235840,6800895293433658904]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.6/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[18425220944332119967,14239145101900690943]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.6/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10854247164472963508,11478657302719725741]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.6/src/lib.rs","num":7,"id":{"name":"rustc_demangle","disambiguator":[4168194895173621532,15234647754953002462]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.6/src/lib.rs","num":8,"id":{"name":"unwind","disambiguator":[12306654840912142307,10869972980572175885]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.6/src/lib.rs","num":9,"id":{"name":"backtrace_sys","disambiguator":[1531625639640313062,14514900902579754273]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.6/src/lib.rs","num":10,"id":{"name":"panic_unwind","disambiguator":[13209889598193010227,616765238597587583]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.6/src/rasterizer.rs","num":11,"id":{"name":"ordered_float","disambiguator":[7798006252548514517,14940144921702566911]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.6/src/rasterizer.rs","num":12,"id":{"name":"num_traits","disambiguator":[11661258600980181624,3408761971977771538]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.6/src/rasterizer.rs","num":13,"id":{"name":"approx","disambiguator":[14594390049414328680,9039156212491258328]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.6/src/rasterizer.rs","num":14,"id":{"name":"arrayvec","disambiguator":[10100321813570616869,17214766525115099071]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.6/src/gpu_cache.rs","num":15,"id":{"name":"linked_hash_map","disambiguator":[3747732116343956891,8035830989628354920]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.6/src/gpu_cache.rs","num":16,"id":{"name":"rustc_hash","disambiguator":[4786700296657886300,3198581485759698632]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.6/src/gpu_cache.rs","num":17,"id":{"name":"byteorder","disambiguator":[5633574704660589010,1124758284593715500]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.6/src/gpu_cache.rs","num":18,"id":{"name":"crossbeam_deque","disambiguator":[15991290301585514988,15082419215124650270]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.6/src/gpu_cache.rs","num":19,"id":{"name":"crossbeam_epoch","disambiguator":[2742812101291490232,5680530793403548921]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.6/src/gpu_cache.rs","num":20,"id":{"name":"cfg_if","disambiguator":[8428017428351255032,13632600684367634806]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.6/src/gpu_cache.rs","num":21,"id":{"name":"crossbeam_utils","disambiguator":[2902954816066387191,4766983559772434753]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.6/src/gpu_cache.rs","num":22,"id":{"name":"lazy_static","disambiguator":[5522065544787785916,13327173104205784552]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.6/src/gpu_cache.rs","num":23,"id":{"name":"memoffset","disambiguator":[15249562182596042640,10337475170058500363]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.6/src/gpu_cache.rs","num":24,"id":{"name":"scopeguard","disambiguator":[18367847936342523916,17856272224824384718]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.6/src/lib.rs","num":25,"id":{"name":"stb_truetype","disambiguator":[10093408574476859369,1226000955349763727]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.6/src/gpu_cache.rs","num":26,"id":{"name":"num_cpus","disambiguator":[12880995655777911732,1737882874999537385]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.6/src/gpu_cache.rs","num":27,"id":{"name":"libc","disambiguator":[2703259349667130902,12042406638146325142]}}],"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":42414,"line_start":1,"line_end":1105,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":10},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5271,"byte_end":5276,"line_start":109,"line_end":109,"column_start":27,"column_end":32},"alias_span":null,"name":"point","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":12},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5278,"byte_end":5284,"line_start":109,"line_end":109,"column_start":34,"column_end":40},"alias_span":null,"name":"vector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":728},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5286,"byte_end":5291,"line_start":109,"line_end":109,"column_start":42,"column_end":47},"alias_span":null,"name":"Curve","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":698},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5293,"byte_end":5297,"line_start":109,"line_end":109,"column_start":49,"column_end":53},"alias_span":null,"name":"Line","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":614},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5299,"byte_end":5304,"line_start":109,"line_end":109,"column_start":55,"column_end":60},"alias_span":null,"name":"Point","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":758},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5306,"byte_end":5310,"line_start":109,"line_end":109,"column_start":62,"column_end":66},"alias_span":null,"name":"Rect","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":656},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5312,"byte_end":5318,"line_start":109,"line_end":109,"column_start":68,"column_end":74},"alias_span":null,"name":"Vector","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":42414,"line_start":1,"line_end":1105,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.6/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":154},{"krate":0,"index":220},{"krate":0,"index":376},{"krate":0,"index":392},{"krate":0,"index":394},{"krate":0,"index":396},{"krate":0,"index":398},{"krate":0,"index":976},{"krate":0,"index":982},{"krate":0,"index":978},{"krate":0,"index":986},{"krate":0,"index":988},{"krate":0,"index":400},{"krate":0,"index":992},{"krate":0,"index":998},{"krate":0,"index":994},{"krate":0,"index":404},{"krate":0,"index":410},{"krate":0,"index":414},{"krate":0,"index":418},{"krate":0,"index":422},{"krate":0,"index":426},{"krate":0,"index":1002},{"krate":0,"index":1042},{"krate":0,"index":1038},{"krate":0,"index":1034},{"krate":0,"index":1028},{"krate":0,"index":1024},{"krate":0,"index":1020},{"krate":0,"index":1008},{"krate":0,"index":1004},{"krate":0,"index":1044},{"krate":0,"index":1084},{"krate":0,"index":1080},{"krate":0,"index":1076},{"krate":0,"index":1070},{"krate":0,"index":1066},{"krate":0,"index":1062},{"krate":0,"index":1050},{"krate":0,"index":1046},{"krate":0,"index":1086},{"krate":0,"index":1088},{"krate":0,"index":430},{"krate":0,"index":1092},{"krate":0,"index":1094},{"krate":0,"index":1098},{"krate":0,"index":1100},{"krate":0,"index":1104},{"krate":0,"index":1132},{"krate":0,"index":1128},{"krate":0,"index":1124},{"krate":0,"index":1118},{"krate":0,"index":1106},{"krate":0,"index":1134},{"krate":0,"index":1162},{"krate":0,"index":1158},{"krate":0,"index":1154},{"krate":0,"index":1148},{"krate":0,"index":1136},{"krate":0,"index":434},{"krate":0,"index":438},{"krate":0,"index":1164},{"krate":0,"index":1166},{"krate":0,"index":444},{"krate":0,"index":1170},{"krate":0,"index":1172},{"krate":0,"index":448},{"krate":0,"index":1176},{"krate":0,"index":1204},{"krate":0,"index":1200},{"krate":0,"index":1194},{"krate":0,"index":1182},{"krate":0,"index":1178},{"krate":0,"index":452},{"krate":0,"index":456},{"krate":0,"index":460},{"krate":0,"index":464},{"krate":0,"index":468},{"krate":0,"index":472},{"krate":0,"index":482},{"krate":0,"index":484},{"krate":0,"index":490},{"krate":0,"index":1206},{"krate":0,"index":1208},{"krate":0,"index":512},{"krate":0,"index":1212},{"krate":0,"index":1214},{"krate":0,"index":518},{"krate":0,"index":524},{"krate":0,"index":1218},{"krate":0,"index":1228},{"krate":0,"index":1224},{"krate":0,"index":1220},{"krate":0,"index":1230},{"krate":0,"index":1236},{"krate":0,"index":1232},{"krate":0,"index":538},{"krate":0,"index":568},{"krate":0,"index":1240},{"krate":0,"index":1242},{"krate":0,"index":600},{"krate":0,"index":604},{"krate":0,"index":610}],"decl_id":null,"docs":" RustType is a pure Rust alternative to libraries like FreeType.","sig":null,"attributes":[{"value":"allow(unknown_lints)","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4888,"byte_end":4912,"line_start":91,"line_end":91,"column_start":1,"column_end":25}},{"value":"warn(clippy::all)","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4913,"byte_end":4934,"line_start":92,"line_end":92,"column_start":1,"column_end":22}},{"value":"allow(clippy::cyclomatic_complexity,\n        clippy::doc_markdown,\n        clippy::cast_lossless,\n        clippy::many_single_char_names)","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4935,"byte_end":5070,"line_start":93,"line_end":98,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":614},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":43111,"byte_end":43116,"line_start":18,"line_end":18,"column_start":12,"column_end":17},"name":"Point","qualname":"::geometry::Point","value":"Point { x, y }","parent":null,"children":[{"krate":0,"index":207},{"krate":0,"index":209}],"decl_id":null,"docs":" A point in 2-dimensional space, with each dimension of type `N`.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":43100,"byte_end":43151,"line_start":18,"line_end":21,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":43100,"byte_end":43151,"line_start":18,"line_end":21,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":207},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":43130,"byte_end":43131,"line_start":19,"line_end":19,"column_start":9,"column_end":10},"name":"x","qualname":"::geometry::Point::x","value":"N","parent":{"krate":0,"index":614},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":209},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":43144,"byte_end":43145,"line_start":20,"line_end":20,"column_start":9,"column_end":10},"name":"y","qualname":"::geometry::Point::y","value":"N","parent":{"krate":0,"index":614},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":656},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":43468,"byte_end":43474,"line_start":29,"line_end":29,"column_start":12,"column_end":18},"name":"Vector","qualname":"::geometry::Vector","value":"Vector { x, y }","parent":null,"children":[{"krate":0,"index":239},{"krate":0,"index":241}],"decl_id":null,"docs":" A vector in 2-dimensional space, with each dimension of type `N`.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":43457,"byte_end":43509,"line_start":29,"line_end":32,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":43457,"byte_end":43509,"line_start":29,"line_end":32,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":239},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":43488,"byte_end":43489,"line_start":30,"line_end":30,"column_start":9,"column_end":10},"name":"x","qualname":"::geometry::Vector::x","value":"N","parent":{"krate":0,"index":656},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":241},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":43502,"byte_end":43503,"line_start":31,"line_end":31,"column_start":9,"column_end":10},"name":"y","qualname":"::geometry::Vector::y","value":"N","parent":{"krate":0,"index":656},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":10},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":43579,"byte_end":43584,"line_start":35,"line_end":35,"column_start":8,"column_end":13},"name":"point","qualname":"::geometry::point","value":"fn <N> (x: N, y: N) -> Point<N>","parent":null,"children":[],"decl_id":null,"docs":" A convenience function for generating `Point`s.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":43562,"byte_end":43571,"line_start":34,"line_end":34,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":12},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":43705,"byte_end":43711,"line_start":40,"line_end":40,"column_start":8,"column_end":14},"name":"vector","qualname":"::geometry::vector","value":"fn <N> (x: N, y: N) -> Vector<N>","parent":null,"children":[],"decl_id":null,"docs":" A convenience function for generating `Vector`s.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":43688,"byte_end":43697,"line_start":39,"line_end":39,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":698},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":46377,"byte_end":46381,"line_start":144,"line_end":144,"column_start":12,"column_end":16},"name":"Line","qualname":"::geometry::Line","value":"Line { p }","parent":null,"children":[{"krate":0,"index":269}],"decl_id":null,"docs":" A straight line between two points, `p[0]` and `p[1]`\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":46366,"byte_end":46413,"line_start":144,"line_end":146,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":269},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":46392,"byte_end":46393,"line_start":145,"line_end":145,"column_start":9,"column_end":10},"name":"p","qualname":"::geometry::Line::p","value":"[geometry::Point<f32>; _]","parent":{"krate":0,"index":698},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":728},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":46577,"byte_end":46582,"line_start":150,"line_end":150,"column_start":12,"column_end":17},"name":"Curve","qualname":"::geometry::Curve","value":"Curve { p }","parent":null,"children":[{"krate":0,"index":275}],"decl_id":null,"docs":" A quadratic Bezier curve, starting at `p[0]`, ending at `p[2]`, with control\n point `p[1]`.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":46566,"byte_end":46614,"line_start":150,"line_end":152,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":275},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":46593,"byte_end":46594,"line_start":151,"line_end":151,"column_start":9,"column_end":10},"name":"p","qualname":"::geometry::Curve::p","value":"[geometry::Point<f32>; _]","parent":{"krate":0,"index":728},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":758},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":46780,"byte_end":46784,"line_start":156,"line_end":156,"column_start":12,"column_end":16},"name":"Rect","qualname":"::geometry::Rect","value":"Rect { min, max }","parent":null,"children":[{"krate":0,"index":283},{"krate":0,"index":285}],"decl_id":null,"docs":" A rectangle, with top-left corner at `min`, and bottom-right corner at\n `max`.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":46769,"byte_end":46837,"line_start":156,"line_end":159,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":46769,"byte_end":46837,"line_start":156,"line_end":159,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":283},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":46798,"byte_end":46801,"line_start":157,"line_end":157,"column_start":9,"column_end":12},"name":"min","qualname":"::geometry::Rect::min","value":"geometry::Point<N>","parent":{"krate":0,"index":758},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":285},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":46821,"byte_end":46824,"line_start":158,"line_end":158,"column_start":9,"column_end":12},"name":"max","qualname":"::geometry::Rect::max","value":"geometry::Point<N>","parent":{"krate":0,"index":758},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":46896,"byte_end":46901,"line_start":161,"line_end":161,"column_start":12,"column_end":17},"name":"width","qualname":"<Rect<N>>::width","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":46965,"byte_end":46971,"line_start":164,"line_end":164,"column_start":12,"column_end":18},"name":"height","qualname":"<Rect<N>>::height","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":164},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,114,97,115,116,101,114,105,122,101,114,46,114,115],"byte_start":52284,"byte_end":52292,"line_start":6,"line_end":6,"column_start":10,"column_end":18},"name":"PerSlice","qualname":"::rasterizer::SliceUp::PerSlice","value":"type PerSlice: Iterator<Item = Self>;","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":166},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,114,97,115,116,101,114,105,122,101,114,46,114,115],"byte_start":52326,"byte_end":52329,"line_start":7,"line_end":7,"column_start":10,"column_end":13},"name":"Out","qualname":"::rasterizer::SliceUp::Out","value":"type Out: Iterator<Item = Self::PerSlice>;","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":220},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"gpu_cache","qualname":"::gpu_cache","value":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.6/src/gpu_cache.rs","parent":null,"children":[{"krate":0,"index":222},{"krate":0,"index":238},{"krate":0,"index":240},{"krate":0,"index":246},{"krate":0,"index":252},{"krate":0,"index":254},{"krate":0,"index":256},{"krate":0,"index":258},{"krate":0,"index":260},{"krate":0,"index":262},{"krate":0,"index":264},{"krate":0,"index":824},{"krate":0,"index":848},{"krate":0,"index":844},{"krate":0,"index":840},{"krate":0,"index":834},{"krate":0,"index":830},{"krate":0,"index":826},{"krate":0,"index":850},{"krate":0,"index":866},{"krate":0,"index":862},{"krate":0,"index":856},{"krate":0,"index":852},{"krate":0,"index":266},{"krate":0,"index":274},{"krate":0,"index":280},{"krate":0,"index":284},{"krate":0,"index":286},{"krate":0,"index":288},{"krate":0,"index":292},{"krate":0,"index":296},{"krate":0,"index":870},{"krate":0,"index":876},{"krate":0,"index":872},{"krate":0,"index":298},{"krate":0,"index":302},{"krate":0,"index":880},{"krate":0,"index":910},{"krate":0,"index":906},{"krate":0,"index":902},{"krate":0,"index":898},{"krate":0,"index":894},{"krate":0,"index":890},{"krate":0,"index":886},{"krate":0,"index":882},{"krate":0,"index":320},{"krate":0,"index":324},{"krate":0,"index":912},{"krate":0,"index":942},{"krate":0,"index":938},{"krate":0,"index":934},{"krate":0,"index":930},{"krate":0,"index":926},{"krate":0,"index":922},{"krate":0,"index":918},{"krate":0,"index":914},{"krate":0,"index":328},{"krate":0,"index":332},{"krate":0,"index":944},{"krate":0,"index":974},{"krate":0,"index":970},{"krate":0,"index":966},{"krate":0,"index":962},{"krate":0,"index":958},{"krate":0,"index":954},{"krate":0,"index":950},{"krate":0,"index":946},{"krate":0,"index":336},{"krate":0,"index":338},{"krate":0,"index":374}],"decl_id":null,"docs":" This module provides capabilities for managing a cache of rendered glyphs in\n GPU memory, with the goal of minimisng the size and frequency of glyph\n uploads to GPU memory from the CPU.","sig":null,"attributes":[{"value":"cfg(feature = \"gpu_cache\")","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5195,"byte_end":5224,"line_start":106,"line_end":106,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":260},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":69609,"byte_end":69622,"line_start":84,"line_end":84,"column_start":10,"column_end":23},"name":"TextureCoords","qualname":"::gpu_cache::TextureCoords","value":"(Rect<f32>, Rect<i32>)","parent":null,"children":[],"decl_id":null,"docs":" Texture coordinates (floating point) of the quad for a glyph in the cache,\n as well as the pixel-space (integer) coordinates that this region should be\n drawn at.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":296},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":72485,"byte_end":72490,"line_start":196,"line_end":196,"column_start":12,"column_end":17},"name":"Cache","qualname":"::gpu_cache::Cache","value":"Cache {  }","parent":null,"children":[{"krate":0,"index":91},{"krate":0,"index":93},{"krate":0,"index":95},{"krate":0,"index":97},{"krate":0,"index":99},{"krate":0,"index":101},{"krate":0,"index":103},{"krate":0,"index":105},{"krate":0,"index":107},{"krate":0,"index":109},{"krate":0,"index":111}],"decl_id":null,"docs":" An implementation of a dynamic GPU glyph cache. See the module documentation\n for more information.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":870},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":73601,"byte_end":73613,"line_start":233,"line_end":233,"column_start":12,"column_end":24},"name":"CacheBuilder","qualname":"::gpu_cache::CacheBuilder","value":"CacheBuilder {  }","parent":null,"children":[{"krate":0,"index":363},{"krate":0,"index":365},{"krate":0,"index":367},{"krate":0,"index":369},{"krate":0,"index":371}],"decl_id":null,"docs":" Builder & rebuilder for `Cache`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":74525,"byte_end":74535,"line_start":267,"line_end":267,"column_start":12,"column_end":22},"name":"dimensions","qualname":"<CacheBuilder>::dimensions","value":"fn (mut self, width: u32, height: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" `width` & `height` dimensions of the 2D texture that will hold the\n cache contents on the GPU.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":75737,"byte_end":75752,"line_start":294,"line_end":294,"column_start":12,"column_end":27},"name":"scale_tolerance","qualname":"<CacheBuilder>::scale_tolerance","value":"fn <V> (mut self, scale_tolerance: V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies the tolerances (maximum allowed difference) for judging\n whether an existing glyph in the cache is close enough to the\n requested glyph in scale to be used in its place. Due to floating\n point inaccuracies a min value of `0.001` is enforced.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":77158,"byte_end":77176,"line_start":324,"line_end":324,"column_start":12,"column_end":30},"name":"position_tolerance","qualname":"<CacheBuilder>::position_tolerance","value":"fn <V> (mut self, position_tolerance: V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies the tolerances (maximum allowed difference) for judging\n whether an existing glyph in the cache is close enough to the requested\n glyph in subpixel offset to be used in its place. Due to floating\n point inaccuracies a min value of `0.001` is enforced.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":77787,"byte_end":77797,"line_start":340,"line_end":340,"column_start":12,"column_end":22},"name":"pad_glyphs","qualname":"<CacheBuilder>::pad_glyphs","value":"fn (mut self, pad_glyphs: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Pack glyphs in texture with a padding of a single zero alpha pixel to\n avoid bleeding from interpolated shader texture lookups near edges.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":78273,"byte_end":78284,"line_start":355,"line_end":355,"column_start":12,"column_end":23},"name":"multithread","qualname":"<CacheBuilder>::multithread","value":"fn (mut self, multithread: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" When multiple CPU cores are available spread rasterization work across\n all cores.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":79258,"byte_end":79263,"line_start":388,"line_end":388,"column_start":12,"column_end":17},"name":"build","qualname":"<CacheBuilder>::build","value":"fn <'a> (self) -> Cache<'a>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new cache. Note that this is just the CPU side of the\n cache. The GPU texture is managed by the user.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":80619,"byte_end":80626,"line_start":436,"line_end":436,"column_start":12,"column_end":19},"name":"rebuild","qualname":"<CacheBuilder>::rebuild","value":"fn (self, cache: &mut Cache) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Rebuilds a cache with new attributes. Carries over the existing cache\n queue unmodified.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":373},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":81343,"byte_end":81357,"line_start":459,"line_end":459,"column_start":5,"column_end":19},"name":"GlyphNotCached","qualname":"::gpu_cache::CacheReadErr::GlyphNotCached","value":"CacheReadErr::GlyphNotCached","parent":{"krate":0,"index":880},"children":[],"decl_id":null,"docs":" Indicates that the requested glyph is not present in the cache\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":880},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":81253,"byte_end":81265,"line_start":457,"line_end":457,"column_start":10,"column_end":22},"name":"CacheReadErr","qualname":"::gpu_cache::CacheReadErr","value":"CacheReadErr::{GlyphNotCached}","parent":null,"children":[{"krate":0,"index":373}],"decl_id":null,"docs":" Returned from `Cache::rect_for`.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":81244,"byte_end":81360,"line_start":457,"line_end":460,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":81244,"byte_end":81360,"line_start":457,"line_end":460,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":377},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":81960,"byte_end":81973,"line_start":479,"line_end":479,"column_start":5,"column_end":18},"name":"GlyphTooLarge","qualname":"::gpu_cache::CacheWriteErr::GlyphTooLarge","value":"CacheWriteErr::GlyphTooLarge","parent":{"krate":0,"index":912},"children":[],"decl_id":null,"docs":" At least one of the queued glyphs is too big to fit into the cache, even\n if all other glyphs are removed.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":379},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":82111,"byte_end":82130,"line_start":482,"line_end":482,"column_start":5,"column_end":24},"name":"NoRoomForWholeQueue","qualname":"::gpu_cache::CacheWriteErr::NoRoomForWholeQueue","value":"CacheWriteErr::NoRoomForWholeQueue","parent":{"krate":0,"index":912},"children":[],"decl_id":null,"docs":" Not all of the requested glyphs can fit into the cache, even if the\n cache is completely cleared before the attempt.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":912},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":81818,"byte_end":81831,"line_start":476,"line_end":476,"column_start":10,"column_end":23},"name":"CacheWriteErr","qualname":"::gpu_cache::CacheWriteErr","value":"CacheWriteErr::{GlyphTooLarge, NoRoomForWholeQueue}","parent":null,"children":[{"krate":0,"index":377},{"krate":0,"index":379}],"decl_id":null,"docs":" Returned from `Cache::cache_queued`.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":81809,"byte_end":82133,"line_start":476,"line_end":483,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":81809,"byte_end":82133,"line_start":476,"line_end":483,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":383},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":82902,"byte_end":82908,"line_start":505,"line_end":505,"column_start":5,"column_end":11},"name":"Adding","qualname":"::gpu_cache::CachedBy::Adding","value":"CachedBy::Adding","parent":{"krate":0,"index":944},"children":[],"decl_id":null,"docs":" Added any additional glyphs into the texture without affecting\n the position of any already cached glyphs in the latest queue.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":385},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":83042,"byte_end":83052,"line_start":508,"line_end":508,"column_start":5,"column_end":15},"name":"Reordering","qualname":"::gpu_cache::CachedBy::Reordering","value":"CachedBy::Reordering","parent":{"krate":0,"index":944},"children":[],"decl_id":null,"docs":" Fit the glyph queue by re-ordering all glyph texture positions.\n Previous texture positions are no longer valid.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":944},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":82675,"byte_end":82683,"line_start":500,"line_end":500,"column_start":10,"column_end":18},"name":"CachedBy","qualname":"::gpu_cache::CachedBy","value":"CachedBy::{Adding, Reordering}","parent":null,"children":[{"krate":0,"index":383},{"krate":0,"index":385}],"decl_id":null,"docs":" Successful method of caching of the queue.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":82666,"byte_end":83055,"line_start":500,"line_end":509,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":82666,"byte_end":83055,"line_start":500,"line_end":509,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":83532,"byte_end":83539,"line_start":529,"line_end":529,"column_start":12,"column_end":19},"name":"builder","qualname":"<Cache>::builder","value":"fn () -> CacheBuilder","parent":null,"children":[],"decl_id":null,"docs":" Returns a default `CacheBuilder`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":83511,"byte_end":83520,"line_start":528,"line_end":528,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":342},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":83669,"byte_end":83684,"line_start":534,"line_end":534,"column_start":12,"column_end":27},"name":"scale_tolerance","qualname":"<Cache>::scale_tolerance","value":"fn (&self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns the current scale tolerance for the cache.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":83819,"byte_end":83837,"line_start":539,"line_end":539,"column_start":12,"column_end":30},"name":"position_tolerance","qualname":"<Cache>::position_tolerance","value":"fn (&self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns the current subpixel position tolerance for the cache.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":84058,"byte_end":84068,"line_start":545,"line_end":545,"column_start":12,"column_end":22},"name":"dimensions","qualname":"<Cache>::dimensions","value":"fn (&self) -> (u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Returns the cache texture dimensions assumed by the cache. For proper\n operation this should match the dimensions of the used GPU texture.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":84372,"byte_end":84383,"line_start":552,"line_end":552,"column_start":12,"column_end":23},"name":"queue_glyph","qualname":"<Cache>::queue_glyph","value":"fn (&mut self, font_id: usize, glyph: PositionedGlyph<'font>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Queue a glyph for caching by the next call to `cache_queued`. `font_id`\n is used to disambiguate glyphs from different fonts. The user should\n ensure that `font_id` is unique to the font the glyph is from.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":84628,"byte_end":84633,"line_start":559,"line_end":559,"column_start":12,"column_end":17},"name":"clear","qualname":"<Cache>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears the cache. Does not affect the glyph queue.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":84955,"byte_end":84966,"line_start":569,"line_end":569,"column_start":12,"column_end":23},"name":"clear_queue","qualname":"<Cache>::clear_queue","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears the glyph queue.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":354},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":85089,"byte_end":85099,"line_start":574,"line_end":574,"column_start":12,"column_end":22},"name":"to_builder","qualname":"<Cache>::to_builder","value":"fn (&self) -> CacheBuilder","parent":null,"children":[],"decl_id":null,"docs":" Returns a `CacheBuilder` with this cache's attributes.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":87076,"byte_end":87088,"line_start":618,"line_end":618,"column_start":12,"column_end":24},"name":"cache_queued","qualname":"<Cache>::cache_queued","value":"fn <F> (&mut self, mut uploader: F) -> Result<CachedBy, CacheWriteErr>","parent":null,"children":[],"decl_id":null,"docs":" Caches the queued glyphs. If this is unsuccessful, the queue is\n untouched. Any glyphs cached by previous calls to this function may be\n removed from the cache to make room for the newly queued glyphs. Thus if\n you want to ensure that a glyph is in the cache, the most recently\n cached queue must have contained that glyph.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":98887,"byte_end":98895,"line_start":872,"line_end":872,"column_start":12,"column_end":20},"name":"rect_for","qualname":"<Cache>::rect_for","value":"fn (&self, font_id: usize, glyph: &PositionedGlyph) -> Result<Option<TextureCoords>, CacheReadErr>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the (floating point) texture coordinates of the quad for a\n glyph in the cache, as well as the pixel-space (integer) coordinates\n that this region should be drawn at. These pixel-space coordinates\n assume an origin at the top left of the quad. In the majority of cases\n these pixel-space coordinates should be identical to the bounding box of\n the input glyph. They only differ if the cache has returned a substitute\n glyph that is deemed close enough to the requested glyph as specified by\n the cache tolerance parameters.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":976},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5809,"byte_end":5823,"line_start":124,"line_end":124,"column_start":12,"column_end":26},"name":"FontCollection","qualname":"::FontCollection","value":"","parent":null,"children":[],"decl_id":null,"docs":" A collection of fonts read straight from a font file's data. The data in the\n collection is not validated. This structure may or may not own the font\n data.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":986},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6537,"byte_end":6541,"line_start":146,"line_end":146,"column_start":12,"column_end":16},"name":"Font","qualname":"::Font","value":"Font {  }","parent":null,"children":[{"krate":0,"index":401}],"decl_id":null,"docs":" A single font. This may or may not own the font data.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":407},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7259,"byte_end":7264,"line_start":167,"line_end":167,"column_start":5,"column_end":10},"name":"ByRef","qualname":"::SharedBytes::ByRef","value":"SharedBytes::ByRef(&'a [u8])","parent":{"krate":0,"index":992},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":411},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7280,"byte_end":7285,"line_start":168,"line_end":168,"column_start":5,"column_end":10},"name":"ByArc","qualname":"::SharedBytes::ByArc","value":"SharedBytes::ByArc(Arc<[u8]>)","parent":{"krate":0,"index":992},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":992},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7237,"byte_end":7248,"line_start":166,"line_end":166,"column_start":10,"column_end":21},"name":"SharedBytes","qualname":"::SharedBytes","value":"SharedBytes::{ByRef, ByArc}","parent":null,"children":[{"krate":0,"index":407},{"krate":0,"index":411}],"decl_id":null,"docs":" `SharedBytes` handles the lifetime of font data used in RustType. The data\n is either a shared reference to externally owned data, or managed by\n reference counting. `SharedBytes` can be conveniently used with `From` and\n `Into`, and dereferences to the contained bytes.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1002},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9577,"byte_end":9586,"line_start":248,"line_end":248,"column_start":12,"column_end":21},"name":"Codepoint","qualname":"::Codepoint","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a Unicode code point.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9566,"byte_end":9596,"line_start":248,"line_end":248,"column_start":1,"column_end":31}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9566,"byte_end":9596,"line_start":248,"line_end":248,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":1044},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9866,"byte_end":9873,"line_start":253,"line_end":253,"column_start":12,"column_end":19},"name":"GlyphId","qualname":"::GlyphId","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a glyph identifier for a particular font. This identifier will\n not necessarily correspond to the correct glyph in a font other than the\n one that it was obtained from.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9855,"byte_end":9883,"line_start":253,"line_end":253,"column_start":1,"column_end":29}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9855,"byte_end":9883,"line_start":253,"line_end":253,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":1086},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10288,"byte_end":10293,"line_start":262,"line_end":262,"column_start":12,"column_end":17},"name":"Glyph","qualname":"::Glyph","value":"Glyph {  }","parent":null,"children":[{"krate":0,"index":433}],"decl_id":null,"docs":" A single glyph of a font. this may either be a thin wrapper referring to the\n font and the glyph id, or it may be a standalone glyph that owns the data\n needed by it.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1098},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10631,"byte_end":10646,"line_start":279,"line_end":279,"column_start":12,"column_end":27},"name":"SharedGlyphData","qualname":"::SharedGlyphData","value":"SharedGlyphData { id, extents, scale_for_1_pixel, unit_h_metrics, shape }","parent":null,"children":[{"krate":0,"index":451},{"krate":0,"index":453},{"krate":0,"index":455},{"krate":0,"index":457},{"krate":0,"index":459}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":451},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10657,"byte_end":10659,"line_start":280,"line_end":280,"column_start":9,"column_end":11},"name":"id","qualname":"::SharedGlyphData::id","value":"u32","parent":{"krate":0,"index":1098},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":453},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10674,"byte_end":10681,"line_start":281,"line_end":281,"column_start":9,"column_end":16},"name":"extents","qualname":"::SharedGlyphData::extents","value":"std::option::Option<geometry::Rect<i32>>","parent":{"krate":0,"index":1098},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":455},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10710,"byte_end":10727,"line_start":282,"line_end":282,"column_start":9,"column_end":26},"name":"scale_for_1_pixel","qualname":"::SharedGlyphData::scale_for_1_pixel","value":"f32","parent":{"krate":0,"index":1098},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":457},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10742,"byte_end":10756,"line_start":283,"line_end":283,"column_start":9,"column_end":23},"name":"unit_h_metrics","qualname":"::SharedGlyphData::unit_h_metrics","value":"HMetrics","parent":{"krate":0,"index":1098},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":459},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10776,"byte_end":10781,"line_start":284,"line_end":284,"column_start":9,"column_end":14},"name":"shape","qualname":"::SharedGlyphData::shape","value":"std::option::Option<std::vec::Vec<stb_truetype::Vertex>>","parent":{"krate":0,"index":1098},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1104},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11060,"byte_end":11068,"line_start":290,"line_end":290,"column_start":12,"column_end":20},"name":"HMetrics","qualname":"::HMetrics","value":"HMetrics { advance_width, left_side_bearing }","parent":null,"children":[{"krate":0,"index":461},{"krate":0,"index":463}],"decl_id":null,"docs":" The \"horizontal metrics\" of a glyph. This is useful for calculating the\n horizontal offset of a glyph from the previous one in a string when laying a\n string out horizontally.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11049,"byte_end":11358,"line_start":290,"line_end":297,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":461},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11192,"byte_end":11205,"line_start":293,"line_end":293,"column_start":9,"column_end":22},"name":"advance_width","qualname":"::HMetrics::advance_width","value":"f32","parent":{"krate":0,"index":1104},"children":[],"decl_id":null,"docs":" The horizontal offset that the origin of the next glyph should be from\n the origin of this glyph.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":463},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11333,"byte_end":11350,"line_start":296,"line_end":296,"column_start":9,"column_end":26},"name":"left_side_bearing","qualname":"::HMetrics::left_side_bearing","value":"f32","parent":{"krate":0,"index":1104},"children":[],"decl_id":null,"docs":" The horizontal offset between the origin of this glyph and the leftmost\n edge/point of the glyph.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1134},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11639,"byte_end":11647,"line_start":302,"line_end":302,"column_start":12,"column_end":20},"name":"VMetrics","qualname":"::VMetrics","value":"VMetrics { ascent, descent, line_gap }","parent":null,"children":[{"krate":0,"index":473},{"krate":0,"index":475},{"krate":0,"index":477}],"decl_id":null,"docs":" The \"vertical metrics\" of a font at a particular scale. This is useful for\n calculating the amount of vertical space to give a line of text, and for\n computing the vertical offset between successive lines.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11628,"byte_end":12099,"line_start":302,"line_end":312,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":473},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11770,"byte_end":11776,"line_start":305,"line_end":305,"column_start":9,"column_end":15},"name":"ascent","qualname":"::VMetrics::ascent","value":"f32","parent":{"krate":0,"index":1134},"children":[],"decl_id":null,"docs":" The highest point that any glyph in the font extends to above the\n baseline. Typically positive.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":475},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11902,"byte_end":11909,"line_start":308,"line_end":308,"column_start":9,"column_end":16},"name":"descent","qualname":"::VMetrics::descent","value":"f32","parent":{"krate":0,"index":1134},"children":[],"decl_id":null,"docs":" The lowest point that any glyph in the font extends to below the\n baseline. Typically negative.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":477},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12083,"byte_end":12091,"line_start":311,"line_end":311,"column_start":9,"column_end":17},"name":"line_gap","qualname":"::VMetrics::line_gap","value":"f32","parent":{"krate":0,"index":1134},"children":[],"decl_id":null,"docs":" The gap to leave between the descent of one line and the ascent of the\n next. This is of course only a guideline given by the font's designers.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1164},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12761,"byte_end":12772,"line_start":339,"line_end":339,"column_start":12,"column_end":23},"name":"ScaledGlyph","qualname":"::ScaledGlyph","value":"ScaledGlyph {  }","parent":null,"children":[{"krate":0,"index":497},{"krate":0,"index":499},{"krate":0,"index":501}],"decl_id":null,"docs":" A glyph augmented with scaling information. You can query such a glyph for\n information that depends on the scale of the glyph.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1170},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":13296,"byte_end":13311,"line_start":358,"line_end":358,"column_start":12,"column_end":27},"name":"PositionedGlyph","qualname":"::PositionedGlyph","value":"PositionedGlyph {  }","parent":null,"children":[{"krate":0,"index":507},{"krate":0,"index":509},{"krate":0,"index":511}],"decl_id":null,"docs":" A glyph augmented with positioning and scaling information. You can query\n such a glyph for information that depends on the scale and position of the\n glyph.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1176},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":14185,"byte_end":14190,"line_start":381,"line_end":381,"column_start":12,"column_end":17},"name":"Scale","qualname":"::Scale","value":"Scale { x, y }","parent":null,"children":[{"krate":0,"index":515},{"krate":0,"index":517}],"decl_id":null,"docs":" Defines the size of a rendered face of a font, in pixels, horizontally and\n vertically. A vertical scale of `y` pixels means that the distance betwen\n the ascent and descent lines (see `VMetrics`) of the face will be `y`\n pixels. If `x` and `y` are equal the scaling is uniform. Non-uniform scaling\n by a factor *f* in the horizontal direction is achieved by setting `x` equal\n to *f* times `y`.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":14174,"byte_end":14298,"line_start":381,"line_end":386,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":515},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":14238,"byte_end":14239,"line_start":383,"line_end":383,"column_start":9,"column_end":10},"name":"x","qualname":"::Scale::x","value":"f32","parent":{"krate":0,"index":1176},"children":[],"decl_id":null,"docs":" Horizontal scale, in pixels.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":517},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":14289,"byte_end":14290,"line_start":385,"line_end":385,"column_start":9,"column_end":10},"name":"y","qualname":"::Scale::y","value":"f32","parent":{"krate":0,"index":1176},"children":[],"decl_id":null,"docs":" Vertical scale, in pixels.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":14401,"byte_end":14408,"line_start":391,"line_end":391,"column_start":12,"column_end":19},"name":"uniform","qualname":"<Scale>::uniform","value":"fn (s: f32) -> Scale","parent":null,"children":[],"decl_id":null,"docs":" Uniform scaling, equivalent to `Scale { x: s, y: s }`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":14380,"byte_end":14389,"line_start":390,"line_end":390,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":456},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":14774,"byte_end":14785,"line_start":401,"line_end":401,"column_start":11,"column_end":22},"name":"IntoGlyphId","qualname":"::IntoGlyphId","value":"IntoGlyphId","parent":null,"children":[{"krate":0,"index":458}],"decl_id":null,"docs":" A trait for types that can be converted into a `GlyphId`, in the context of\n a specific font.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":14893,"byte_end":14906,"line_start":404,"line_end":404,"column_start":8,"column_end":21},"name":"into_glyph_id","qualname":"::IntoGlyphId::into_glyph_id","value":"fn (self, _: &Font<'_>) -> GlyphId","parent":{"krate":0,"index":456},"children":[],"decl_id":null,"docs":" Convert `self` into a `GlyphId`, consulting the index map of `font` if\n necessary.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":15884,"byte_end":15894,"line_start":431,"line_end":431,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<FontCollection>::from_bytes","value":"fn <B> (bytes: B) -> Result<FontCollection<'a>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a font collection from an array of bytes, typically loaded\n from a font file, which may be a single font or a TrueType Collection\n holding a number of fonts. This array may be owned (e.g. `Vec<u8>`), or\n borrowed (`&[u8]`). As long as `From<T>` is implemented for `Bytes` for\n some type `T`, `T` can be used as input.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":16936,"byte_end":16945,"line_start":452,"line_end":452,"column_start":12,"column_end":21},"name":"into_font","qualname":"<FontCollection>::into_font","value":"fn (self) -> Result<Font<'a>, Error>","parent":null,"children":[],"decl_id":null,"docs":" If this `FontCollection` holds a single font, or a TrueType Collection\n containing only one font, return that as a `Font`. The `FontCollection`\n is consumed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":17972,"byte_end":17979,"line_start":473,"line_end":473,"column_start":12,"column_end":19},"name":"font_at","qualname":"<FontCollection>::font_at","value":"fn (&self, i: usize) -> Result<Font<'a>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Gets the font at index `i` in the font collection, if it exists and is\n valid. The produced font borrows the font data that is either borrowed\n or owned by this font collection.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":18398,"byte_end":18408,"line_start":481,"line_end":481,"column_start":12,"column_end":22},"name":"into_fonts","qualname":"<FontCollection>::into_fonts","value":"fn (self) -> IntoFontsIter<'a>","parent":null,"children":[],"decl_id":null,"docs":" Converts `self` into an `Iterator` yielding each `Font` that exists\n within the collection.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":482},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":18548,"byte_end":18561,"line_start":488,"line_end":488,"column_start":12,"column_end":25},"name":"IntoFontsIter","qualname":"::IntoFontsIter","value":"IntoFontsIter {  }","parent":null,"children":[{"krate":0,"index":149},{"krate":0,"index":151}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":19166,"byte_end":19176,"line_start":506,"line_end":506,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<Font>::from_bytes","value":"fn <B> (bytes: B) -> Result<Font<'a>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a font from an array of bytes, this is a shortcut for\n `FontCollection::from_bytes` for collections comprised of a single font.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":19492,"byte_end":19501,"line_start":512,"line_end":512,"column_start":12,"column_end":21},"name":"v_metrics","qualname":"<Font>::v_metrics","value":"fn (&self, scale: Scale) -> VMetrics","parent":null,"children":[],"decl_id":null,"docs":" The \"vertical metrics\" for this font at a given scale. These metrics are\n shared by all of the glyphs in the font. See `VMetrics` for more detail.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":19808,"byte_end":19826,"line_start":520,"line_end":520,"column_start":12,"column_end":30},"name":"v_metrics_unscaled","qualname":"<Font>::v_metrics_unscaled","value":"fn (&self) -> VMetrics","parent":null,"children":[],"decl_id":null,"docs":" Get the unscaled VMetrics for this font, shared by all glyphs.\n See `VMetrics` for more detail.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":19969,"byte_end":19981,"line_start":525,"line_end":525,"column_start":12,"column_end":24},"name":"units_per_em","qualname":"<Font>::units_per_em","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Returns the units per EM square of this font\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":20192,"byte_end":20203,"line_start":531,"line_end":531,"column_start":12,"column_end":23},"name":"glyph_count","qualname":"<Font>::glyph_count","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of glyphs present in this font. Glyph identifiers for this\n font will always be in the range `0..self.glyph_count()`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":20826,"byte_end":20831,"line_start":545,"line_end":545,"column_start":12,"column_end":17},"name":"glyph","qualname":"<Font>::glyph","value":"fn <C> (&self, id: C) -> Glyph<'a>","parent":null,"children":[],"decl_id":null,"docs":" Returns the corresponding glyph for a Unicode code point or a glyph id\n for this font.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":21378,"byte_end":21388,"line_start":557,"line_end":557,"column_start":12,"column_end":22},"name":"glyphs_for","qualname":"<Font>::glyphs_for","value":"fn <I> (&self, itr: I) -> GlyphIter<'a, '_, I>","parent":null,"children":[],"decl_id":null,"docs":" A convenience function.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":21600,"byte_end":21617,"line_start":564,"line_end":564,"column_start":12,"column_end":29},"name":"font_name_strings","qualname":"<Font>::font_name_strings","value":"fn (&self) -> tt::FontNameIter<'_, SharedBytes<'a>>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the names for this font.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":508},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":23801,"byte_end":23807,"line_start":613,"line_end":613,"column_start":12,"column_end":18},"name":"layout","qualname":"<Font>::layout","value":"fn <'b> (&'b self, s: &'b str, scale: Scale, start: Point<f32>) -> LayoutIter<'a, 'b>","parent":null,"children":[],"decl_id":null,"docs":" A convenience function for laying out glyphs for a string horizontally.\n It does not take control characters like line breaks into account, as\n treatment of these is likely to depend on the application.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":24204,"byte_end":24216,"line_start":625,"line_end":625,"column_start":12,"column_end":24},"name":"pair_kerning","qualname":"<Font>::pair_kerning","value":"fn <A, B> (&self, scale: Scale, first: A, second: B) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns additional kerning to apply as well as that given by HMetrics\n for a particular pair of glyphs.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1206},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":24667,"byte_end":24676,"line_start":638,"line_end":638,"column_start":12,"column_end":21},"name":"GlyphIter","qualname":"::GlyphIter","value":"GlyphIter {  }","parent":null,"children":[{"krate":0,"index":533},{"krate":0,"index":535}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1212},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":25025,"byte_end":25035,"line_start":655,"line_end":655,"column_start":12,"column_end":22},"name":"LayoutIter","qualname":"::LayoutIter","value":"LayoutIter {  }","parent":null,"children":[{"krate":0,"index":547},{"krate":0,"index":549},{"krate":0,"index":551},{"krate":0,"index":553},{"krate":0,"index":555},{"krate":0,"index":557}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":528},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":26159,"byte_end":26163,"line_start":686,"line_end":686,"column_start":12,"column_end":16},"name":"font","qualname":"<Glyph>::font","value":"fn (&self) -> Option<&Font<'a>>","parent":null,"children":[],"decl_id":null,"docs":" The font to which this glyph belongs. If the glyph is a standalone glyph\n that owns its resources, it no longer has a reference to the font which\n it was created from (using `standalone()`). In which case, `None` is\n returned.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":530},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":26388,"byte_end":26390,"line_start":693,"line_end":693,"column_start":12,"column_end":14},"name":"id","qualname":"<Glyph>::id","value":"fn (&self) -> GlyphId","parent":null,"children":[],"decl_id":null,"docs":" The glyph identifier for this glyph.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":532},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":26706,"byte_end":26712,"line_start":701,"line_end":701,"column_start":12,"column_end":18},"name":"scaled","qualname":"<Glyph>::scaled","value":"fn (self, scale: Scale) -> ScaledGlyph<'a>","parent":null,"children":[],"decl_id":null,"docs":" Augments this glyph with scaling information, making methods that depend\n on the scale of the glyph available.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":534},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":27725,"byte_end":27735,"line_start":726,"line_end":726,"column_start":12,"column_end":22},"name":"standalone","qualname":"<Glyph>::standalone","value":"fn (&self) -> Glyph<'static>","parent":null,"children":[],"decl_id":null,"docs":" Turns a `Glyph<'a>` into a `Glyph<'static>`. This produces a glyph that\n owns its resources, extracted from the font. This glyph can outlive the\n font that it comes from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":28922,"byte_end":28930,"line_start":751,"line_end":751,"column_start":12,"column_end":20},"name":"get_data","qualname":"<Glyph>::get_data","value":"fn (&self) -> Option<Arc<SharedGlyphData>>","parent":null,"children":[],"decl_id":null,"docs":" Get the data from this glyph (such as width, extents, vertices, etc.).\n Only possible if the glyph is a shared glyph.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":563},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":29226,"byte_end":29230,"line_start":761,"line_end":761,"column_start":5,"column_end":9},"name":"Line","qualname":"::Segment::Line","value":"Segment::Line(Line)","parent":{"krate":0,"index":1218},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":567},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":29242,"byte_end":29247,"line_start":762,"line_end":762,"column_start":5,"column_end":10},"name":"Curve","qualname":"::Segment::Curve","value":"Segment::Curve(Curve)","parent":{"krate":0,"index":1218},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1218},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":29212,"byte_end":29219,"line_start":760,"line_end":760,"column_start":10,"column_end":17},"name":"Segment","qualname":"::Segment","value":"Segment::{Line, Curve}","parent":null,"children":[{"krate":0,"index":563},{"krate":0,"index":567}],"decl_id":null,"docs":" Part of a `Contour`, either a `Line` or a `Curve`.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":29203,"byte_end":29257,"line_start":760,"line_end":763,"column_start":1,"column_end":2}}]},{"kind":"Struct","id":{"krate":0,"index":1230},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":29351,"byte_end":29358,"line_start":766,"line_end":766,"column_start":12,"column_end":19},"name":"Contour","qualname":"::Contour","value":"Contour { segments }","parent":null,"children":[{"krate":0,"index":571}],"decl_id":null,"docs":" A closed loop consisting of a sequence of `Segment`s.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":571},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":29369,"byte_end":29377,"line_start":767,"line_end":767,"column_start":9,"column_end":17},"name":"segments","qualname":"::Contour::segments","value":"std::vec::Vec<Segment>","parent":{"krate":0,"index":1230},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":540},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":29478,"byte_end":29480,"line_start":771,"line_end":771,"column_start":12,"column_end":14},"name":"id","qualname":"<ScaledGlyph>::id","value":"fn (&self) -> GlyphId","parent":null,"children":[],"decl_id":null,"docs":" The glyph identifier for this glyph.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":542},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":29794,"byte_end":29798,"line_start":778,"line_end":778,"column_start":12,"column_end":16},"name":"font","qualname":"<ScaledGlyph>::font","value":"fn (&self) -> Option<&Font<'a>>","parent":null,"children":[],"decl_id":null,"docs":" The font to which this glyph belongs. If the glyph is a standalone glyph\n that owns its resources, it no longer has a reference to the font which\n it was created from (using `standalone()`). In which case, `None` is\n returned.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":544},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":29922,"byte_end":29935,"line_start":782,"line_end":782,"column_start":12,"column_end":25},"name":"into_unscaled","qualname":"<ScaledGlyph>::into_unscaled","value":"fn (self) -> Glyph<'a>","parent":null,"children":[],"decl_id":null,"docs":" A reference to this glyph without the scaling\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":546},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":30033,"byte_end":30041,"line_start":786,"line_end":786,"column_start":12,"column_end":20},"name":"unscaled","qualname":"<ScaledGlyph>::unscaled","value":"fn (&self) -> &Glyph<'a>","parent":null,"children":[],"decl_id":null,"docs":" Removes the scaling from this glyph\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":548},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":30231,"byte_end":30241,"line_start":791,"line_end":791,"column_start":12,"column_end":22},"name":"positioned","qualname":"<ScaledGlyph>::positioned","value":"fn (self, p: Point<f32>) -> PositionedGlyph<'a>","parent":null,"children":[],"decl_id":null,"docs":" Augments this glyph with positioning information, making methods that\n depend on the position of the glyph available.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":30446,"byte_end":30451,"line_start":799,"line_end":799,"column_start":12,"column_end":17},"name":"scale","qualname":"<ScaledGlyph>::scale","value":"fn (&self) -> Scale","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":552},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":30608,"byte_end":30617,"line_start":804,"line_end":804,"column_start":12,"column_end":21},"name":"h_metrics","qualname":"<ScaledGlyph>::h_metrics","value":"fn (&self) -> HMetrics","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the \"horizontal metrics\" of this glyph. See `HMetrics` for\n more detail.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":560},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":33281,"byte_end":33286,"line_start":867,"line_end":867,"column_start":12,"column_end":17},"name":"shape","qualname":"<ScaledGlyph>::shape","value":"fn (&self) -> Option<Vec<Contour>>","parent":null,"children":[],"decl_id":null,"docs":" Produces a list of the contours that make up the shape of this glyph.\n Each contour consists of a sequence of segments. Each segment is either\n a straight `Line` or a `Curve`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":562},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":33598,"byte_end":33616,"line_start":873,"line_end":873,"column_start":12,"column_end":30},"name":"exact_bounding_box","qualname":"<ScaledGlyph>::exact_bounding_box","value":"fn (&self) -> Option<Rect<f32>>","parent":null,"children":[],"decl_id":null,"docs":" The bounding box of the shape of this glyph, not to be confused with\n `pixel_bounding_box`, the conservative pixel-boundary bounding box. The\n coordinates are relative to the glyph's origin.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":34522,"byte_end":34532,"line_start":893,"line_end":893,"column_start":12,"column_end":22},"name":"standalone","qualname":"<ScaledGlyph>::standalone","value":"fn (&self) -> ScaledGlyph<'static>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a glyph that owns its data from this glyph. This is similar\n to `Glyph::standalone`. See that function for more details.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":36085,"byte_end":36087,"line_start":932,"line_end":932,"column_start":12,"column_end":14},"name":"id","qualname":"<PositionedGlyph>::id","value":"fn (&self) -> GlyphId","parent":null,"children":[],"decl_id":null,"docs":" The glyph identifier for this glyph.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":36402,"byte_end":36406,"line_start":939,"line_end":939,"column_start":12,"column_end":16},"name":"font","qualname":"<PositionedGlyph>::font","value":"fn (&self) -> Option<&Font<'a>>","parent":null,"children":[],"decl_id":null,"docs":" The font to which this glyph belongs. If the glyph is a standalone glyph\n that owns its resources, it no longer has a reference to the font which\n it was created from (using `standalone()`). In which case, `None` is\n returned.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":574},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":36531,"byte_end":36543,"line_start":943,"line_end":943,"column_start":12,"column_end":24},"name":"unpositioned","qualname":"<PositionedGlyph>::unpositioned","value":"fn (&self) -> &ScaledGlyph<'a>","parent":null,"children":[],"decl_id":null,"docs":" A reference to this glyph without positioning\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":576},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":36655,"byte_end":36672,"line_start":947,"line_end":947,"column_start":12,"column_end":29},"name":"into_unpositioned","qualname":"<PositionedGlyph>::into_unpositioned","value":"fn (self) -> ScaledGlyph<'a>","parent":null,"children":[],"decl_id":null,"docs":" Removes the positioning from this glyph\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":578},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":37051,"byte_end":37069,"line_start":954,"line_end":954,"column_start":12,"column_end":30},"name":"pixel_bounding_box","qualname":"<PositionedGlyph>::pixel_bounding_box","value":"fn (&self) -> Option<Rect<i32>>","parent":null,"children":[],"decl_id":null,"docs":" The conservative pixel-boundary bounding box for this glyph. This is the\n smallest rectangle aligned to pixel boundaries that encloses the shape\n of this glyph at this position. Note that the origin of the glyph, at\n pixel-space coordinates (0, 0), is at the top left of the bounding box.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":580},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":37239,"byte_end":37244,"line_start":959,"line_end":959,"column_start":12,"column_end":17},"name":"shape","qualname":"<PositionedGlyph>::shape","value":"fn (&self) -> Option<Vec<Contour>>","parent":null,"children":[],"decl_id":null,"docs":" Similar to `ScaledGlyph::shape()`, but with the position of the glyph\n taken into account.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":582},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":37344,"byte_end":37349,"line_start":962,"line_end":962,"column_start":12,"column_end":17},"name":"scale","qualname":"<PositionedGlyph>::scale","value":"fn (&self) -> Scale","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":584},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":37411,"byte_end":37419,"line_start":965,"line_end":965,"column_start":12,"column_end":20},"name":"position","qualname":"<PositionedGlyph>::position","value":"fn (&self) -> Point<f32>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":586},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":38199,"byte_end":38203,"line_start":988,"line_end":988,"column_start":12,"column_end":16},"name":"draw","qualname":"<PositionedGlyph>::draw","value":"fn <O> (&self, o: O) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Rasterises this glyph. For each pixel in the rect given by\n `pixel_bounding_box()`, `o` is called:","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":596},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":40041,"byte_end":40051,"line_start":1036,"line_end":1036,"column_start":12,"column_end":22},"name":"standalone","qualname":"<PositionedGlyph>::standalone","value":"fn (&self) -> PositionedGlyph<'static>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a glyph that owns its data from this glyph. This is similar\n to `Glyph::standalone`. See that function for more details.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":40322,"byte_end":40334,"line_start":1045,"line_end":1045,"column_start":12,"column_end":24},"name":"set_position","qualname":"<PositionedGlyph>::set_position","value":"fn (&mut self, p: Point<f32>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Resets positioning information and recalculates the pixel bounding box\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":573},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":41036,"byte_end":41054,"line_start":1065,"line_end":1065,"column_start":5,"column_end":23},"name":"UnrecognizedFormat","qualname":"::Error::UnrecognizedFormat","value":"Error::UnrecognizedFormat","parent":{"krate":0,"index":1240},"children":[],"decl_id":null,"docs":" Font data presented to rusttype is not in a format that the library\n recognizes.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":575},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":41165,"byte_end":41174,"line_start":1069,"line_end":1069,"column_start":5,"column_end":14},"name":"IllFormed","qualname":"::Error::IllFormed","value":"Error::IllFormed","parent":{"krate":0,"index":1240},"children":[],"decl_id":null,"docs":" Font data presented to rusttype was ill-formed (lacking necessary\n tables, for example).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":577},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":41317,"byte_end":41343,"line_start":1073,"line_end":1073,"column_start":5,"column_end":31},"name":"CollectionIndexOutOfBounds","qualname":"::Error::CollectionIndexOutOfBounds","value":"Error::CollectionIndexOutOfBounds","parent":{"krate":0,"index":1240},"children":[],"decl_id":null,"docs":" The caller tried to access the `i`'th font from a `FontCollection`, but\n the collection doesn't contain that many fonts.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":579},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":41496,"byte_end":41527,"line_start":1077,"line_end":1077,"column_start":5,"column_end":36},"name":"CollectionContainsMultipleFonts","qualname":"::Error::CollectionContainsMultipleFonts","value":"Error::CollectionContainsMultipleFonts","parent":{"krate":0,"index":1240},"children":[],"decl_id":null,"docs":" The caller tried to convert a `FontCollection` into a font via\n `into_font`, but the `FontCollection` contains more than one font.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1240},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":40928,"byte_end":40933,"line_start":1062,"line_end":1062,"column_start":10,"column_end":15},"name":"Error","qualname":"::Error","value":"Error::{UnrecognizedFormat, IllFormed, CollectionIndexOutOfBounds, CollectionContainsMultipleFonts}","parent":null,"children":[{"krate":0,"index":573},{"krate":0,"index":575},{"krate":0,"index":577},{"krate":0,"index":579}],"decl_id":null,"docs":" The type for errors returned by rusttype.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":43808,"byte_end":43813,"line_start":44,"line_end":44,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":16},{"krate":0,"index":18}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":43994,"byte_end":44000,"line_start":51,"line_end":51,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":22},{"krate":0,"index":24}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":44182,"byte_end":44188,"line_start":58,"line_end":58,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":28},{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":44350,"byte_end":44356,"line_start":65,"line_end":65,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":34},{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":44686,"byte_end":44692,"line_start":79,"line_end":79,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":45022,"byte_end":45028,"line_start":93,"line_end":93,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":58},{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":45358,"byte_end":45364,"line_start":107,"line_end":107,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":70},{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":45725,"byte_end":45730,"line_start":121,"line_end":121,"column_start":55,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":82},{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":45920,"byte_end":45925,"line_start":128,"line_end":128,"column_start":55,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":46114,"byte_end":46120,"line_start":135,"line_end":135,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":94},{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":46875,"byte_end":46879,"line_start":160,"line_end":160,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":100},{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":47390,"byte_end":47394,"line_start":182,"line_end":182,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":47794,"byte_end":47799,"line_start":201,"line_end":201,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":120},{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":49293,"byte_end":49298,"line_start":247,"line_end":247,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":134},{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":49759,"byte_end":49763,"line_start":264,"line_end":264,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":142},{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":50659,"byte_end":50680,"line_start":301,"line_end":301,"column_start":6,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,114,97,115,116,101,114,105,122,101,114,46,114,115],"byte_start":52663,"byte_end":52676,"line_start":23,"line_end":23,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":176},{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,114,97,115,116,101,114,105,122,101,114,46,114,115],"byte_start":53829,"byte_end":53833,"line_start":60,"line_end":60,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":182},{"krate":0,"index":184},{"krate":0,"index":186},{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,114,97,115,116,101,114,105,122,101,114,46,114,115],"byte_start":54574,"byte_end":54588,"line_start":96,"line_end":96,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":196},{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,114,97,115,116,101,114,105,122,101,114,46,114,115],"byte_start":57387,"byte_end":57392,"line_start":175,"line_end":175,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":210},{"krate":0,"index":212},{"krate":0,"index":214},{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":70545,"byte_end":70556,"line_start":113,"line_end":113,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":268},{"krate":0,"index":270},{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":71292,"byte_end":71303,"line_start":146,"line_end":146,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":276},{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":71509,"byte_end":71520,"line_start":155,"line_end":155,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":72141,"byte_end":72145,"line_start":183,"line_end":183,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":73764,"byte_end":73776,"line_start":241,"line_end":241,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":74013,"byte_end":74025,"line_start":253,"line_end":253,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":306},{"krate":0,"index":308},{"krate":0,"index":310},{"krate":0,"index":312},{"krate":0,"index":314},{"krate":0,"index":316},{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":81383,"byte_end":81395,"line_start":461,"line_end":461,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":81544,"byte_end":81556,"line_start":466,"line_end":466,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":82156,"byte_end":82169,"line_start":484,"line_end":484,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":82318,"byte_end":82331,"line_start":489,"line_end":489,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":83450,"byte_end":83455,"line_start":526,"line_end":526,"column_start":13,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":340},{"krate":0,"index":342},{"krate":0,"index":344},{"krate":0,"index":346},{"krate":0,"index":348},{"krate":0,"index":350},{"krate":0,"index":352},{"krate":0,"index":354},{"krate":0,"index":356},{"krate":0,"index":358},{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6612,"byte_end":6616,"line_start":150,"line_end":150,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":402}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7332,"byte_end":7343,"line_start":171,"line_end":171,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":406},{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7742,"byte_end":7753,"line_start":186,"line_end":186,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":412}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8098,"byte_end":8109,"line_start":198,"line_end":198,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8434,"byte_end":8445,"line_start":209,"line_end":209,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":420}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8757,"byte_end":8768,"line_start":220,"line_end":220,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9099,"byte_end":9110,"line_start":231,"line_end":231,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":428}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10350,"byte_end":10355,"line_start":266,"line_end":266,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":432}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12129,"byte_end":12137,"line_start":314,"line_end":314,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12364,"byte_end":12372,"line_start":324,"line_end":324,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":440},{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12866,"byte_end":12877,"line_start":345,"line_end":345,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":13419,"byte_end":13434,"line_start":364,"line_end":364,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":14305,"byte_end":14310,"line_start":388,"line_end":388,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":15112,"byte_end":15121,"line_start":411,"line_end":411,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":466}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":15262,"byte_end":15269,"line_start":416,"line_end":416,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":470}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":15374,"byte_end":15388,"line_start":422,"line_end":422,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":474},{"krate":0,"index":476},{"krate":0,"index":478},{"krate":0,"index":480}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":18651,"byte_end":18664,"line_start":492,"line_end":492,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":486},{"krate":0,"index":488}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":18990,"byte_end":18994,"line_start":503,"line_end":503,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":492},{"krate":0,"index":494},{"krate":0,"index":496},{"krate":0,"index":498},{"krate":0,"index":500},{"krate":0,"index":502},{"krate":0,"index":504},{"krate":0,"index":506},{"krate":0,"index":508},{"krate":0,"index":510}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":24809,"byte_end":24818,"line_start":645,"line_end":645,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":514},{"krate":0,"index":516}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":25222,"byte_end":25232,"line_start":663,"line_end":663,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":520},{"krate":0,"index":522}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":25801,"byte_end":25806,"line_start":678,"line_end":678,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":526},{"krate":0,"index":528},{"krate":0,"index":530},{"krate":0,"index":532},{"krate":0,"index":534},{"krate":0,"index":536}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":29404,"byte_end":29415,"line_start":769,"line_end":769,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":540},{"krate":0,"index":542},{"krate":0,"index":544},{"krate":0,"index":546},{"krate":0,"index":548},{"krate":0,"index":550},{"krate":0,"index":552},{"krate":0,"index":554},{"krate":0,"index":560},{"krate":0,"index":562},{"krate":0,"index":564},{"krate":0,"index":566}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":36007,"byte_end":36022,"line_start":930,"line_end":930,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":570},{"krate":0,"index":572},{"krate":0,"index":574},{"krate":0,"index":576},{"krate":0,"index":578},{"krate":0,"index":580},{"krate":0,"index":582},{"krate":0,"index":584},{"krate":0,"index":586},{"krate":0,"index":596},{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":41554,"byte_end":41559,"line_start":1080,"line_end":1080,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":41743,"byte_end":41748,"line_start":1086,"line_end":1086,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":606}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":42301,"byte_end":42306,"line_start":1101,"line_end":1101,"column_start":45,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5233,"byte_end":5242,"line_start":107,"line_end":107,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":220}}],"macro_refs":[],"relations":[{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":43808,"byte_end":43813,"line_start":44,"line_end":44,"column_start":44,"column_end":49},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":614},"to":{"krate":2,"index":1776}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":43994,"byte_end":44000,"line_start":51,"line_end":51,"column_start":44,"column_end":50},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":656},"to":{"krate":2,"index":1768}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":44182,"byte_end":44188,"line_start":58,"line_end":58,"column_start":44,"column_end":50},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":656},"to":{"krate":2,"index":1776}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":44350,"byte_end":44356,"line_start":65,"line_end":65,"column_start":24,"column_end":30},"kind":{"variant":"Impl","fields":[3]},"from":{"krate":0,"index":656},"to":{"krate":2,"index":1784}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":44686,"byte_end":44692,"line_start":79,"line_end":79,"column_start":24,"column_end":30},"kind":{"variant":"Impl","fields":[5]},"from":{"krate":0,"index":656},"to":{"krate":2,"index":1784}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":45022,"byte_end":45028,"line_start":93,"line_end":93,"column_start":24,"column_end":30},"kind":{"variant":"Impl","fields":[7]},"from":{"krate":0,"index":656},"to":{"krate":2,"index":1792}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":45358,"byte_end":45364,"line_start":107,"line_end":107,"column_start":24,"column_end":30},"kind":{"variant":"Impl","fields":[9]},"from":{"krate":0,"index":656},"to":{"krate":2,"index":1792}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":45725,"byte_end":45730,"line_start":121,"line_end":121,"column_start":55,"column_end":60},"kind":{"variant":"Impl","fields":[11]},"from":{"krate":0,"index":614},"to":{"krate":2,"index":1768}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":45920,"byte_end":45925,"line_start":128,"line_end":128,"column_start":55,"column_end":60},"kind":{"variant":"Impl","fields":[12]},"from":{"krate":0,"index":614},"to":{"krate":2,"index":1776}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":46114,"byte_end":46120,"line_start":135,"line_end":135,"column_start":54,"column_end":60},"kind":{"variant":"Impl","fields":[13]},"from":{"krate":0,"index":656},"to":{"krate":2,"index":1768}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":46875,"byte_end":46879,"line_start":160,"line_end":160,"column_start":38,"column_end":42},"kind":{"variant":"Impl","fields":[14]},"from":{"krate":0,"index":758},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":47390,"byte_end":47394,"line_start":182,"line_end":182,"column_start":27,"column_end":31},"kind":{"variant":"Impl","fields":[15]},"from":{"krate":0,"index":698},"to":{"krate":0,"index":104}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":47794,"byte_end":47799,"line_start":201,"line_end":201,"column_start":27,"column_end":32},"kind":{"variant":"Impl","fields":[16]},"from":{"krate":0,"index":728},"to":{"krate":0,"index":104}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":49077,"byte_end":49082,"line_start":239,"line_end":239,"column_start":16,"column_end":21},"kind":"SuperTrait","from":{"krate":2,"index":1706},"to":{"krate":0,"index":124}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":49293,"byte_end":49298,"line_start":247,"line_end":247,"column_start":14,"column_end":19},"kind":{"variant":"Impl","fields":[17]},"from":{"krate":0,"index":728},"to":{"krate":0,"index":124}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":49759,"byte_end":49763,"line_start":264,"line_end":264,"column_start":14,"column_end":18},"kind":{"variant":"Impl","fields":[18]},"from":{"krate":0,"index":698},"to":{"krate":0,"index":124}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":50659,"byte_end":50680,"line_start":301,"line_end":301,"column_start":6,"column_end":27},"kind":{"variant":"Impl","fields":[19]},"from":{"krate":0,"index":800},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,114,97,115,116,101,114,105,122,101,114,46,114,115],"byte_start":52267,"byte_end":52272,"line_start":5,"line_end":5,"column_start":16,"column_end":21},"kind":"SuperTrait","from":{"krate":2,"index":1706},"to":{"krate":0,"index":162}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,114,97,115,116,101,114,105,122,101,114,46,114,115],"byte_start":52663,"byte_end":52676,"line_start":23,"line_end":23,"column_start":19,"column_end":32},"kind":{"variant":"Impl","fields":[20]},"from":{"krate":0,"index":812},"to":{"krate":2,"index":4316}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,114,97,115,116,101,114,105,122,101,114,46,114,115],"byte_start":53829,"byte_end":53833,"line_start":60,"line_end":60,"column_start":18,"column_end":22},"kind":{"variant":"Impl","fields":[21]},"from":{"krate":0,"index":698},"to":{"krate":0,"index":162}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,114,97,115,116,101,114,105,122,101,114,46,114,115],"byte_start":54574,"byte_end":54588,"line_start":96,"line_end":96,"column_start":19,"column_end":33},"kind":{"variant":"Impl","fields":[22]},"from":{"krate":0,"index":192},"to":{"krate":2,"index":4316}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,114,97,115,116,101,114,105,122,101,114,46,114,115],"byte_start":57387,"byte_end":57392,"line_start":175,"line_end":175,"column_start":18,"column_end":23},"kind":{"variant":"Impl","fields":[23]},"from":{"krate":0,"index":728},"to":{"krate":0,"index":162}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":70545,"byte_end":70556,"line_start":113,"line_end":113,"column_start":6,"column_end":17},"kind":{"variant":"Impl","fields":[24]},"from":{"krate":0,"index":850},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":71292,"byte_end":71303,"line_start":146,"line_end":146,"column_start":42,"column_end":53},"kind":{"variant":"Impl","fields":[25]},"from":{"krate":0,"index":850},"to":{"krate":2,"index":2056}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":71509,"byte_end":71520,"line_start":155,"line_end":155,"column_start":45,"column_end":56},"kind":{"variant":"Impl","fields":[26]},"from":{"krate":0,"index":850},"to":{"krate":2,"index":2062}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":72141,"byte_end":72145,"line_start":183,"line_end":183,"column_start":23,"column_end":27},"kind":{"variant":"Impl","fields":[27]},"from":{"krate":0,"index":758},"to":{"krate":0,"index":288}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":73764,"byte_end":73776,"line_start":241,"line_end":241,"column_start":18,"column_end":30},"kind":{"variant":"Impl","fields":[28]},"from":{"krate":0,"index":870},"to":{"krate":2,"index":2632}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":74013,"byte_end":74025,"line_start":253,"line_end":253,"column_start":6,"column_end":18},"kind":{"variant":"Impl","fields":[29]},"from":{"krate":0,"index":870},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":81383,"byte_end":81395,"line_start":461,"line_end":461,"column_start":23,"column_end":35},"kind":{"variant":"Impl","fields":[30]},"from":{"krate":0,"index":880},"to":{"krate":2,"index":8430}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":81544,"byte_end":81556,"line_start":466,"line_end":466,"column_start":23,"column_end":35},"kind":{"variant":"Impl","fields":[31]},"from":{"krate":0,"index":880},"to":{"krate":1,"index":2470}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":82156,"byte_end":82169,"line_start":484,"line_end":484,"column_start":23,"column_end":36},"kind":{"variant":"Impl","fields":[32]},"from":{"krate":0,"index":912},"to":{"krate":2,"index":8430}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":82318,"byte_end":82331,"line_start":489,"line_end":489,"column_start":23,"column_end":36},"kind":{"variant":"Impl","fields":[33]},"from":{"krate":0,"index":912},"to":{"krate":1,"index":2470}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":83450,"byte_end":83455,"line_start":526,"line_end":526,"column_start":13,"column_end":18},"kind":{"variant":"Impl","fields":[34]},"from":{"krate":0,"index":296},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6612,"byte_end":6616,"line_start":150,"line_end":150,"column_start":21,"column_end":25},"kind":{"variant":"Impl","fields":[35]},"from":{"krate":0,"index":986},"to":{"krate":2,"index":8426}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7332,"byte_end":7343,"line_start":171,"line_end":171,"column_start":32,"column_end":43},"kind":{"variant":"Impl","fields":[36]},"from":{"krate":0,"index":992},"to":{"krate":2,"index":1944}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7742,"byte_end":7753,"line_start":186,"line_end":186,"column_start":29,"column_end":40},"kind":{"variant":"Impl","fields":[37]},"from":{"krate":0,"index":992},"to":{"krate":2,"index":2656}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8098,"byte_end":8109,"line_start":198,"line_end":198,"column_start":26,"column_end":37},"kind":{"variant":"Impl","fields":[38]},"from":{"krate":0,"index":992},"to":{"krate":2,"index":2656}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8434,"byte_end":8445,"line_start":209,"line_end":209,"column_start":26,"column_end":37},"kind":{"variant":"Impl","fields":[39]},"from":{"krate":0,"index":992},"to":{"krate":2,"index":2656}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8757,"byte_end":8768,"line_start":220,"line_end":220,"column_start":24,"column_end":35},"kind":{"variant":"Impl","fields":[40]},"from":{"krate":0,"index":992},"to":{"krate":2,"index":2656}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9099,"byte_end":9110,"line_start":231,"line_end":231,"column_start":42,"column_end":53},"kind":{"variant":"Impl","fields":[41]},"from":{"krate":0,"index":992},"to":{"krate":2,"index":2656}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10350,"byte_end":10355,"line_start":266,"line_end":266,"column_start":21,"column_end":26},"kind":{"variant":"Impl","fields":[42]},"from":{"krate":0,"index":1086},"to":{"krate":2,"index":8426}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12129,"byte_end":12137,"line_start":314,"line_end":314,"column_start":29,"column_end":37},"kind":{"variant":"Impl","fields":[43]},"from":{"krate":0,"index":1134},"to":{"krate":2,"index":2656}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12364,"byte_end":12372,"line_start":324,"line_end":324,"column_start":31,"column_end":39},"kind":{"variant":"Impl","fields":[44]},"from":{"krate":0,"index":1134},"to":{"krate":2,"index":1784}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12866,"byte_end":12877,"line_start":345,"line_end":345,"column_start":21,"column_end":32},"kind":{"variant":"Impl","fields":[45]},"from":{"krate":0,"index":1164},"to":{"krate":2,"index":8426}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":13419,"byte_end":13434,"line_start":364,"line_end":364,"column_start":21,"column_end":36},"kind":{"variant":"Impl","fields":[46]},"from":{"krate":0,"index":1170},"to":{"krate":2,"index":8426}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":14305,"byte_end":14310,"line_start":388,"line_end":388,"column_start":6,"column_end":11},"kind":{"variant":"Impl","fields":[47]},"from":{"krate":0,"index":1176},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":15112,"byte_end":15121,"line_start":411,"line_end":411,"column_start":22,"column_end":31},"kind":{"variant":"Impl","fields":[49]},"from":{"krate":0,"index":1002},"to":{"krate":0,"index":456}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":15262,"byte_end":15269,"line_start":416,"line_end":416,"column_start":22,"column_end":29},"kind":{"variant":"Impl","fields":[50]},"from":{"krate":0,"index":1044},"to":{"krate":0,"index":456}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":15374,"byte_end":15388,"line_start":422,"line_end":422,"column_start":10,"column_end":24},"kind":{"variant":"Impl","fields":[51]},"from":{"krate":0,"index":976},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":18651,"byte_end":18664,"line_start":492,"line_end":492,"column_start":23,"column_end":36},"kind":{"variant":"Impl","fields":[52]},"from":{"krate":0,"index":482},"to":{"krate":2,"index":4316}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":18990,"byte_end":18994,"line_start":503,"line_end":503,"column_start":10,"column_end":14},"kind":{"variant":"Impl","fields":[53]},"from":{"krate":0,"index":986},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":24809,"byte_end":24818,"line_start":645,"line_end":645,"column_start":40,"column_end":49},"kind":{"variant":"Impl","fields":[54]},"from":{"krate":0,"index":1206},"to":{"krate":2,"index":4316}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":25222,"byte_end":25232,"line_start":663,"line_end":663,"column_start":27,"column_end":37},"kind":{"variant":"Impl","fields":[55]},"from":{"krate":0,"index":1212},"to":{"krate":2,"index":4316}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":25801,"byte_end":25806,"line_start":678,"line_end":678,"column_start":10,"column_end":15},"kind":{"variant":"Impl","fields":[56]},"from":{"krate":0,"index":1086},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":29404,"byte_end":29415,"line_start":769,"line_end":769,"column_start":10,"column_end":21},"kind":{"variant":"Impl","fields":[57]},"from":{"krate":0,"index":1164},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":36007,"byte_end":36022,"line_start":930,"line_end":930,"column_start":10,"column_end":25},"kind":{"variant":"Impl","fields":[58]},"from":{"krate":0,"index":1170},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":41554,"byte_end":41559,"line_start":1080,"line_end":1080,"column_start":23,"column_end":28},"kind":{"variant":"Impl","fields":[59]},"from":{"krate":0,"index":1240},"to":{"krate":2,"index":8430}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":41743,"byte_end":41748,"line_start":1086,"line_end":1086,"column_start":28,"column_end":33},"kind":{"variant":"Impl","fields":[60]},"from":{"krate":0,"index":1240},"to":{"krate":1,"index":2470}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":42301,"byte_end":42306,"line_start":1101,"line_end":1101,"column_start":45,"column_end":50},"kind":{"variant":"Impl","fields":[61]},"from":{"krate":1,"index":3884},"to":{"krate":2,"index":2656}}]}