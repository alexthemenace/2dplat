{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.18.2","compilation":{"directory":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,108,108,111,99,95,98,117,102,45,48,46,48,46,54],"program":"/Users/Kumar/.rustup/toolchains/nightly-2019-02-27-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","malloc_buf","/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/malloc_buf-0.0.6/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=df603b12b9877e45","-C","extra-filename=-df603b12b9877e45","--out-dir","/Users/Kumar/personal/workspace/rust/mayhem-galactica/target/rls/debug/deps","-L","dependency=/Users/Kumar/personal/workspace/rust/mayhem-galactica/target/rls/debug/deps","--extern","libc=/Users/Kumar/personal/workspace/rust/mayhem-galactica/target/rls/debug/deps/liblibc-66b27b5b33c2bbff.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/Kumar/.rustup/toolchains/nightly-2019-02-27-x86_64-apple-darwin"],"output":[47,85,115,101,114,115,47,75,117,109,97,114,47,112,101,114,115,111,110,97,108,47,119,111,114,107,115,112,97,99,101,47,114,117,115,116,47,109,97,121,104,101,109,45,103,97,108,97,99,116,105,99,97,47,116,97,114,103,101,116,47,114,108,115,47,100,101,98,117,103,47,100,101,112,115,47,108,105,98,109,97,108,108,111,99,95,98,117,102,45,100,102,54,48,51,98,49,50,98,57,56,55,55,101,52,53,46,114,109,101,116,97]},"prelude":{"crate_id":{"name":"malloc_buf","disambiguator":[4053949291556387277,11784123301433309937]},"crate_root":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/malloc_buf-0.0.6/src","external_crates":[{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/malloc_buf-0.0.6/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[17365010580081952725,18206160307474953630]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/malloc_buf-0.0.6/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[6760693024494354245,14002820984158080208]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/malloc_buf-0.0.6/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[199464317358532175,14697293645914925506]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/malloc_buf-0.0.6/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13558819658400235840,6800895293433658904]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/malloc_buf-0.0.6/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[18425220944332119967,14239145101900690943]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/malloc_buf-0.0.6/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10854247164472963508,11478657302719725741]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/malloc_buf-0.0.6/src/lib.rs","num":7,"id":{"name":"rustc_demangle","disambiguator":[4168194895173621532,15234647754953002462]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/malloc_buf-0.0.6/src/lib.rs","num":8,"id":{"name":"unwind","disambiguator":[12306654840912142307,10869972980572175885]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/malloc_buf-0.0.6/src/lib.rs","num":9,"id":{"name":"backtrace_sys","disambiguator":[1531625639640313062,14514900902579754273]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/malloc_buf-0.0.6/src/lib.rs","num":10,"id":{"name":"panic_unwind","disambiguator":[13209889598193010227,616765238597587583]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/malloc_buf-0.0.6/src/lib.rs","num":11,"id":{"name":"libc","disambiguator":[2703259349667130902,12042406638146325142]}}],"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,108,108,111,99,95,98,117,102,45,48,46,48,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":2287,"line_start":1,"line_end":95,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,108,108,111,99,95,98,117,102,45,48,46,48,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":2287,"line_start":1,"line_end":95,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/malloc_buf-0.0.6/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":16},{"krate":0,"index":18},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":28}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":22},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,108,108,111,99,95,98,117,102,45,48,46,48,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":325,"byte_end":337,"line_start":19,"line_end":19,"column_start":12,"column_end":24},"name":"MallocBuffer","qualname":"::MallocBuffer","value":"MallocBuffer {  }","parent":null,"children":[{"krate":0,"index":25},{"krate":0,"index":27},{"krate":0,"index":29}],"decl_id":null,"docs":" A type that represents a `malloc`'d chunk of memory.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,108,108,111,99,95,98,117,102,45,48,46,48,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":835,"byte_end":838,"line_start":34,"line_end":34,"column_start":19,"column_end":22},"name":"new","qualname":"<MallocBuffer<T>>::new","value":"fn (ptr: *mut T, len: usize) -> Option<MallocBuffer<T>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `MallocBuffer` for a `malloc`'d buffer\n with the given length at the given pointer.\n Returns `None` if the given pointer is null and the length is not 0.","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,108,108,111,99,95,98,117,102,45,48,46,48,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":152,"byte_end":161,"line_start":10,"line_end":10,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":20}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,108,108,111,99,95,98,117,102,45,48,46,48,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":425,"byte_end":437,"line_start":25,"line_end":25,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":26}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,108,108,111,99,95,98,117,102,45,48,46,48,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1163,"byte_end":1175,"line_start":47,"line_end":47,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":30},{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,108,108,111,99,95,98,117,102,45,48,46,48,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":152,"byte_end":161,"line_start":10,"line_end":10,"column_start":15,"column_end":24},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":16},"to":{"krate":2,"index":1978}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,108,108,111,99,95,98,117,102,45,48,46,48,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":425,"byte_end":437,"line_start":25,"line_end":25,"column_start":15,"column_end":27},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":22},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,108,108,111,99,95,98,117,102,45,48,46,48,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1163,"byte_end":1175,"line_start":47,"line_end":47,"column_start":19,"column_end":31},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":22},"to":{"krate":2,"index":1944}}]}