{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.18.2","compilation":{"directory":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48],"program":"/Users/Kumar/.rustup/toolchains/nightly-2019-02-27-x86_64-apple-darwin/bin/rls","arguments":["--edition=2018","--crate-name","amethyst","/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"amethyst_animation\"","--cfg","feature=\"amethyst_assets\"","--cfg","feature=\"amethyst_audio\"","--cfg","feature=\"amethyst_config\"","--cfg","feature=\"amethyst_controls\"","--cfg","feature=\"amethyst_core\"","--cfg","feature=\"amethyst_input\"","--cfg","feature=\"amethyst_network\"","--cfg","feature=\"amethyst_renderer\"","--cfg","feature=\"amethyst_ui\"","--cfg","feature=\"amethyst_utils\"","--cfg","feature=\"nightly\"","-C","metadata=ab8d813791a17817","-C","extra-filename=-ab8d813791a17817","--out-dir","/Users/Kumar/personal/workspace/rust/operation-proxima/target/rls/debug/deps","-L","dependency=/Users/Kumar/personal/workspace/rust/operation-proxima/target/rls/debug/deps","--extern","amethyst_animation=/Users/Kumar/personal/workspace/rust/operation-proxima/target/rls/debug/deps/libamethyst_animation-56fc792e14ebaf5d.rmeta","--extern","amethyst_assets=/Users/Kumar/personal/workspace/rust/operation-proxima/target/rls/debug/deps/libamethyst_assets-6a1237efd4056537.rmeta","--extern","amethyst_audio=/Users/Kumar/personal/workspace/rust/operation-proxima/target/rls/debug/deps/libamethyst_audio-b373db6b409595f3.rmeta","--extern","amethyst_config=/Users/Kumar/personal/workspace/rust/operation-proxima/target/rls/debug/deps/libamethyst_config-ec98a32c585b4fa8.rmeta","--extern","amethyst_controls=/Users/Kumar/personal/workspace/rust/operation-proxima/target/rls/debug/deps/libamethyst_controls-1d522a3848251d68.rmeta","--extern","amethyst_core=/Users/Kumar/personal/workspace/rust/operation-proxima/target/rls/debug/deps/libamethyst_core-5284bdeb66bec338.rmeta","--extern","amethyst_derive=/Users/Kumar/personal/workspace/rust/operation-proxima/target/rls/debug/deps/libamethyst_derive-67d7e54706b61158.dylib","--extern","amethyst_input=/Users/Kumar/personal/workspace/rust/operation-proxima/target/rls/debug/deps/libamethyst_input-78787fae2a4535d9.rmeta","--extern","amethyst_locale=/Users/Kumar/personal/workspace/rust/operation-proxima/target/rls/debug/deps/libamethyst_locale-c50f40e838d0b93f.rmeta","--extern","amethyst_network=/Users/Kumar/personal/workspace/rust/operation-proxima/target/rls/debug/deps/libamethyst_network-d4d6139ca95119df.rmeta","--extern","amethyst_renderer=/Users/Kumar/personal/workspace/rust/operation-proxima/target/rls/debug/deps/libamethyst_renderer-7563dae516891798.rmeta","--extern","amethyst_ui=/Users/Kumar/personal/workspace/rust/operation-proxima/target/rls/debug/deps/libamethyst_ui-7960c946ec2c714d.rmeta","--extern","amethyst_utils=/Users/Kumar/personal/workspace/rust/operation-proxima/target/rls/debug/deps/libamethyst_utils-a6aae4a76a24e289.rmeta","--extern","crossbeam_channel=/Users/Kumar/personal/workspace/rust/operation-proxima/target/rls/debug/deps/libcrossbeam_channel-31bfa60fec2b76b8.rmeta","--extern","derivative=/Users/Kumar/personal/workspace/rust/operation-proxima/target/rls/debug/deps/libderivative-1cd3e66115774056.dylib","--extern","fern=/Users/Kumar/personal/workspace/rust/operation-proxima/target/rls/debug/deps/libfern-1968b25e57ce1e8b.rmeta","--extern","log=/Users/Kumar/personal/workspace/rust/operation-proxima/target/rls/debug/deps/liblog-0a97a9085b40b399.rmeta","--extern","rayon=/Users/Kumar/personal/workspace/rust/operation-proxima/target/rls/debug/deps/librayon-f6bf8dfbf7c1c19e.rmeta","--extern","rustc_version_runtime=/Users/Kumar/personal/workspace/rust/operation-proxima/target/rls/debug/deps/librustc_version_runtime-e4fdff8a7a17f51b.rmeta","--extern","serde=/Users/Kumar/personal/workspace/rust/operation-proxima/target/rls/debug/deps/libserde-48b0c7b6a5be35fd.rmeta","--extern","serde_derive=/Users/Kumar/personal/workspace/rust/operation-proxima/target/rls/debug/deps/libserde_derive-763575cdfe0af783.dylib","--extern","winit=/Users/Kumar/personal/workspace/rust/operation-proxima/target/rls/debug/deps/libwinit-c6d0baa716b8dfb0.rmeta","--cap-lints","allow","-L","native=/Users/Kumar/personal/workspace/rust/operation-proxima/target/rls/debug/build/backtrace-sys-207ecf06e1d8e63d/out","-L","native=/Users/Kumar/personal/workspace/rust/operation-proxima/target/rls/debug/build/minimp3-sys-e098679f733dcd36/out","--error-format=json","--sysroot","/Users/Kumar/.rustup/toolchains/nightly-2019-02-27-x86_64-apple-darwin"],"output":[47,85,115,101,114,115,47,75,117,109,97,114,47,112,101,114,115,111,110,97,108,47,119,111,114,107,115,112,97,99,101,47,114,117,115,116,47,111,112,101,114,97,116,105,111,110,45,112,114,111,120,105,109,97,47,116,97,114,103,101,116,47,114,108,115,47,100,101,98,117,103,47,100,101,112,115,47,108,105,98,97,109,101,116,104,121,115,116,45,97,98,56,100,56,49,51,55,57,49,97,49,55,56,49,55,46,114,109,101,116,97]},"prelude":{"crate_id":{"name":"amethyst","disambiguator":[3995234365349015178,1713811251983575399]},"crate_root":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src","external_crates":[{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[17365010580081952725,18206160307474953630]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[6760693024494354245,14002820984158080208]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[199464317358532175,14697293645914925506]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13558819658400235840,6800895293433658904]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[18425220944332119967,14239145101900690943]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10854247164472963508,11478657302719725741]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":7,"id":{"name":"rustc_demangle","disambiguator":[4168194895173621532,15234647754953002462]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":8,"id":{"name":"unwind","disambiguator":[12306654840912142307,10869972980572175885]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":9,"id":{"name":"backtrace_sys","disambiguator":[1531625639640313062,14514900902579754273]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":10,"id":{"name":"panic_unwind","disambiguator":[13209889598193010227,616765238597587583]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":11,"id":{"name":"amethyst_derive","disambiguator":[12752151823972050155,12218484229436125558]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":12,"id":{"name":"derivative","disambiguator":[10722131481831598316,797905810110983598]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":13,"id":{"name":"log","disambiguator":[7181445017016618232,10688353778865861944]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":14,"id":{"name":"cfg_if","disambiguator":[8428017428351255032,13632600684367634806]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/logger.rs","num":15,"id":{"name":"serde","disambiguator":[981439461511807069,17258384571547190005]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":16,"id":{"name":"serde_derive","disambiguator":[658740448506970560,9548512885115359140]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":17,"id":{"name":"amethyst_animation","disambiguator":[15929837798641830533,2883303853486939951]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":18,"id":{"name":"minterpolate","disambiguator":[16862142355763007500,14174243324359851119]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":19,"id":{"name":"mint","disambiguator":[10617984223410337910,12871664338151299289]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":20,"id":{"name":"num","disambiguator":[12198625216309049683,14291639745490443925]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":21,"id":{"name":"num_bigint","disambiguator":[8457057026895712812,14682292010372399833]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":22,"id":{"name":"num_integer","disambiguator":[1357259881513507470,12834655545669911151]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":23,"id":{"name":"num_traits","disambiguator":[11661258600980181624,3408761971977771538]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":24,"id":{"name":"num_complex","disambiguator":[10910211488695912553,610558272518370]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":25,"id":{"name":"num_iter","disambiguator":[9829586486196909392,5401910100419038724]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":26,"id":{"name":"num_rational","disambiguator":[3996095912684374942,13488818932739606974]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":27,"id":{"name":"amethyst_core","disambiguator":[2688942739395817880,10710400143397583276]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":28,"id":{"name":"error_chain","disambiguator":[14911261498490127566,5490504714781847878]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":29,"id":{"name":"backtrace","disambiguator":[13889336313340010258,6247624535332333807]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":30,"id":{"name":"libc","disambiguator":[2703259349667130902,12042406638146325142]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":31,"id":{"name":"rustc_demangle","disambiguator":[6360331683406002161,8427016446895447396]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":32,"id":{"name":"approx","disambiguator":[14594390049414328680,9039156212491258328]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":33,"id":{"name":"nalgebra","disambiguator":[9758277555740925167,7750589001941730168]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":34,"id":{"name":"generic_array","disambiguator":[7561278759951696628,924607077307558519]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":35,"id":{"name":"typenum","disambiguator":[12174415939765051584,18312836787222427910]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":36,"id":{"name":"matrixmultiply","disambiguator":[5404034386644247339,1250808675664081424]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":37,"id":{"name":"rawpointer","disambiguator":[11547590561825514690,12220801786680448118]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":38,"id":{"name":"rand","disambiguator":[17862476655068260341,13924484820373126680]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":39,"id":{"name":"rand_core","disambiguator":[3135301718310305142,15090421581954786214]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":40,"id":{"name":"rand_core","disambiguator":[3597129564267641701,5899009172178551573]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":41,"id":{"name":"alga","disambiguator":[42948927933797851,12770383319835117832]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":42,"id":{"name":"shred","disambiguator":[17649222471775575589,6652634375532887041]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":43,"id":{"name":"arrayvec","disambiguator":[10100321813570616869,17214766525115099071]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":44,"id":{"name":"fxhash","disambiguator":[9785272237910201430,12991487648654109095]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":45,"id":{"name":"byteorder","disambiguator":[5633574704660589010,1124758284593715500]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":46,"id":{"name":"mopa","disambiguator":[9834760194327584593,2069751431628163890]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/app.rs","num":47,"id":{"name":"rayon","disambiguator":[673595522434739685,14750040120881943826]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":48,"id":{"name":"rayon_core","disambiguator":[9812699966296362397,12178911589389533106]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":49,"id":{"name":"crossbeam_deque","disambiguator":[5341218249946477162,18228421548853618417]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":50,"id":{"name":"crossbeam_epoch","disambiguator":[6731967409836271626,15054482142809987834]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":51,"id":{"name":"nodrop","disambiguator":[2708311522677966739,5406444216533143574]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":52,"id":{"name":"crossbeam_utils","disambiguator":[2008720669855716753,5014003211720287491]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":53,"id":{"name":"lazy_static","disambiguator":[5522065544787785916,13327173104205784552]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":54,"id":{"name":"memoffset","disambiguator":[15249562182596042640,10337475170058500363]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":55,"id":{"name":"scopeguard","disambiguator":[18367847936342523916,17856272224824384718]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":56,"id":{"name":"num_cpus","disambiguator":[12880995655777911732,1737882874999537385]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":57,"id":{"name":"either","disambiguator":[7867466831161814912,8030271000223596351]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":58,"id":{"name":"smallvec","disambiguator":[10733091904720612378,14160148108052151551]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":59,"id":{"name":"shrev","disambiguator":[2790663122827583591,10311947744457329832]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":60,"id":{"name":"specs","disambiguator":[13831854712669772796,7647146940030017291]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":61,"id":{"name":"crossbeam","disambiguator":[17090885205971595976,18111427686235532709]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":62,"id":{"name":"crossbeam_channel","disambiguator":[17041044574036611599,15775218773734672408]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":63,"id":{"name":"crossbeam_epoch","disambiguator":[237740120750313442,11359131934145258885]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":64,"id":{"name":"crossbeam_utils","disambiguator":[2902954816066387191,4766983559772434753]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":65,"id":{"name":"crossbeam_utils","disambiguator":[15827932282516363150,9019940337044300554]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":66,"id":{"name":"parking_lot","disambiguator":[148815746447534527,1746079782183297785]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":67,"id":{"name":"lock_api","disambiguator":[12193149692478609224,10667628448985489298]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":68,"id":{"name":"owning_ref","disambiguator":[3166601931618651122,7520707719402454129]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":69,"id":{"name":"stable_deref_trait","disambiguator":[6540487299081823801,424652279763379516]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":70,"id":{"name":"parking_lot_core","disambiguator":[12331917579715522709,1680879910692558368]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":71,"id":{"name":"crossbeam_deque","disambiguator":[9226264006426423347,14054189082551432222]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":72,"id":{"name":"crossbeam_epoch","disambiguator":[3418091520617824527,4300722748670568860]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":73,"id":{"name":"fnv","disambiguator":[7758264454534985807,7201823991916608355]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":74,"id":{"name":"hibitset","disambiguator":[17097374274343031941,2946697345903294275]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":75,"id":{"name":"atom","disambiguator":[13423142934771749731,4610493859238226395]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":76,"id":{"name":"nonzero_signed","disambiguator":[5490969274583929966,3510329917639178847]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":77,"id":{"name":"tuple_utils","disambiguator":[8065717734727576455,14156873316110925816]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":78,"id":{"name":"futures","disambiguator":[12790291843388985923,10182004181577351127]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":79,"id":{"name":"specs_hierarchy","disambiguator":[1498736943967861831,12105310747705482771]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":80,"id":{"name":"shred_derive","disambiguator":[12241746485629211472,5898723450154762544]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":81,"id":{"name":"amethyst_assets","disambiguator":[9930683662668584459,1688980618439499799]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":82,"id":{"name":"ron","disambiguator":[17927205753243819048,8912736582221325172]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":83,"id":{"name":"base64","disambiguator":[16437810846630462067,7538273510525089379]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":84,"id":{"name":"bitflags","disambiguator":[7031036529776660054,15049359064997755133]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":85,"id":{"name":"amethyst_renderer","disambiguator":[7929429306743762364,14106234504173908791]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":86,"id":{"name":"gfx_macros","disambiguator":[1548772710651324479,9355480497574988502]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":87,"id":{"name":"gfx","disambiguator":[1410966498152531987,9032390876527358257]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":88,"id":{"name":"draw_state","disambiguator":[15599938553924472758,5612363017366467522]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":89,"id":{"name":"gfx_core","disambiguator":[16743558088145758383,8496155874352898669]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":90,"id":{"name":"wavefront_obj","disambiguator":[13835334455134080287,13318322158777960745]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":91,"id":{"name":"winit","disambiguator":[310990590377908715,1679344067269601519]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":92,"id":{"name":"objc","disambiguator":[4761549618425253994,13971426658902094359]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":93,"id":{"name":"malloc_buf","disambiguator":[4053949291556387277,11784123301433309937]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":94,"id":{"name":"cocoa","disambiguator":[11771802462674129632,11947382149053660937]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":95,"id":{"name":"block","disambiguator":[9432596809334761745,14223533195586980046]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":96,"id":{"name":"core_foundation","disambiguator":[10530035209096148803,11734089086046269424]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":97,"id":{"name":"core_foundation_sys","disambiguator":[12348050160590499492,4503134378532681257]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":98,"id":{"name":"core_graphics","disambiguator":[8203020944100475502,5229376601668360867]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":99,"id":{"name":"foreign_types","disambiguator":[14206490839303138326,16990653438927561392]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":100,"id":{"name":"foreign_types_shared","disambiguator":[8950394649228317289,11060715514340006037]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":101,"id":{"name":"gfx_device_gl","disambiguator":[16072551456662043741,13360310472075625529]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":102,"id":{"name":"gfx_gl","disambiguator":[1917631650132198419,11548218754315839989]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":103,"id":{"name":"gfx_window_glutin","disambiguator":[3540376078163470175,192628104223080289]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":104,"id":{"name":"glutin","disambiguator":[17489460061804516165,9896461116404554085]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":105,"id":{"name":"cgl","disambiguator":[5503445149283045267,1483301746398189915]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":106,"id":{"name":"gleam","disambiguator":[18064610164276338039,14765486891682471421]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":107,"id":{"name":"glsl_layout","disambiguator":[17140938235371835518,5870001497083025699]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":108,"id":{"name":"glsl_layout_derive","disambiguator":[2420283539889353805,16548182826974455237]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":109,"id":{"name":"hetseq","disambiguator":[8440486056713964417,8208854235309324483]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":110,"id":{"name":"image","disambiguator":[13907921216013756267,14157332021084948965]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":111,"id":{"name":"lzw","disambiguator":[2850236714223711313,10856801979468523170]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":112,"id":{"name":"gif","disambiguator":[12261597854687205123,10605834334668045906]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":113,"id":{"name":"color_quant","disambiguator":[10417590590195203403,14715560643465576818]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":114,"id":{"name":"scoped_threadpool","disambiguator":[10811987095222363739,7080197151804039787]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":115,"id":{"name":"jpeg_decoder","disambiguator":[16900575484055062650,8537215505220428901]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":116,"id":{"name":"png","disambiguator":[12664414044428013408,1902305037592904773]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":117,"id":{"name":"inflate","disambiguator":[16850977335636824416,17718327826322019661]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":118,"id":{"name":"adler32","disambiguator":[3900896422804133549,14200783347394299545]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":119,"id":{"name":"deflate","disambiguator":[14809679018019280072,14281665724093921570]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":120,"id":{"name":"tiff","disambiguator":[14197661235249403374,7832534716974239756]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":121,"id":{"name":"num_derive","disambiguator":[17049813908376564685,3732035461530305182]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":122,"id":{"name":"genmesh","disambiguator":[5897561637571665511,1845389100547339637]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":123,"id":{"name":"cgmath","disambiguator":[15867806402503687973,15344148778880611983]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":124,"id":{"name":"approx","disambiguator":[10221892887147803912,18023320102204549013]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":125,"id":{"name":"rand","disambiguator":[4926504791379658763,17451726717770589551]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":126,"id":{"name":"num_traits","disambiguator":[3154384271517857665,17960209895910095969]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":127,"id":{"name":"itertools","disambiguator":[11702131650629788490,17492218558310914122]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":128,"id":{"name":"amethyst_audio","disambiguator":[12472339062745934111,10733493363975225667]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":129,"id":{"name":"cpal","disambiguator":[9380134531302958075,18112503641994579185]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":130,"id":{"name":"coreaudio","disambiguator":[14521418500460920044,1226875268268369650]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":131,"id":{"name":"coreaudio_sys","disambiguator":[1732847065335879947,7378108558704416178]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":132,"id":{"name":"core_foundation_sys","disambiguator":[5967676497449004988,5282827127272030097]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":133,"id":{"name":"rodio","disambiguator":[15126229911237034350,43355600613475723]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":134,"id":{"name":"cgmath","disambiguator":[6913641373625372271,8178796103606305692]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":135,"id":{"name":"rand","disambiguator":[1736133162542173632,2275431138464414235]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":136,"id":{"name":"claxon","disambiguator":[16247547577956655477,12116919936340673572]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":137,"id":{"name":"hound","disambiguator":[13918832576655723635,7615940679508382690]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":138,"id":{"name":"lewton","disambiguator":[15616692910299266090,11445561996907953479]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":139,"id":{"name":"ogg","disambiguator":[16073148601722183936,11504792666233045654]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":140,"id":{"name":"minimp3","disambiguator":[13542273577430218060,12029624666950398240]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":141,"id":{"name":"minimp3_sys","disambiguator":[4413848751820793139,17780558503043208595]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":142,"id":{"name":"slice_deque","disambiguator":[13519918693202102463,14615991321910276640]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":143,"id":{"name":"mach","disambiguator":[18215900859942752365,2469237481465937862]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":144,"id":{"name":"amethyst_config","disambiguator":[12424051275733499987,16389495978924343796]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":145,"id":{"name":"amethyst_controls","disambiguator":[10689014865060435048,10760452109385651047]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":146,"id":{"name":"amethyst_input","disambiguator":[11087242444568618119,4658117656693914078]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":147,"id":{"name":"amethyst_locale","disambiguator":[8610001351810136651,7390817758188433819]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":148,"id":{"name":"fluent","disambiguator":[983711213730026403,2582472696624230854]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":149,"id":{"name":"failure","disambiguator":[5019123101385672946,10559419110661511078]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":150,"id":{"name":"failure_derive","disambiguator":[12079121176643720010,9328090109780009636]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":151,"id":{"name":"fluent_locale","disambiguator":[731178823095471156,6085013719707744819]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":152,"id":{"name":"fluent_syntax","disambiguator":[7812236173736492999,7310377224668135256]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":153,"id":{"name":"annotate_snippets","disambiguator":[8616216500390152247,4881124844693464237]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":154,"id":{"name":"ansi_term","disambiguator":[18051358979684262237,8240188325059982972]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":155,"id":{"name":"intl_pluralrules","disambiguator":[4692323222337278287,3023387814147874120]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":156,"id":{"name":"matches","disambiguator":[14387951777955160798,9751465056234990838]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":157,"id":{"name":"phf","disambiguator":[13337718512729125606,14729034838669147476]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":158,"id":{"name":"phf_shared","disambiguator":[10768618239271964499,14378029670003692905]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":159,"id":{"name":"siphasher","disambiguator":[2160740913281005835,7224764806604065400]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":160,"id":{"name":"amethyst_network","disambiguator":[4786031687301222918,10657394684574542172]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":161,"id":{"name":"uuid","disambiguator":[14143720176297101359,11691362918754605676]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":162,"id":{"name":"rand","disambiguator":[1503959283824215342,15918200314398416335]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":163,"id":{"name":"rand_jitter","disambiguator":[10424281764077092364,6746731800193303545]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":164,"id":{"name":"rand_os","disambiguator":[16726873103742217967,2987700325086621941]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":165,"id":{"name":"rand_isaac","disambiguator":[13114106716728966917,9670923926761255249]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":166,"id":{"name":"rand_chacha","disambiguator":[16740064803347675152,6044260351313172595]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":167,"id":{"name":"rand_hc","disambiguator":[2278271408504491708,1609772580819675199]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":168,"id":{"name":"rand_pcg","disambiguator":[1806760263767745689,14918770694034529548]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":169,"id":{"name":"rand_xorshift","disambiguator":[876733880138813552,11893860866015657416]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":170,"id":{"name":"laminar","disambiguator":[10827261383222730122,990787999787223520]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":171,"id":{"name":"bincode","disambiguator":[18409190179881467619,11598480607626108702]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":172,"id":{"name":"crc","disambiguator":[12669301990244810948,18284701557612041739]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":173,"id":{"name":"amethyst_ui","disambiguator":[14631573624665350551,9438284994572754115]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":174,"id":{"name":"clipboard","disambiguator":[10190895402866968419,4291870659191613405]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":175,"id":{"name":"objc_id","disambiguator":[16956009532157830245,5946631118758460155]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":176,"id":{"name":"objc_foundation","disambiguator":[14712739609966672145,3113925246283859162]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":177,"id":{"name":"gfx_glyph","disambiguator":[14688245973478868356,183540387135280270]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":178,"id":{"name":"glyph_brush","disambiguator":[15649299769667437312,13886898286134339178]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":179,"id":{"name":"rusttype","disambiguator":[16863474890698872767,7010661695522827226]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":180,"id":{"name":"ordered_float","disambiguator":[7798006252548514517,14940144921702566911]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":181,"id":{"name":"linked_hash_map","disambiguator":[3747732116343956891,8035830989628354920]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":182,"id":{"name":"rustc_hash","disambiguator":[4786700296657886300,3198581485759698632]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":183,"id":{"name":"crossbeam_deque","disambiguator":[15991290301585514988,15082419215124650270]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":184,"id":{"name":"crossbeam_epoch","disambiguator":[2742812101291490232,5680530793403548921]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":185,"id":{"name":"stb_truetype","disambiguator":[10093408574476859369,1226000955349763727]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":186,"id":{"name":"hashbrown","disambiguator":[10426719140552281973,11552893384555819309]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":187,"id":{"name":"glyph_brush_layout","disambiguator":[1527648983684663919,1943173158758719616]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":188,"id":{"name":"xi_unicode","disambiguator":[3462738085277704665,18346178813464586415]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":189,"id":{"name":"twox_hash","disambiguator":[15202826064089775685,12676665855497521994]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":190,"id":{"name":"unicode_normalization","disambiguator":[17276073284038217343,10987688320757645448]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":191,"id":{"name":"unicode_segmentation","disambiguator":[3608623810337231910,11821320817201687175]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":192,"id":{"name":"font_kit","disambiguator":[5843917911859451903,13602806949688714868]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":193,"id":{"name":"dirs","disambiguator":[9376206408025161244,14269815228954139486]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":194,"id":{"name":"euclid","disambiguator":[3119000872072569069,14219903543265371716]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":195,"id":{"name":"euclid_macros","disambiguator":[14853751009846187764,16066078616758062316]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":196,"id":{"name":"float_ord","disambiguator":[8172058273225793024,1921520440036145881]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":197,"id":{"name":"lyon_path","disambiguator":[15117918163910209489,1468746452936901910]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":198,"id":{"name":"lyon_geom","disambiguator":[2160149825299557887,13084842208934777401]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":199,"id":{"name":"memmap","disambiguator":[11154354510357979846,12649359685007944424]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":200,"id":{"name":"walkdir","disambiguator":[17349482061104140928,2042583151868963532]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":201,"id":{"name":"same_file","disambiguator":[10370575176483730886,10100813912663297913]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":202,"id":{"name":"core_text","disambiguator":[15229207944422890514,5110770064826779862]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":203,"id":{"name":"amethyst_utils","disambiguator":[7202685510666280385,17539892872360418322]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":204,"id":{"name":"fern","disambiguator":[8669989853550551335,3243528969398579945]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":205,"id":{"name":"colored","disambiguator":[12038975632650133359,4734969362195428853]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":206,"id":{"name":"rustc_version_runtime","disambiguator":[14426745669938097237,6783498382900869568]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":207,"id":{"name":"rustc_version","disambiguator":[11591766611844623992,9158498925939820509]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":208,"id":{"name":"semver","disambiguator":[6782948781029911039,881476574635107869]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","num":209,"id":{"name":"semver_parser","disambiguator":[16829598318485911132,9139407629487474873]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/callback_queue.rs","num":210,"id":{"name":"crossbeam_channel","disambiguator":[8492016596732073885,1632806404666518399]}}],"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":3411,"line_start":1,"line_end":115,"column_start":1,"column_end":17}},"imports":[{"kind":"Use","ref_id":{"krate":17,"index":0},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2086,"byte_end":2104,"line_start":63,"line_end":63,"column_start":9,"column_end":27},"alias_span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2108,"byte_end":2117,"line_start":63,"line_end":63,"column_start":31,"column_end":40},"name":"animation","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":81,"index":0},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2127,"byte_end":2142,"line_start":64,"line_end":64,"column_start":9,"column_end":24},"alias_span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2146,"byte_end":2152,"line_start":64,"line_end":64,"column_start":28,"column_end":34},"name":"assets","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":128,"index":0},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2162,"byte_end":2176,"line_start":65,"line_end":65,"column_start":9,"column_end":23},"alias_span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2180,"byte_end":2185,"line_start":65,"line_end":65,"column_start":27,"column_end":32},"name":"audio","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":144,"index":0},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2195,"byte_end":2210,"line_start":66,"line_end":66,"column_start":9,"column_end":24},"alias_span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2214,"byte_end":2220,"line_start":66,"line_end":66,"column_start":28,"column_end":34},"name":"config","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":145,"index":0},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2230,"byte_end":2247,"line_start":67,"line_end":67,"column_start":9,"column_end":26},"alias_span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2251,"byte_end":2259,"line_start":67,"line_end":67,"column_start":30,"column_end":38},"name":"controls","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":27,"index":0},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2269,"byte_end":2282,"line_start":68,"line_end":68,"column_start":9,"column_end":22},"alias_span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2286,"byte_end":2290,"line_start":68,"line_end":68,"column_start":26,"column_end":30},"name":"core","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":146,"index":0},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2357,"byte_end":2371,"line_start":71,"line_end":71,"column_start":9,"column_end":23},"alias_span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2375,"byte_end":2380,"line_start":71,"line_end":71,"column_start":27,"column_end":32},"name":"input","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":147,"index":0},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2390,"byte_end":2405,"line_start":72,"line_end":72,"column_start":9,"column_end":24},"alias_span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2409,"byte_end":2415,"line_start":72,"line_end":72,"column_start":28,"column_end":34},"name":"locale","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":160,"index":0},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2425,"byte_end":2441,"line_start":73,"line_end":73,"column_start":9,"column_end":25},"alias_span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2445,"byte_end":2452,"line_start":73,"line_end":73,"column_start":29,"column_end":36},"name":"network","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":85,"index":0},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2462,"byte_end":2479,"line_start":74,"line_end":74,"column_start":9,"column_end":26},"alias_span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2483,"byte_end":2491,"line_start":74,"line_end":74,"column_start":30,"column_end":38},"name":"renderer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":173,"index":0},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2501,"byte_end":2512,"line_start":75,"line_end":75,"column_start":9,"column_end":20},"alias_span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2516,"byte_end":2518,"line_start":75,"line_end":75,"column_start":24,"column_end":26},"name":"ui","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":203,"index":0},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2528,"byte_end":2542,"line_start":76,"line_end":76,"column_start":9,"column_end":23},"alias_span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2546,"byte_end":2551,"line_start":76,"line_end":76,"column_start":27,"column_end":32},"name":"utils","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":91,"index":0},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2561,"byte_end":2566,"line_start":77,"line_end":77,"column_start":9,"column_end":14},"alias_span":null,"name":"winit","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":42,"index":0},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2739,"byte_end":2744,"line_start":89,"line_end":89,"column_start":23,"column_end":28},"alias_span":null,"name":"shred","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":59,"index":0},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2746,"byte_end":2751,"line_start":89,"line_end":89,"column_start":30,"column_end":35},"alias_span":null,"name":"shrev","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":60,"index":0},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2753,"byte_end":2758,"line_start":89,"line_end":89,"column_start":37,"column_end":42},"alias_span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2762,"byte_end":2765,"line_start":89,"line_end":89,"column_start":46,"column_end":49},"name":"ecs","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":280},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2795,"byte_end":2806,"line_start":92,"line_end":92,"column_start":11,"column_end":22},"alias_span":null,"name":"Application","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":300},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2808,"byte_end":2826,"line_start":92,"line_end":92,"column_start":24,"column_end":42},"alias_span":null,"name":"ApplicationBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":710},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2828,"byte_end":2843,"line_start":92,"line_end":92,"column_start":44,"column_end":59},"alias_span":null,"name":"CoreApplication","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":334},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2867,"byte_end":2875,"line_start":93,"line_end":93,"column_start":22,"column_end":30},"alias_span":null,"name":"Callback","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":336},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2877,"byte_end":2890,"line_start":93,"line_end":93,"column_start":32,"column_end":45},"alias_span":null,"name":"CallbackQueue","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":716},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2905,"byte_end":2910,"line_start":94,"line_end":94,"column_start":13,"column_end":18},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":374},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2912,"byte_end":2918,"line_start":94,"line_end":94,"column_start":20,"column_end":26},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":428},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2937,"byte_end":2945,"line_start":95,"line_end":95,"column_start":17,"column_end":25},"alias_span":null,"name":"DataInit","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":432},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2947,"byte_end":2955,"line_start":95,"line_end":95,"column_start":27,"column_end":35},"alias_span":null,"name":"GameData","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":440},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2957,"byte_end":2972,"line_start":95,"line_end":95,"column_start":37,"column_end":52},"alias_span":null,"name":"GameDataBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":516},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2988,"byte_end":3000,"line_start":96,"line_end":96,"column_start":14,"column_end":26},"alias_span":null,"name":"start_logger","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":13,"index":432},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3002,"byte_end":3013,"line_start":96,"line_end":96,"column_start":28,"column_end":39},"alias_span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3017,"byte_end":3031,"line_start":96,"line_end":96,"column_start":43,"column_end":57},"name":"LogLevelFilter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":504},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3033,"byte_end":3039,"line_start":96,"line_end":96,"column_start":59,"column_end":65},"alias_span":null,"name":"Logger","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":794},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3041,"byte_end":3053,"line_start":96,"line_end":96,"column_start":67,"column_end":79},"alias_span":null,"name":"LoggerConfig","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":722},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3055,"byte_end":3064,"line_start":96,"line_end":96,"column_start":81,"column_end":90},"alias_span":null,"name":"StdoutLog","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":580},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3088,"byte_end":3098,"line_start":98,"line_end":98,"column_start":9,"column_end":19},"alias_span":null,"name":"EmptyState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":556},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3100,"byte_end":3110,"line_start":98,"line_end":98,"column_start":21,"column_end":31},"alias_span":null,"name":"EmptyTrans","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":620},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3112,"byte_end":3123,"line_start":98,"line_end":98,"column_start":33,"column_end":44},"alias_span":null,"name":"SimpleState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":558},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3125,"byte_end":3136,"line_start":98,"line_end":98,"column_start":46,"column_end":57},"alias_span":null,"name":"SimpleTrans","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":560},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3138,"byte_end":3143,"line_start":98,"line_end":98,"column_start":59,"column_end":64},"alias_span":null,"name":"State","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":546},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3145,"byte_end":3154,"line_start":98,"line_end":98,"column_start":66,"column_end":75},"alias_span":null,"name":"StateData","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":860},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3156,"byte_end":3168,"line_start":98,"line_end":98,"column_start":77,"column_end":89},"alias_span":null,"name":"StateMachine","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":552},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3170,"byte_end":3175,"line_start":98,"line_end":98,"column_start":91,"column_end":96},"alias_span":null,"name":"Trans","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":554},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3185,"byte_end":3195,"line_start":99,"line_end":99,"column_start":9,"column_end":19},"alias_span":null,"name":"TransEvent","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":866},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3222,"byte_end":3232,"line_start":101,"line_end":101,"column_start":19,"column_end":29},"alias_span":null,"name":"StateEvent","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":878},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3234,"byte_end":3250,"line_start":101,"line_end":101,"column_start":31,"column_end":47},"alias_span":null,"name":"StateEventReader","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3295,"byte_end":3296,"line_start":105,"line_end":105,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":280},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,112,114,101,108,117,100,101,46,114,115],"byte_start":3516,"byte_end":3527,"line_start":4,"line_end":4,"column_start":11,"column_end":22},"alias_span":null,"name":"Application","value":"","parent":{"krate":0,"index":122}},{"kind":"Use","ref_id":{"krate":0,"index":300},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,112,114,101,108,117,100,101,46,114,115],"byte_start":3529,"byte_end":3547,"line_start":4,"line_end":4,"column_start":24,"column_end":42},"alias_span":null,"name":"ApplicationBuilder","value":"","parent":{"krate":0,"index":122}},{"kind":"Use","ref_id":{"krate":0,"index":710},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,112,114,101,108,117,100,101,46,114,115],"byte_start":3549,"byte_end":3564,"line_start":4,"line_end":4,"column_start":44,"column_end":59},"alias_span":null,"name":"CoreApplication","value":"","parent":{"krate":0,"index":122}},{"kind":"Use","ref_id":{"krate":0,"index":334},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,112,114,101,108,117,100,101,46,114,115],"byte_start":3588,"byte_end":3596,"line_start":5,"line_end":5,"column_start":22,"column_end":30},"alias_span":null,"name":"Callback","value":"","parent":{"krate":0,"index":122}},{"kind":"Use","ref_id":{"krate":0,"index":336},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,112,114,101,108,117,100,101,46,114,115],"byte_start":3598,"byte_end":3611,"line_start":5,"line_end":5,"column_start":32,"column_end":45},"alias_span":null,"name":"CallbackQueue","value":"","parent":{"krate":0,"index":122}},{"kind":"Use","ref_id":{"krate":144,"index":58},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,112,114,101,108,117,100,101,46,114,115],"byte_start":3626,"byte_end":3632,"line_start":6,"line_end":6,"column_start":13,"column_end":19},"alias_span":null,"name":"Config","value":"","parent":{"krate":0,"index":122}},{"kind":"Use","ref_id":{"krate":27,"index":192},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,112,114,101,108,117,100,101,46,114,115],"byte_start":3645,"byte_end":3654,"line_start":7,"line_end":7,"column_start":12,"column_end":21},"alias_span":null,"name":"SystemExt","value":"","parent":{"krate":0,"index":122}},{"kind":"Use","ref_id":{"krate":27,"index":166},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,112,114,101,108,117,100,101,46,114,115],"byte_start":3656,"byte_end":3665,"line_start":7,"line_end":7,"column_start":23,"column_end":32},"alias_span":null,"name":"WithNamed","value":"","parent":{"krate":0,"index":122}},{"kind":"Use","ref_id":{"krate":60,"index":1664},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,112,114,101,108,117,100,101,46,114,115],"byte_start":3687,"byte_end":3694,"line_start":8,"line_end":8,"column_start":20,"column_end":27},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":122}},{"kind":"Use","ref_id":{"krate":60,"index":1682},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,112,114,101,108,117,100,101,46,114,115],"byte_start":3696,"byte_end":3701,"line_start":8,"line_end":8,"column_start":29,"column_end":34},"alias_span":null,"name":"World","value":"","parent":{"krate":0,"index":122}},{"kind":"Use","ref_id":{"krate":0,"index":428},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,112,114,101,108,117,100,101,46,114,115],"byte_start":3720,"byte_end":3728,"line_start":9,"line_end":9,"column_start":17,"column_end":25},"alias_span":null,"name":"DataInit","value":"","parent":{"krate":0,"index":122}},{"kind":"Use","ref_id":{"krate":0,"index":432},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,112,114,101,108,117,100,101,46,114,115],"byte_start":3730,"byte_end":3738,"line_start":9,"line_end":9,"column_start":27,"column_end":35},"alias_span":null,"name":"GameData","value":"","parent":{"krate":0,"index":122}},{"kind":"Use","ref_id":{"krate":0,"index":440},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,112,114,101,108,117,100,101,46,114,115],"byte_start":3740,"byte_end":3755,"line_start":9,"line_end":9,"column_start":37,"column_end":52},"alias_span":null,"name":"GameDataBuilder","value":"","parent":{"krate":0,"index":122}},{"kind":"Use","ref_id":{"krate":0,"index":580},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,112,114,101,108,117,100,101,46,114,115],"byte_start":3779,"byte_end":3789,"line_start":11,"line_end":11,"column_start":9,"column_end":19},"alias_span":null,"name":"EmptyState","value":"","parent":{"krate":0,"index":122}},{"kind":"Use","ref_id":{"krate":0,"index":556},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,112,114,101,108,117,100,101,46,114,115],"byte_start":3791,"byte_end":3801,"line_start":11,"line_end":11,"column_start":21,"column_end":31},"alias_span":null,"name":"EmptyTrans","value":"","parent":{"krate":0,"index":122}},{"kind":"Use","ref_id":{"krate":0,"index":620},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,112,114,101,108,117,100,101,46,114,115],"byte_start":3803,"byte_end":3814,"line_start":11,"line_end":11,"column_start":33,"column_end":44},"alias_span":null,"name":"SimpleState","value":"","parent":{"krate":0,"index":122}},{"kind":"Use","ref_id":{"krate":0,"index":558},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,112,114,101,108,117,100,101,46,114,115],"byte_start":3816,"byte_end":3827,"line_start":11,"line_end":11,"column_start":46,"column_end":57},"alias_span":null,"name":"SimpleTrans","value":"","parent":{"krate":0,"index":122}},{"kind":"Use","ref_id":{"krate":0,"index":560},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,112,114,101,108,117,100,101,46,114,115],"byte_start":3829,"byte_end":3834,"line_start":11,"line_end":11,"column_start":59,"column_end":64},"alias_span":null,"name":"State","value":"","parent":{"krate":0,"index":122}},{"kind":"Use","ref_id":{"krate":0,"index":546},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,112,114,101,108,117,100,101,46,114,115],"byte_start":3836,"byte_end":3845,"line_start":11,"line_end":11,"column_start":66,"column_end":75},"alias_span":null,"name":"StateData","value":"","parent":{"krate":0,"index":122}},{"kind":"Use","ref_id":{"krate":0,"index":552},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,112,114,101,108,117,100,101,46,114,115],"byte_start":3847,"byte_end":3852,"line_start":11,"line_end":11,"column_start":77,"column_end":82},"alias_span":null,"name":"Trans","value":"","parent":{"krate":0,"index":122}},{"kind":"Use","ref_id":{"krate":0,"index":554},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,112,114,101,108,117,100,101,46,114,115],"byte_start":3854,"byte_end":3864,"line_start":11,"line_end":11,"column_start":84,"column_end":94},"alias_span":null,"name":"TransEvent","value":"","parent":{"krate":0,"index":122}},{"kind":"Use","ref_id":{"krate":0,"index":866},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,112,114,101,108,117,100,101,46,114,115],"byte_start":3890,"byte_end":3900,"line_start":13,"line_end":13,"column_start":18,"column_end":28},"alias_span":null,"name":"StateEvent","value":"","parent":{"krate":0,"index":122}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":3411,"line_start":1,"line_end":115,"column_start":1,"column_end":17},"name":"","qualname":"::","value":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":16},{"krate":0,"index":18},{"krate":0,"index":20},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":26},{"krate":0,"index":28},{"krate":0,"index":30},{"krate":0,"index":32},{"krate":0,"index":34},{"krate":0,"index":36},{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":42},{"krate":0,"index":44},{"krate":0,"index":52},{"krate":0,"index":120},{"krate":0,"index":122},{"krate":0,"index":182},{"krate":0,"index":324},{"krate":0,"index":348},{"krate":0,"index":398},{"krate":0,"index":484},{"krate":0,"index":522},{"krate":0,"index":684}],"decl_id":null,"docs":" Amethyst is a free and open source game engine written in idiomatic\n [Rust][rs] for building video games and interactive multimedia applications.\n The source code is available for download on [GitHub][gh]. See the\n [online book][bk] for a complete guide to using Amethyst.","sig":null,"attributes":[{"value":"warn(missing_docs, rust_2018_idioms, rust_2018_compatibility)","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1934,"byte_end":1999,"line_start":57,"line_end":57,"column_start":1,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":122},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,112,114,101,108,117,100,101,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.10.0/src/prelude.rs","parent":null,"children":[{"krate":0,"index":124}],"decl_id":null,"docs":" Contains common types that can be glob-imported (`*`) for convenience.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":710},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,97,112,112,46,114,115],"byte_start":5315,"byte_end":5330,"line_start":46,"line_end":46,"column_start":12,"column_end":27},"name":"CoreApplication","qualname":"::app::CoreApplication","value":"CoreApplication {  }","parent":null,"children":[{"krate":0,"index":219},{"krate":0,"index":221},{"krate":0,"index":223},{"krate":0,"index":225},{"krate":0,"index":227},{"krate":0,"index":229},{"krate":0,"index":231},{"krate":0,"index":233}],"decl_id":null,"docs":" `CoreApplication` is the application implementation for the game engine. This is fully generic\n over the state type and event type.","sig":null,"attributes":[{"value":"derivative(Debug)","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,97,112,112,46,114,115],"byte_start":5283,"byte_end":5303,"line_start":45,"line_end":45,"column_start":1,"column_end":21}}]},{"kind":"Type","id":{"krate":0,"index":280},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,97,112,112,46,114,115],"byte_start":8167,"byte_end":8178,"line_start":137,"line_end":137,"column_start":10,"column_end":21},"name":"Application","qualname":"::app::Application","value":"CoreApplication<'a, T, StateEvent, StateEventReader>","parent":null,"children":[],"decl_id":null,"docs":" An Application is the root object of the game engine. It binds the OS\n event loop, state machines, timers and other core components in a central place.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,97,112,112,46,114,115],"byte_start":10146,"byte_end":10149,"line_start":192,"line_end":192,"column_start":12,"column_end":15},"name":"new","qualname":"<CoreApplication>::new","value":"fn <P, S, I> (path: P, initial_state: S, init: I) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Application with the given initial game state.\n This will create and allocate all the needed resources for\n the event loop of the game engine. It is a shortcut for convenience\n if you need more control over how the engine is configured you should\n be using [build](struct.Application.html#method.build) instead.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,97,112,112,46,114,115],"byte_start":10658,"byte_end":10663,"line_start":207,"line_end":207,"column_start":12,"column_end":17},"name":"build","qualname":"<CoreApplication>::build","value":"fn <P, S> (path: P, initial_state: S) -> Result<ApplicationBuilder<S, T, E, R>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new ApplicationBuilder with the given initial game state.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,97,112,112,46,114,115],"byte_start":11356,"byte_end":11359,"line_start":225,"line_end":225,"column_start":12,"column_end":15},"name":"run","qualname":"<CoreApplication>::run","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Run the gameloop until the game state indicates that the game is no\n longer running. This is done via the `State` returning `Trans::Quit` or\n `Trans::Pop` on the last state in from the stack. See full\n documentation on this in [State](trait.State.html) documentation.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":300},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,97,112,112,46,114,115],"byte_start":17271,"byte_end":17289,"line_start":401,"line_end":401,"column_start":12,"column_end":30},"name":"ApplicationBuilder","qualname":"::app::ApplicationBuilder","value":"ApplicationBuilder { world }","parent":null,"children":[{"krate":0,"index":63},{"krate":0,"index":65},{"krate":0,"index":67},{"krate":0,"index":69}],"decl_id":null,"docs":" `ApplicationBuilder` is an interface that allows for creation of an\n [`Application`](struct.Application.html)\n using a custom set of configuration. This is the normal way an\n [`Application`](struct.Application.html)\n object is created.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":65},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,97,112,112,46,114,115],"byte_start":17410,"byte_end":17415,"line_start":405,"line_end":405,"column_start":9,"column_end":14},"name":"world","qualname":"::app::ApplicationBuilder::world","value":"specs::world::World","parent":{"krate":0,"index":300},"children":[],"decl_id":null,"docs":" Used by bundles to access the world directly\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,97,112,112,46,114,115],"byte_start":19974,"byte_end":19977,"line_start":474,"line_end":474,"column_start":12,"column_end":15},"name":"new","qualname":"<ApplicationBuilder<S, T, E, X>>::new","value":"fn <P> (path: P, initial_state: S) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [ApplicationBuilder](struct.ApplicationBuilder.html) instance\n that wraps the initial_state. This is the more verbose way of initializing\n your application if you require specific configuration details to be changed\n away from the default.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,97,112,112,46,114,115],"byte_start":24040,"byte_end":24048,"line_start":578,"line_end":578,"column_start":12,"column_end":20},"name":"register","qualname":"<ApplicationBuilder<S, T, E, X>>::register","value":"fn <C> (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Registers a component into the entity-component-system. This method\n takes no options other than the component type which is defined\n using a 'turbofish'. See the example for what this looks like.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,97,112,112,46,114,115],"byte_start":25650,"byte_end":25663,"line_start":631,"line_end":631,"column_start":12,"column_end":25},"name":"with_resource","qualname":"<ApplicationBuilder<S, T, E, X>>::with_resource","value":"fn <R> (mut self, resource: R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds the supplied ECS resource which can be accessed from game systems.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,97,112,112,46,114,115],"byte_start":27874,"byte_end":27885,"line_start":688,"line_end":688,"column_start":12,"column_end":23},"name":"with_source","qualname":"<ApplicationBuilder<S, T, E, X>>::with_source","value":"fn <I, O> (self, name: I, store: O) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Register an asset store with the loader logic of the Application.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,97,112,112,46,114,115],"byte_start":28473,"byte_end":28489,"line_start":710,"line_end":710,"column_start":12,"column_end":28},"name":"with_frame_limit","qualname":"<ApplicationBuilder<S, T, E, X>>::with_frame_limit","value":"fn (mut self, strategy: FrameRateLimitStrategy, max_fps: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum frames per second of this game.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,97,112,112,46,114,115],"byte_start":28944,"byte_end":28967,"line_start":725,"line_end":725,"column_start":12,"column_end":35},"name":"with_frame_limit_config","qualname":"<ApplicationBuilder<S, T, E, X>>::with_frame_limit_config","value":"fn (mut self, config: FrameRateLimitConfig) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum frames per second of this game, based on the given config.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,97,112,112,46,114,115],"byte_start":29404,"byte_end":29426,"line_start":739,"line_end":739,"column_start":12,"column_end":34},"name":"with_fixed_step_length","qualname":"<ApplicationBuilder<S, T, E, X>>::with_fixed_step_length","value":"fn (self, duration: Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the duration between fixed updates, defaults to one sixtieth of a second.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,97,112,112,46,114,115],"byte_start":30003,"byte_end":30022,"line_start":755,"line_end":755,"column_start":12,"column_end":31},"name":"ignore_window_close","qualname":"<ApplicationBuilder<S, T, E, X>>::ignore_window_close","value":"fn (mut self, ignore: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Tells the resulting application window to ignore close events if ignore is true.\n This will make your game window unresponsive to operating system close commands.\n Use with caution.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,97,112,112,46,114,115],"byte_start":30854,"byte_end":30859,"line_start":780,"line_end":780,"column_start":12,"column_end":17},"name":"build","qualname":"<ApplicationBuilder<S, T, E, X>>::build","value":"fn <'a, I> (mut self, init: I) -> Result<CoreApplication<'a, T, E, X>>","parent":null,"children":[],"decl_id":null,"docs":" Build an `Application` object using the `ApplicationBuilder` as configured.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":334},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,99,97,108,108,98,97,99,107,95,113,117,101,117,101,46,114,115],"byte_start":32293,"byte_end":32301,"line_start":7,"line_end":7,"column_start":10,"column_end":18},"name":"Callback","qualname":"::callback_queue::Callback","value":"Box<dyn Fn(&mut World) + Send>","parent":null,"children":[],"decl_id":null,"docs":" The type of a callback.\n This is meant to be created from within asynchonous functions (`Future` for example).\n See `CallbackQueue` for more details.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":336},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,99,97,108,108,98,97,99,107,95,113,117,101,117,101,46,114,115],"byte_start":33111,"byte_end":33124,"line_start":24,"line_end":24,"column_start":12,"column_end":25},"name":"CallbackQueue","qualname":"::callback_queue::CallbackQueue","value":"CallbackQueue {  }","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":103}],"decl_id":null,"docs":" A simple `Callback` queue.\n Using the `Sender` you can get using the `send_handle` method, you\n can add functions modifying `World` from an asynchronous context.\n Those callbacks will be ran sequentially without preserving ordering.\n # Example\n ```rust,ignore\n // First, get a `Sender` handle.\n let handle = world.read_resource::<CallbackQueue>().send_handle();\n // Then, create your asynchronous context (Future, Callback-based library, etc..)\n let future = ...;\n // Finally, use that handle inside of the asynchronous context to run code that can affect `World`.\n future.on_complete(move || {\n     handle.send(|mut world| world.create_entity().build()).expect(\"Failed to add Callback to CallbackQueue.\");\n });\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,99,97,108,108,98,97,99,107,95,113,117,101,117,101,46,114,115],"byte_start":33276,"byte_end":33279,"line_start":31,"line_end":31,"column_start":12,"column_end":15},"name":"new","qualname":"<CallbackQueue>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `CallbackQueue`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":342},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,99,97,108,108,98,97,99,107,95,113,117,101,117,101,46,114,115],"byte_start":33422,"byte_end":33433,"line_start":36,"line_end":36,"column_start":12,"column_end":23},"name":"send_handle","qualname":"<CallbackQueue>::send_handle","value":"fn (&self) -> Sender<Callback>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new handle that allows sending `Callback`s to the `CallbackQueue`.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":374},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":33944,"byte_end":33950,"line_start":13,"line_end":13,"column_start":10,"column_end":16},"name":"Result","qualname":"::error::Result","value":"StdResult<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Engine result type.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":243},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":34066,"byte_end":34077,"line_start":19,"line_end":19,"column_start":5,"column_end":16},"name":"Application","qualname":"::error::Error::Application","value":"Error::Application","parent":{"krate":0,"index":716},"children":[],"decl_id":null,"docs":" Application error.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":245},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":34110,"byte_end":34122,"line_start":21,"line_end":21,"column_start":5,"column_end":17},"name":"StateMachine","qualname":"::error::Error::StateMachine","value":"Error::StateMachine(StateError)","parent":{"krate":0,"index":716},"children":[],"decl_id":null,"docs":" StateMachine error\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":249},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":34227,"byte_end":34233,"line_start":25,"line_end":25,"column_start":5,"column_end":11},"name":"Config","qualname":"::error::Error::Config","value":"Error::Config(ConfigError)","parent":{"krate":0,"index":716},"children":[],"decl_id":null,"docs":" Asset management error.\n Configuration error.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":253},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":34272,"byte_end":34276,"line_start":27,"line_end":27,"column_start":5,"column_end":9},"name":"Core","qualname":"::error::Error::Core","value":"Error::Core(core::Error)","parent":{"krate":0,"index":716},"children":[],"decl_id":null,"docs":" Core error.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":716},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":34027,"byte_end":34032,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"Error::{Application, StateMachine, Config, Core}","parent":null,"children":[{"krate":0,"index":243},{"krate":0,"index":245},{"krate":0,"index":249},{"krate":0,"index":253}],"decl_id":null,"docs":" Common error type.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":428},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,103,97,109,101,95,100,97,116,97,46,114,115],"byte_start":35896,"byte_end":35904,"line_start":13,"line_end":13,"column_start":11,"column_end":19},"name":"DataInit","qualname":"::game_data::DataInit","value":"DataInit<T>","parent":null,"children":[{"krate":0,"index":430}],"decl_id":null,"docs":" Initialise trait for game data\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":430},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,103,97,109,101,95,100,97,116,97,46,114,115],"byte_start":35941,"byte_end":35946,"line_start":15,"line_end":15,"column_start":8,"column_end":13},"name":"build","qualname":"::game_data::DataInit::build","value":"fn (self, world: &mut World) -> T","parent":{"krate":0,"index":428},"children":[],"decl_id":null,"docs":" Build game data\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":432},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,103,97,109,101,95,100,97,116,97,46,114,115],"byte_start":36127,"byte_end":36135,"line_start":22,"line_end":22,"column_start":12,"column_end":20},"name":"GameData","qualname":"::game_data::GameData","value":"GameData {  }","parent":null,"children":[{"krate":0,"index":113}],"decl_id":null,"docs":" Default game data.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":436},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,103,97,109,101,95,100,97,116,97,46,114,115],"byte_start":36257,"byte_end":36260,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"new","qualname":"<GameData>::new","value":"fn (dispatcher: Dispatcher<'a, 'b>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new game data\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,103,97,109,101,95,100,97,116,97,46,114,115],"byte_start":36378,"byte_end":36384,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"name":"update","qualname":"<GameData>::update","value":"fn (&mut self, world: &World) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Update game data\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":440},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,103,97,109,101,95,100,97,116,97,46,114,115],"byte_start":36513,"byte_end":36528,"line_start":39,"line_end":39,"column_start":12,"column_end":27},"name":"GameDataBuilder","qualname":"::game_data::GameDataBuilder","value":"GameDataBuilder {  }","parent":null,"children":[{"krate":0,"index":123}],"decl_id":null,"docs":" Builder for default game data\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":448},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,103,97,109,101,95,100,97,116,97,46,114,115],"byte_start":36782,"byte_end":36785,"line_start":51,"line_end":51,"column_start":12,"column_end":15},"name":"new","qualname":"<GameDataBuilder>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new builder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,103,97,109,101,95,100,97,116,97,46,114,115],"byte_start":38099,"byte_end":38111,"line_start":89,"line_end":89,"column_start":12,"column_end":24},"name":"with_barrier","qualname":"<GameDataBuilder>::with_barrier","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Inserts a barrier which assures that all systems added before the\n barrier are executed before the ones after this barrier.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":452},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,103,97,109,101,95,100,97,116,97,46,114,115],"byte_start":40198,"byte_end":40202,"line_start":145,"line_end":145,"column_start":12,"column_end":16},"name":"with","qualname":"<GameDataBuilder>::with","value":"fn <S> (mut self, system: S, name: &str, dependencies: &[&str]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds a given system.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,103,97,109,101,95,100,97,116,97,46,114,115],"byte_start":41645,"byte_end":41662,"line_start":191,"line_end":191,"column_start":12,"column_end":29},"name":"with_thread_local","qualname":"<GameDataBuilder>::with_thread_local","value":"fn <S> (mut self, system: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add a given thread-local system.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,103,97,109,101,95,100,97,116,97,46,114,115],"byte_start":42454,"byte_end":42465,"line_start":218,"line_end":218,"column_start":12,"column_end":23},"name":"with_bundle","qualname":"<GameDataBuilder>::with_bundle","value":"fn <B> (mut self, bundle: B) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Add a given ECS bundle to the game loop.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,103,97,109,101,95,100,97,116,97,46,114,115],"byte_start":43037,"byte_end":43056,"line_start":235,"line_end":235,"column_start":12,"column_end":31},"name":"with_basic_renderer","qualname":"<GameDataBuilder>::with_basic_renderer","value":"fn <A, P> (self, path: A, pass: P, with_ui: bool) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a basic renderer with a single given `Pass`, and optional support for the `DrawUi` pass.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":257},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,111,103,103,101,114,46,114,115],"byte_start":44899,"byte_end":44902,"line_start":11,"line_end":11,"column_start":5,"column_end":8},"name":"Off","qualname":"::logger::StdoutLog::Off","value":"StdoutLog::Off","parent":{"krate":0,"index":722},"children":[],"decl_id":null,"docs":" Disables logging to the terminal.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":259},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,111,103,103,101,114,46,114,115],"byte_start":44972,"byte_end":44977,"line_start":13,"line_end":13,"column_start":5,"column_end":10},"name":"Plain","qualname":"::logger::StdoutLog::Plain","value":"StdoutLog::Plain","parent":{"krate":0,"index":722},"children":[],"decl_id":null,"docs":" Enables logging to the terminal without colored output.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":261},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,111,103,103,101,114,46,114,115],"byte_start":45067,"byte_end":45074,"line_start":15,"line_end":15,"column_start":5,"column_end":12},"name":"Colored","qualname":"::logger::StdoutLog::Colored","value":"StdoutLog::Colored","parent":{"krate":0,"index":722},"children":[],"decl_id":null,"docs":" Enables logging to the terminal with colored output on supported platforms.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":722},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,111,103,103,101,114,46,114,115],"byte_start":44841,"byte_end":44850,"line_start":9,"line_end":9,"column_start":10,"column_end":19},"name":"StdoutLog","qualname":"::logger::StdoutLog","value":"StdoutLog::{Off, Plain, Colored}","parent":null,"children":[{"krate":0,"index":257},{"krate":0,"index":259},{"krate":0,"index":261}],"decl_id":null,"docs":" An enum that contains options for logging to the terminal.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,111,103,103,101,114,46,114,115],"byte_start":44832,"byte_end":45077,"line_start":9,"line_end":16,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,111,103,103,101,114,46,114,115],"byte_start":44832,"byte_end":45077,"line_start":9,"line_end":16,"column_start":1,"column_end":2}}]},{"kind":"Struct","id":{"krate":0,"index":794},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,111,103,103,101,114,46,114,115],"byte_start":45164,"byte_end":45176,"line_start":20,"line_end":20,"column_start":12,"column_end":24},"name":"LoggerConfig","qualname":"::logger::LoggerConfig","value":"LoggerConfig { stdout, level_filter, log_file, allow_env_override }","parent":null,"children":[{"krate":0,"index":299},{"krate":0,"index":301},{"krate":0,"index":303},{"krate":0,"index":305}],"decl_id":null,"docs":" Logger configuration object.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":299},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,111,103,103,101,114,46,114,115],"byte_start":45245,"byte_end":45251,"line_start":22,"line_end":22,"column_start":9,"column_end":15},"name":"stdout","qualname":"::logger::LoggerConfig::stdout","value":"logger::StdoutLog","parent":{"krate":0,"index":794},"children":[],"decl_id":null,"docs":" Determines whether to log to the terminal or not.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":301},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,111,103,103,101,114,46,114,115],"byte_start":45330,"byte_end":45342,"line_start":24,"line_end":24,"column_start":9,"column_end":21},"name":"level_filter","qualname":"::logger::LoggerConfig::level_filter","value":"log::LevelFilter","parent":{"krate":0,"index":794},"children":[],"decl_id":null,"docs":" Sets the overarching level filter for the logger.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":303},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,111,103,103,101,114,46,114,115],"byte_start":45424,"byte_end":45432,"line_start":26,"line_end":26,"column_start":9,"column_end":17},"name":"log_file","qualname":"::logger::LoggerConfig::log_file","value":"std::option::Option<std::path::PathBuf>","parent":{"krate":0,"index":794},"children":[],"decl_id":null,"docs":" If set, enables logging to file at the given path.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":305},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,111,103,103,101,114,46,114,115],"byte_start":45563,"byte_end":45581,"line_start":28,"line_end":28,"column_start":9,"column_end":27},"name":"allow_env_override","qualname":"::logger::LoggerConfig::allow_env_override","value":"bool","parent":{"krate":0,"index":794},"children":[],"decl_id":null,"docs":" If set, allows the config values to be overriden via the corresponding environmental variables.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":504},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,111,103,103,101,114,46,114,115],"byte_start":46258,"byte_end":46264,"line_start":52,"line_end":52,"column_start":12,"column_end":18},"name":"Logger","qualname":"::logger::Logger","value":"Logger {  }","parent":null,"children":[{"krate":0,"index":151}],"decl_id":null,"docs":" Allows the creation of a logger with a set of custom configurations. If no custom configuration\n is required [`start_logger`] can be used instead.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,111,103,103,101,114,46,114,115],"byte_start":46740,"byte_end":46751,"line_start":70,"line_end":70,"column_start":12,"column_end":23},"name":"from_config","qualname":"<Logger>::from_config","value":"fn (mut config: LoggerConfig) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new Logger from [`LoggerConfig`]\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":512},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,111,103,103,101,114,46,114,115],"byte_start":47732,"byte_end":47741,"line_start":99,"line_end":99,"column_start":12,"column_end":21},"name":"level_for","qualname":"<Logger>::level_for","value":"fn <T> (mut self, module: T, level: LevelFilter) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set individual log levels for modules.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,111,103,103,101,114,46,114,115],"byte_start":48003,"byte_end":48008,"line_start":109,"line_end":109,"column_start":12,"column_end":17},"name":"start","qualname":"<Logger>::start","value":"fn (self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Starts [`Logger`] by consuming it.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":516},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,111,103,103,101,114,46,114,115],"byte_start":48691,"byte_end":48703,"line_start":125,"line_end":125,"column_start":8,"column_end":20},"name":"start_logger","qualname":"::logger::start_logger","value":"fn (config: LoggerConfig) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Starts a basic logger outputting to stdout with color on supported platforms, and/or to file.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":349},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,46,114,115],"byte_start":50231,"byte_end":50246,"line_start":13,"line_end":13,"column_start":5,"column_end":20},"name":"NoStatesPresent","qualname":"::state::StateError::NoStatesPresent","value":"StateError::NoStatesPresent","parent":{"krate":0,"index":854},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":854},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,46,114,115],"byte_start":50214,"byte_end":50224,"line_start":12,"line_end":12,"column_start":10,"column_end":20},"name":"StateError","qualname":"::state::StateError","value":"StateError::{NoStatesPresent}","parent":null,"children":[{"krate":0,"index":349}],"decl_id":null,"docs":" Error type for errors occurring in StateMachine\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":546},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,46,114,115],"byte_start":50649,"byte_end":50658,"line_start":28,"line_end":28,"column_start":12,"column_end":21},"name":"StateData","qualname":"::state::StateData","value":"StateData { world, data }","parent":null,"children":[{"krate":0,"index":165},{"krate":0,"index":167}],"decl_id":null,"docs":" State data encapsulates the data sent to all state functions from the application main loop.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":165},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,46,114,115],"byte_start":50697,"byte_end":50702,"line_start":30,"line_end":30,"column_start":9,"column_end":14},"name":"world","qualname":"::state::StateData::world","value":"&'a mut specs::world::World","parent":{"krate":0,"index":546},"children":[],"decl_id":null,"docs":" Main `World`\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":167},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,46,114,115],"byte_start":50758,"byte_end":50762,"line_start":32,"line_end":32,"column_start":9,"column_end":13},"name":"data","qualname":"::state::StateData::data","value":"&'a mut T","parent":{"krate":0,"index":546},"children":[],"decl_id":null,"docs":" User defined game data\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,46,114,115],"byte_start":50869,"byte_end":50872,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<StateData>::new","value":"fn (world: &'a mut World, data: &'a mut T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new state data\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":177},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,46,114,115],"byte_start":51129,"byte_end":51133,"line_start":50,"line_end":50,"column_start":5,"column_end":9},"name":"None","qualname":"::state::Trans::None","value":"Trans::None","parent":{"krate":0,"index":552},"children":[],"decl_id":null,"docs":" Continue as normal.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":179},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,46,114,115],"byte_start":51245,"byte_end":51248,"line_start":53,"line_end":53,"column_start":5,"column_end":8},"name":"Pop","qualname":"::state::Trans::Pop","value":"Trans::Pop","parent":{"krate":0,"index":552},"children":[],"decl_id":null,"docs":" Remove the active state and resume the next state on the stack or stop\n if there are none.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":181},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,46,114,115],"byte_start":51322,"byte_end":51326,"line_start":55,"line_end":55,"column_start":5,"column_end":9},"name":"Push","qualname":"::state::Trans::Push","value":"Trans::Push(Box<dyn State<T, E>>)","parent":{"krate":0,"index":552},"children":[],"decl_id":null,"docs":" Pause the active state and push a new state onto the stack.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":185},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,46,114,115],"byte_start":51428,"byte_end":51434,"line_start":57,"line_end":57,"column_start":5,"column_end":11},"name":"Switch","qualname":"::state::Trans::Switch","value":"Trans::Switch(Box<dyn State<T, E>>)","parent":{"krate":0,"index":552},"children":[],"decl_id":null,"docs":" Remove the current state on the stack and insert a different one.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":189},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,46,114,115],"byte_start":51523,"byte_end":51527,"line_start":59,"line_end":59,"column_start":5,"column_end":9},"name":"Quit","qualname":"::state::Trans::Quit","value":"Trans::Quit","parent":{"krate":0,"index":552},"children":[],"decl_id":null,"docs":" Stop and remove all states and shut down the engine.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":552},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,46,114,115],"byte_start":51083,"byte_end":51088,"line_start":48,"line_end":48,"column_start":10,"column_end":15},"name":"Trans","qualname":"::state::Trans","value":"Trans::{None, Pop, Push, Switch, Quit}","parent":null,"children":[{"krate":0,"index":177},{"krate":0,"index":179},{"krate":0,"index":181},{"krate":0,"index":185},{"krate":0,"index":189}],"decl_id":null,"docs":" Types of state transitions.\n T is the type of shared data between states.\n E is the type of events\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":554},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,46,114,115],"byte_start":51883,"byte_end":51893,"line_start":69,"line_end":69,"column_start":10,"column_end":20},"name":"TransEvent","qualname":"::state::TransEvent","value":"Box<dyn Fn() -> Trans<T, E> + Send + Sync + 'static>","parent":null,"children":[],"decl_id":null,"docs":" Event queue to trigger state `Trans` from other places than a `State`'s methods.\n # Example:\n ```rust, ignore\n world.write_resource::<EventChannel<TransEvent<MyGameData, StateEvent>>>().single_write(Box::new(|| Trans::Quit));\n ```","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":556},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,46,114,115],"byte_start":52023,"byte_end":52033,"line_start":72,"line_end":72,"column_start":10,"column_end":20},"name":"EmptyTrans","qualname":"::state::EmptyTrans","value":"Trans<(), StateEvent>","parent":null,"children":[],"decl_id":null,"docs":" An empty `Trans`. Made to be used with `EmptyState`.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":558},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,46,114,115],"byte_start":52232,"byte_end":52243,"line_start":76,"line_end":76,"column_start":10,"column_end":21},"name":"SimpleTrans","qualname":"::state::SimpleTrans","value":"Trans<GameData<'static, 'static>, StateEvent>","parent":null,"children":[],"decl_id":null,"docs":" A simple default `Trans`. Made to be used with `SimpleState`.\n By default it contains a `GameData` as its `StateData` and doesn't have a custom event type.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":560},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,46,114,115],"byte_start":52381,"byte_end":52386,"line_start":79,"line_end":79,"column_start":11,"column_end":16},"name":"State","qualname":"::state::State","value":"State<T, E: Send + Sync + 'static>","parent":null,"children":[{"krate":0,"index":562},{"krate":0,"index":564},{"krate":0,"index":566},{"krate":0,"index":568},{"krate":0,"index":570},{"krate":0,"index":572},{"krate":0,"index":574},{"krate":0,"index":576},{"krate":0,"index":578}],"decl_id":null,"docs":" A trait which defines game states that can be used by the state machine.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":562},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,46,114,115],"byte_start":52470,"byte_end":52478,"line_start":81,"line_end":81,"column_start":8,"column_end":16},"name":"on_start","qualname":"::state::State::on_start","value":"fn (&mut self, _data: StateData<'_, T>) -> ()","parent":{"krate":0,"index":560},"children":[],"decl_id":null,"docs":" Executed when the game state begins.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,46,114,115],"byte_start":52570,"byte_end":52577,"line_start":84,"line_end":84,"column_start":8,"column_end":15},"name":"on_stop","qualname":"::state::State::on_stop","value":"fn (&mut self, _data: StateData<'_, T>) -> ()","parent":{"krate":0,"index":560},"children":[],"decl_id":null,"docs":" Executed when the game state exits.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,46,114,115],"byte_start":52696,"byte_end":52704,"line_start":87,"line_end":87,"column_start":8,"column_end":16},"name":"on_pause","qualname":"::state::State::on_pause","value":"fn (&mut self, _data: StateData<'_, T>) -> ()","parent":{"krate":0,"index":560},"children":[],"decl_id":null,"docs":" Executed when a different game state is pushed onto the stack.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":568},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,46,114,115],"byte_start":52829,"byte_end":52838,"line_start":90,"line_end":90,"column_start":8,"column_end":17},"name":"on_resume","qualname":"::state::State::on_resume","value":"fn (&mut self, _data: StateData<'_, T>) -> ()","parent":{"krate":0,"index":560},"children":[],"decl_id":null,"docs":" Executed when the application returns to this game state once again.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,46,114,115],"byte_start":52966,"byte_end":52978,"line_start":93,"line_end":93,"column_start":8,"column_end":20},"name":"handle_event","qualname":"::state::State::handle_event","value":"fn (&mut self, _data: StateData<'_, T>, _event: E) -> Trans<T, E>","parent":{"krate":0,"index":560},"children":[],"decl_id":null,"docs":" Executed on every frame before updating, for use in reacting to events.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,46,114,115],"byte_start":53216,"byte_end":53228,"line_start":100,"line_end":100,"column_start":8,"column_end":20},"name":"fixed_update","qualname":"::state::State::fixed_update","value":"fn (&mut self, _data: StateData<'_, T>) -> Trans<T, E>","parent":{"krate":0,"index":560},"children":[],"decl_id":null,"docs":" Executed repeatedly at stable, predictable intervals (1/60th of a second\n by default),\n if this is the active state.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":574},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,46,114,115],"byte_start":53475,"byte_end":53481,"line_start":106,"line_end":106,"column_start":8,"column_end":14},"name":"update","qualname":"::state::State::update","value":"fn (&mut self, _data: StateData<'_, T>) -> Trans<T, E>","parent":{"krate":0,"index":560},"children":[],"decl_id":null,"docs":" Executed on every frame immediately, as fast as the engine will allow (taking into account the frame rate limit),\n if this is the active state.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":576},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,46,114,115],"byte_start":53815,"byte_end":53834,"line_start":114,"line_end":114,"column_start":8,"column_end":27},"name":"shadow_fixed_update","qualname":"::state::State::shadow_fixed_update","value":"fn (&mut self, _data: StateData<'_, T>) -> ()","parent":{"krate":0,"index":560},"children":[],"decl_id":null,"docs":" Executed repeatedly at stable, predictable intervals (1/60th of a second\n by default),\n even when this is not the active state,\n as long as this state is on the [StateMachine](struct.StateMachine.html)'s state-stack.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":578},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,46,114,115],"byte_start":54148,"byte_end":54161,"line_start":119,"line_end":119,"column_start":8,"column_end":21},"name":"shadow_update","qualname":"::state::State::shadow_update","value":"fn (&mut self, _data: StateData<'_, T>) -> ()","parent":{"krate":0,"index":560},"children":[],"decl_id":null,"docs":" Executed on every frame immediately, as fast as the engine will allow (taking into account the frame rate limit),\n even when this is not the active state,\n as long as this state is on the [StateMachine](struct.StateMachine.html)'s state-stack.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":580},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,46,114,115],"byte_start":54293,"byte_end":54303,"line_start":123,"line_end":123,"column_start":11,"column_end":21},"name":"EmptyState","qualname":"::state::EmptyState","value":"EmptyState","parent":null,"children":[{"krate":0,"index":582},{"krate":0,"index":584},{"krate":0,"index":586},{"krate":0,"index":588},{"krate":0,"index":590},{"krate":0,"index":592},{"krate":0,"index":594},{"krate":0,"index":596},{"krate":0,"index":598}],"decl_id":null,"docs":" An empty `State` trait. It contains no `StateData` or custom `StateEvent`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":582},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,46,114,115],"byte_start":54358,"byte_end":54366,"line_start":125,"line_end":125,"column_start":8,"column_end":16},"name":"on_start","qualname":"::state::EmptyState::on_start","value":"fn (&mut self, _data: StateData<'_, ()>) -> ()","parent":{"krate":0,"index":580},"children":[],"decl_id":null,"docs":" Executed when the game state begins.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":584},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,46,114,115],"byte_start":54459,"byte_end":54466,"line_start":128,"line_end":128,"column_start":8,"column_end":15},"name":"on_stop","qualname":"::state::EmptyState::on_stop","value":"fn (&mut self, _data: StateData<'_, ()>) -> ()","parent":{"krate":0,"index":580},"children":[],"decl_id":null,"docs":" Executed when the game state exits.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":586},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,46,114,115],"byte_start":54586,"byte_end":54594,"line_start":131,"line_end":131,"column_start":8,"column_end":16},"name":"on_pause","qualname":"::state::EmptyState::on_pause","value":"fn (&mut self, _data: StateData<'_, ()>) -> ()","parent":{"krate":0,"index":580},"children":[],"decl_id":null,"docs":" Executed when a different game state is pushed onto the stack.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":588},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,46,114,115],"byte_start":54720,"byte_end":54729,"line_start":134,"line_end":134,"column_start":8,"column_end":17},"name":"on_resume","qualname":"::state::EmptyState::on_resume","value":"fn (&mut self, _data: StateData<'_, ()>) -> ()","parent":{"krate":0,"index":580},"children":[],"decl_id":null,"docs":" Executed when the application returns to this game state once again.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,46,114,115],"byte_start":54858,"byte_end":54870,"line_start":137,"line_end":137,"column_start":8,"column_end":20},"name":"handle_event","qualname":"::state::EmptyState::handle_event","value":"fn (&mut self, _data: StateData<'_, ()>, event: StateEvent) -> EmptyTrans","parent":{"krate":0,"index":580},"children":[],"decl_id":null,"docs":" Executed on every frame before updating, for use in reacting to events.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,46,114,115],"byte_start":55297,"byte_end":55309,"line_start":151,"line_end":151,"column_start":8,"column_end":20},"name":"fixed_update","qualname":"::state::EmptyState::fixed_update","value":"fn (&mut self, _data: StateData<'_, ()>) -> EmptyTrans","parent":{"krate":0,"index":580},"children":[],"decl_id":null,"docs":" Executed repeatedly at stable, predictable intervals (1/60th of a second\n by default).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":594},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,46,114,115],"byte_start":55519,"byte_end":55525,"line_start":156,"line_end":156,"column_start":8,"column_end":14},"name":"update","qualname":"::state::EmptyState::update","value":"fn (&mut self, _data: StateData<'_, ()>) -> EmptyTrans","parent":{"krate":0,"index":580},"children":[],"decl_id":null,"docs":" Executed on every frame immediately, as fast as the engine will allow (taking into account the frame rate limit).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":596},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,46,114,115],"byte_start":55859,"byte_end":55878,"line_start":164,"line_end":164,"column_start":8,"column_end":27},"name":"shadow_fixed_update","qualname":"::state::EmptyState::shadow_fixed_update","value":"fn (&mut self, _data: StateData<'_, ()>) -> ()","parent":{"krate":0,"index":580},"children":[],"decl_id":null,"docs":" Executed repeatedly at stable, predictable intervals (1/60th of a second\n by default),\n even when this is not the active state,\n as long as this state is on the [StateMachine](struct.StateMachine.html)'s state-stack.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,46,114,115],"byte_start":56193,"byte_end":56206,"line_start":169,"line_end":169,"column_start":8,"column_end":21},"name":"shadow_update","qualname":"::state::EmptyState::shadow_update","value":"fn (&mut self, _data: StateData<'_, ()>) -> ()","parent":{"krate":0,"index":580},"children":[],"decl_id":null,"docs":" Executed on every frame immediately, as fast as the engine will allow (taking into account the frame rate limit),\n even when this is not the active state,\n as long as this state is on the [StateMachine](struct.StateMachine.html)'s state-stack.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":620},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,46,114,115],"byte_start":58378,"byte_end":58389,"line_start":226,"line_end":226,"column_start":11,"column_end":22},"name":"SimpleState","qualname":"::state::SimpleState","value":"SimpleState","parent":null,"children":[{"krate":0,"index":622},{"krate":0,"index":624},{"krate":0,"index":626},{"krate":0,"index":628},{"krate":0,"index":630},{"krate":0,"index":632},{"krate":0,"index":634},{"krate":0,"index":636},{"krate":0,"index":638}],"decl_id":null,"docs":" A simple `State` trait. It contains `GameData` as its `StateData` and no custom `StateEvent`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":622},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,46,114,115],"byte_start":58444,"byte_end":58452,"line_start":228,"line_end":228,"column_start":8,"column_end":16},"name":"on_start","qualname":"::state::SimpleState::on_start","value":"fn (&mut self, _data: StateData<'_, GameData<'_, '_>>) -> ()","parent":{"krate":0,"index":620},"children":[],"decl_id":null,"docs":" Executed when the game state begins.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":624},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,46,114,115],"byte_start":58559,"byte_end":58566,"line_start":231,"line_end":231,"column_start":8,"column_end":15},"name":"on_stop","qualname":"::state::SimpleState::on_stop","value":"fn (&mut self, _data: StateData<'_, GameData<'_, '_>>) -> ()","parent":{"krate":0,"index":620},"children":[],"decl_id":null,"docs":" Executed when the game state exits.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,46,114,115],"byte_start":58700,"byte_end":58708,"line_start":234,"line_end":234,"column_start":8,"column_end":16},"name":"on_pause","qualname":"::state::SimpleState::on_pause","value":"fn (&mut self, _data: StateData<'_, GameData<'_, '_>>) -> ()","parent":{"krate":0,"index":620},"children":[],"decl_id":null,"docs":" Executed when a different game state is pushed onto the stack.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,46,114,115],"byte_start":58848,"byte_end":58857,"line_start":237,"line_end":237,"column_start":8,"column_end":17},"name":"on_resume","qualname":"::state::SimpleState::on_resume","value":"fn (&mut self, _data: StateData<'_, GameData<'_, '_>>) -> ()","parent":{"krate":0,"index":620},"children":[],"decl_id":null,"docs":" Executed when the application returns to this game state once again.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,46,114,115],"byte_start":59000,"byte_end":59012,"line_start":240,"line_end":240,"column_start":8,"column_end":20},"name":"handle_event","qualname":"::state::SimpleState::handle_event","value":"fn (&mut self, _data: StateData<'_, GameData<'_, '_>>, event: StateEvent) -> SimpleTrans","parent":{"krate":0,"index":620},"children":[],"decl_id":null,"docs":" Executed on every frame before updating, for use in reacting to events.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,46,114,115],"byte_start":59485,"byte_end":59497,"line_start":258,"line_end":258,"column_start":8,"column_end":20},"name":"fixed_update","qualname":"::state::SimpleState::fixed_update","value":"fn (&mut self, _data: StateData<'_, GameData<'_, '_>>) -> SimpleTrans","parent":{"krate":0,"index":620},"children":[],"decl_id":null,"docs":" Executed repeatedly at stable, predictable intervals (1/60th of a second\n by default).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":634},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,46,114,115],"byte_start":59722,"byte_end":59728,"line_start":263,"line_end":263,"column_start":8,"column_end":14},"name":"update","qualname":"::state::SimpleState::update","value":"fn (&mut self, _data: &mut StateData<'_, GameData<'_, '_>>) -> SimpleTrans","parent":{"krate":0,"index":620},"children":[],"decl_id":null,"docs":" Executed on every frame immediately, as fast as the engine will allow (taking into account the frame rate limit).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":636},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,46,114,115],"byte_start":60082,"byte_end":60101,"line_start":271,"line_end":271,"column_start":8,"column_end":27},"name":"shadow_fixed_update","qualname":"::state::SimpleState::shadow_fixed_update","value":"fn (&mut self, _data: StateData<'_, GameData<'_, '_>>) -> ()","parent":{"krate":0,"index":620},"children":[],"decl_id":null,"docs":" Executed repeatedly at stable, predictable intervals (1/60th of a second\n by default),\n even when this is not the active state,\n as long as this state is on the [StateMachine](struct.StateMachine.html)'s state-stack.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":638},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,46,114,115],"byte_start":60430,"byte_end":60443,"line_start":276,"line_end":276,"column_start":8,"column_end":21},"name":"shadow_update","qualname":"::state::SimpleState::shadow_update","value":"fn (&mut self, _data: StateData<'_, GameData<'_, '_>>) -> ()","parent":{"krate":0,"index":620},"children":[],"decl_id":null,"docs":" Executed on every frame immediately, as fast as the engine will allow (taking into account the frame rate limit),\n even when this is not the active state,\n as long as this state is on the [StateMachine](struct.StateMachine.html)'s state-stack.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":860},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,46,114,115],"byte_start":62953,"byte_end":62965,"line_start":343,"line_end":343,"column_start":12,"column_end":24},"name":"StateMachine","qualname":"::state::StateMachine","value":"StateMachine {  }","parent":null,"children":[{"krate":0,"index":357},{"krate":0,"index":359}],"decl_id":null,"docs":" A simple stack-based state machine (pushdown automaton).\n","sig":null,"attributes":[{"value":"derivative(Debug)","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,46,114,115],"byte_start":62921,"byte_end":62941,"line_start":342,"line_end":342,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":662},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,46,114,115],"byte_start":63225,"byte_end":63228,"line_start":351,"line_end":351,"column_start":12,"column_end":15},"name":"new","qualname":"<StateMachine>::new","value":"fn <S> (initial_state: S) -> StateMachine<'a, T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new state machine with the given initial state.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":664},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,46,114,115],"byte_start":63484,"byte_end":63494,"line_start":359,"line_end":359,"column_start":12,"column_end":22},"name":"is_running","qualname":"<StateMachine>::is_running","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the state machine is running.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":666},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,46,114,115],"byte_start":63590,"byte_end":63595,"line_start":364,"line_end":364,"column_start":12,"column_end":17},"name":"start","qualname":"<StateMachine>::start","value":"fn (&mut self, data: StateData<'_, T>) -> Result<(), StateError>","parent":null,"children":[],"decl_id":null,"docs":" Initializes the state machine.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":668},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,46,114,115],"byte_start":63997,"byte_end":64009,"line_start":377,"line_end":377,"column_start":12,"column_end":24},"name":"handle_event","qualname":"<StateMachine>::handle_event","value":"fn (&mut self, data: StateData<'_, T>, event: E) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Passes a single event to the active state to handle.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":670},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,46,114,115],"byte_start":64490,"byte_end":64502,"line_start":390,"line_end":390,"column_start":12,"column_end":24},"name":"fixed_update","qualname":"<StateMachine>::fixed_update","value":"fn (&mut self, data: StateData<'_, T>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Updates the currently active state at a steady, fixed interval.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":672},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,46,114,115],"byte_start":65089,"byte_end":65095,"line_start":406,"line_end":406,"column_start":12,"column_end":18},"name":"update","qualname":"<StateMachine>::update","value":"fn (&mut self, data: StateData<'_, T>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Updates the currently active state immediately.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":674},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,46,114,115],"byte_start":65963,"byte_end":65973,"line_start":426,"line_end":426,"column_start":12,"column_end":22},"name":"transition","qualname":"<StateMachine>::transition","value":"fn (&mut self, request: Trans<T, E>, data: StateData<'_, T>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Performs a state transition.\n Usually called by update or fixed_update by the user's defined `State`.\n This method can also be called when there are one or multiple `Trans` stored in the\n global `EventChannel<TransEvent<T, E>>`. Such `Trans` will be passed to this method\n sequentially in the order of insertion.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":367},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,95,101,118,101,110,116,46,114,115],"byte_start":70042,"byte_end":70048,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Window","qualname":"::state_event::StateEvent::Window","value":"StateEvent::Window(Event)","parent":{"krate":0,"index":866},"children":[],"decl_id":null,"docs":" Events sent by the winit window.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":371},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,95,101,118,101,110,116,46,114,115],"byte_start":70099,"byte_end":70101,"line_start":18,"line_end":18,"column_start":5,"column_end":7},"name":"Ui","qualname":"::state_event::StateEvent::Ui","value":"StateEvent::Ui(UiEvent)","parent":{"krate":0,"index":866},"children":[],"decl_id":null,"docs":" Events sent by the ui system.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":866},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,95,101,118,101,110,116,46,114,115],"byte_start":69984,"byte_end":69994,"line_start":14,"line_end":14,"column_start":10,"column_end":20},"name":"StateEvent","qualname":"::state_event::StateEvent","value":"StateEvent::{Window, Ui}","parent":null,"children":[{"krate":0,"index":367},{"krate":0,"index":371}],"decl_id":null,"docs":" The enum holding the different types of event that can be received in a `State` in the handle_event method.\n","sig":null,"attributes":[{"value":"reader(StateEventReader)","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,95,101,118,101,110,116,46,114,115],"byte_start":69947,"byte_end":69974,"line_start":13,"line_end":13,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":878},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,95,101,118,101,110,116,46,114,115],"byte_start":69956,"byte_end":69972,"line_start":13,"line_end":13,"column_start":10,"column_end":26},"name":"StateEventReader","qualname":"::state_event::StateEventReader","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,95,101,118,101,110,116,46,114,115],"byte_start":69933,"byte_end":69944,"line_start":12,"line_end":12,"column_start":17,"column_end":28}}]}],"impls":[{"id":1,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,97,112,112,46,114,115],"byte_start":8261,"byte_end":8276,"line_start":139,"line_end":139,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":284},{"krate":0,"index":286},{"krate":0,"index":288},{"krate":0,"index":290},{"krate":0,"index":292},{"krate":0,"index":296},{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,97,112,112,46,114,115],"byte_start":17512,"byte_end":17530,"line_start":410,"line_end":410,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":308},{"krate":0,"index":310},{"krate":0,"index":312},{"krate":0,"index":314},{"krate":0,"index":316},{"krate":0,"index":318},{"krate":0,"index":320},{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,99,97,108,108,98,97,99,107,95,113,117,101,117,101,46,114,115],"byte_start":33210,"byte_end":33223,"line_start":29,"line_end":29,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":340},{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,99,97,108,108,98,97,99,107,95,113,117,101,117,101,46,114,115],"byte_start":33517,"byte_end":33530,"line_start":41,"line_end":41,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":34312,"byte_end":34317,"line_start":30,"line_end":30,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":378},{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":34786,"byte_end":34791,"line_start":48,"line_end":48,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":384}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":35261,"byte_end":35266,"line_start":59,"line_end":59,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":35377,"byte_end":35382,"line_start":65,"line_end":65,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":35540,"byte_end":35545,"line_start":71,"line_end":71,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,103,97,109,101,95,100,97,116,97,46,114,115],"byte_start":36198,"byte_end":36206,"line_start":26,"line_end":26,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":436},{"krate":0,"index":438}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,103,97,109,101,95,100,97,116,97,46,114,115],"byte_start":36612,"byte_end":36627,"line_start":43,"line_end":43,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,103,97,109,101,95,100,97,116,97,46,114,115],"byte_start":36718,"byte_end":36733,"line_start":49,"line_end":49,"column_start":14,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":448},{"krate":0,"index":450},{"krate":0,"index":452},{"krate":0,"index":454},{"krate":0,"index":456},{"krate":0,"index":458}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,103,97,109,101,95,100,97,116,97,46,114,115],"byte_start":44081,"byte_end":44096,"line_start":265,"line_end":265,"column_start":45,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":478}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,111,103,103,101,114,46,114,115],"byte_start":45609,"byte_end":45621,"line_start":31,"line_end":31,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,111,103,103,101,114,46,114,115],"byte_start":46305,"byte_end":46311,"line_start":56,"line_end":56,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":508},{"krate":0,"index":510},{"krate":0,"index":512},{"krate":0,"index":514}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,46,114,115],"byte_start":50268,"byte_end":50278,"line_start":16,"line_end":16,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":544}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,46,114,115],"byte_start":50790,"byte_end":50799,"line_start":35,"line_end":35,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":550}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,46,114,115],"byte_start":56296,"byte_end":56297,"line_start":172,"line_end":172,"column_start":47,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":602},{"krate":0,"index":604},{"krate":0,"index":606},{"krate":0,"index":608},{"krate":0,"index":610},{"krate":0,"index":612},{"krate":0,"index":614},{"krate":0,"index":616},{"krate":0,"index":618}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,46,114,115],"byte_start":60572,"byte_end":60573,"line_start":279,"line_end":279,"column_start":72,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":642},{"krate":0,"index":644},{"krate":0,"index":646},{"krate":0,"index":648},{"krate":0,"index":650},{"krate":0,"index":652},{"krate":0,"index":654},{"krate":0,"index":656},{"krate":0,"index":658}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,46,114,115],"byte_start":63123,"byte_end":63135,"line_start":349,"line_end":349,"column_start":39,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":662},{"krate":0,"index":664},{"krate":0,"index":666},{"krate":0,"index":668},{"krate":0,"index":670},{"krate":0,"index":672},{"krate":0,"index":674},{"krate":0,"index":676},{"krate":0,"index":678},{"krate":0,"index":680},{"krate":0,"index":682}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3307,"byte_end":3314,"line_start":107,"line_end":107,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":122}}],"macro_refs":[],"relations":[{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,97,112,112,46,114,115],"byte_start":8261,"byte_end":8276,"line_start":139,"line_end":139,"column_start":19,"column_end":34},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":710},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,97,112,112,46,114,115],"byte_start":17512,"byte_end":17530,"line_start":410,"line_end":410,"column_start":18,"column_end":36},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":300},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,99,97,108,108,98,97,99,107,95,113,117,101,117,101,46,114,115],"byte_start":33210,"byte_end":33223,"line_start":29,"line_end":29,"column_start":6,"column_end":19},"kind":{"variant":"Impl","fields":[3]},"from":{"krate":0,"index":336},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,99,97,108,108,98,97,99,107,95,113,117,101,117,101,46,114,115],"byte_start":33517,"byte_end":33530,"line_start":41,"line_end":41,"column_start":18,"column_end":31},"kind":{"variant":"Impl","fields":[4]},"from":{"krate":0,"index":336},"to":{"krate":2,"index":2632}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":34312,"byte_end":34317,"line_start":30,"line_end":30,"column_start":19,"column_end":24},"kind":{"variant":"Impl","fields":[5]},"from":{"krate":0,"index":716},"to":{"krate":1,"index":2470}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":34786,"byte_end":34791,"line_start":48,"line_end":48,"column_start":18,"column_end":23},"kind":{"variant":"Impl","fields":[6]},"from":{"krate":0,"index":716},"to":{"krate":2,"index":8430}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":35261,"byte_end":35266,"line_start":59,"line_end":59,"column_start":28,"column_end":33},"kind":{"variant":"Impl","fields":[7]},"from":{"krate":0,"index":716},"to":{"krate":2,"index":2656}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":35377,"byte_end":35382,"line_start":65,"line_end":65,"column_start":39,"column_end":44},"kind":{"variant":"Impl","fields":[8]},"from":{"krate":0,"index":716},"to":{"krate":2,"index":2656}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":35540,"byte_end":35545,"line_start":71,"line_end":71,"column_start":28,"column_end":33},"kind":{"variant":"Impl","fields":[9]},"from":{"krate":0,"index":716},"to":{"krate":2,"index":2656}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,103,97,109,101,95,100,97,116,97,46,114,115],"byte_start":36198,"byte_end":36206,"line_start":26,"line_end":26,"column_start":14,"column_end":22},"kind":{"variant":"Impl","fields":[10]},"from":{"krate":0,"index":432},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,103,97,109,101,95,100,97,116,97,46,114,115],"byte_start":36612,"byte_end":36627,"line_start":43,"line_end":43,"column_start":26,"column_end":41},"kind":{"variant":"Impl","fields":[11]},"from":{"krate":0,"index":440},"to":{"krate":2,"index":2632}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,103,97,109,101,95,100,97,116,97,46,114,115],"byte_start":36718,"byte_end":36733,"line_start":49,"line_end":49,"column_start":14,"column_end":29},"kind":{"variant":"Impl","fields":[12]},"from":{"krate":0,"index":440},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,103,97,109,101,95,100,97,116,97,46,114,115],"byte_start":44081,"byte_end":44096,"line_start":265,"line_end":265,"column_start":45,"column_end":60},"kind":{"variant":"Impl","fields":[13]},"from":{"krate":0,"index":440},"to":{"krate":0,"index":428}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,111,103,103,101,114,46,114,115],"byte_start":45609,"byte_end":45621,"line_start":31,"line_end":31,"column_start":18,"column_end":30},"kind":{"variant":"Impl","fields":[18]},"from":{"krate":0,"index":794},"to":{"krate":2,"index":2632}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,108,111,103,103,101,114,46,114,115],"byte_start":46305,"byte_end":46311,"line_start":56,"line_end":56,"column_start":6,"column_end":12},"kind":{"variant":"Impl","fields":[19]},"from":{"krate":0,"index":504},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,46,114,115],"byte_start":50268,"byte_end":50278,"line_start":16,"line_end":16,"column_start":18,"column_end":28},"kind":{"variant":"Impl","fields":[20]},"from":{"krate":0,"index":854},"to":{"krate":2,"index":8430}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,46,114,115],"byte_start":50790,"byte_end":50799,"line_start":35,"line_end":35,"column_start":13,"column_end":22},"kind":{"variant":"Impl","fields":[21]},"from":{"krate":0,"index":546},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,46,114,115],"byte_start":56296,"byte_end":56297,"line_start":172,"line_end":172,"column_start":47,"column_end":48},"kind":{"variant":"Impl","fields":[22]},"from":{"krate":0,"index":199},"to":{"krate":0,"index":560}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,46,114,115],"byte_start":60572,"byte_end":60573,"line_start":279,"line_end":279,"column_start":72,"column_end":73},"kind":{"variant":"Impl","fields":[23]},"from":{"krate":0,"index":201},"to":{"krate":0,"index":560}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,109,101,116,104,121,115,116,45,48,46,49,48,46,48,47,115,114,99,47,115,116,97,116,101,46,114,115],"byte_start":63123,"byte_end":63135,"line_start":349,"line_end":349,"column_start":39,"column_end":51},"kind":{"variant":"Impl","fields":[25]},"from":{"krate":0,"index":860},"to":{"krate":4294967295,"index":4294967295}}]}