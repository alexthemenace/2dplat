{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.18.2","compilation":{"directory":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51],"program":"/Users/Kumar/.rustup/toolchains/nightly-2019-02-27-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","specs","/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/specs-0.14.3/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"common\"","--cfg","feature=\"default\"","--cfg","feature=\"futures\"","--cfg","feature=\"hibitset\"","--cfg","feature=\"parallel\"","--cfg","feature=\"rayon\"","--cfg","feature=\"shred\"","-C","metadata=a5c92f042d126fa5","-C","extra-filename=-a5c92f042d126fa5","--out-dir","/Users/Kumar/personal/workspace/rust/mayhem-galactica/target/rls/debug/deps","-L","dependency=/Users/Kumar/personal/workspace/rust/mayhem-galactica/target/rls/debug/deps","--extern","crossbeam=/Users/Kumar/personal/workspace/rust/mayhem-galactica/target/rls/debug/deps/libcrossbeam-ccb289cbe2001ba5.rmeta","--extern","derivative=/Users/Kumar/personal/workspace/rust/mayhem-galactica/target/rls/debug/deps/libderivative-1cd3e66115774056.dylib","--extern","fnv=/Users/Kumar/personal/workspace/rust/mayhem-galactica/target/rls/debug/deps/libfnv-e3b7476004d102bb.rmeta","--extern","futures=/Users/Kumar/personal/workspace/rust/mayhem-galactica/target/rls/debug/deps/libfutures-dbd2212974fe2df2.rmeta","--extern","hibitset=/Users/Kumar/personal/workspace/rust/mayhem-galactica/target/rls/debug/deps/libhibitset-40007a3b0d0eed74.rmeta","--extern","log=/Users/Kumar/personal/workspace/rust/mayhem-galactica/target/rls/debug/deps/liblog-0a97a9085b40b399.rmeta","--extern","mopa=/Users/Kumar/personal/workspace/rust/mayhem-galactica/target/rls/debug/deps/libmopa-cfad8f9870db245b.rmeta","--extern","nonzero_signed=/Users/Kumar/personal/workspace/rust/mayhem-galactica/target/rls/debug/deps/libnonzero_signed-308c29012d78ff40.rmeta","--extern","rayon=/Users/Kumar/personal/workspace/rust/mayhem-galactica/target/rls/debug/deps/librayon-f6bf8dfbf7c1c19e.rmeta","--extern","shred=/Users/Kumar/personal/workspace/rust/mayhem-galactica/target/rls/debug/deps/libshred-45859060d7edf4b8.rmeta","--extern","shred_derive=/Users/Kumar/personal/workspace/rust/mayhem-galactica/target/rls/debug/deps/libshred_derive-5ecc3f7ca95adf21.dylib","--extern","shrev=/Users/Kumar/personal/workspace/rust/mayhem-galactica/target/rls/debug/deps/libshrev-aaa06c2364a5116e.rmeta","--extern","tuple_utils=/Users/Kumar/personal/workspace/rust/mayhem-galactica/target/rls/debug/deps/libtuple_utils-8ad5fdbc9b5f7e67.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/Kumar/.rustup/toolchains/nightly-2019-02-27-x86_64-apple-darwin"],"output":[47,85,115,101,114,115,47,75,117,109,97,114,47,112,101,114,115,111,110,97,108,47,119,111,114,107,115,112,97,99,101,47,114,117,115,116,47,109,97,121,104,101,109,45,103,97,108,97,99,116,105,99,97,47,116,97,114,103,101,116,47,114,108,115,47,100,101,98,117,103,47,100,101,112,115,47,108,105,98,115,112,101,99,115,45,97,53,99,57,50,102,48,52,50,100,49,50,54,102,97,53,46,114,109,101,116,97]},"prelude":{"crate_id":{"name":"specs","disambiguator":[13831854712669772796,7647146940030017291]},"crate_root":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/specs-0.14.3/src","external_crates":[{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/specs-0.14.3/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[17365010580081952725,18206160307474953630]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/specs-0.14.3/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[6760693024494354245,14002820984158080208]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/specs-0.14.3/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[199464317358532175,14697293645914925506]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/specs-0.14.3/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13558819658400235840,6800895293433658904]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/specs-0.14.3/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[18425220944332119967,14239145101900690943]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/specs-0.14.3/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10854247164472963508,11478657302719725741]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/specs-0.14.3/src/lib.rs","num":7,"id":{"name":"rustc_demangle","disambiguator":[4168194895173621532,15234647754953002462]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/specs-0.14.3/src/lib.rs","num":8,"id":{"name":"unwind","disambiguator":[12306654840912142307,10869972980572175885]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/specs-0.14.3/src/lib.rs","num":9,"id":{"name":"backtrace_sys","disambiguator":[1531625639640313062,14514900902579754273]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/specs-0.14.3/src/lib.rs","num":10,"id":{"name":"panic_unwind","disambiguator":[13209889598193010227,616765238597587583]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/specs-0.14.3/src/lib.rs","num":11,"id":{"name":"shred","disambiguator":[17649222471775575589,6652634375532887041]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/specs-0.14.3/src/lib.rs","num":12,"id":{"name":"arrayvec","disambiguator":[10100321813570616869,17214766525115099071]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/specs-0.14.3/src/lib.rs","num":13,"id":{"name":"fxhash","disambiguator":[9785272237910201430,12991487648654109095]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/specs-0.14.3/src/lib.rs","num":14,"id":{"name":"byteorder","disambiguator":[5633574704660589010,1124758284593715500]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/specs-0.14.3/src/lib.rs","num":15,"id":{"name":"mopa","disambiguator":[9834760194327584593,2069751431628163890]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/specs-0.14.3/src/lib.rs","num":16,"id":{"name":"rayon","disambiguator":[673595522434739685,14750040120881943826]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/specs-0.14.3/src/lib.rs","num":17,"id":{"name":"rayon_core","disambiguator":[9812699966296362397,12178911589389533106]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/specs-0.14.3/src/lib.rs","num":18,"id":{"name":"crossbeam_deque","disambiguator":[5341218249946477162,18228421548853618417]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/specs-0.14.3/src/lib.rs","num":19,"id":{"name":"crossbeam_epoch","disambiguator":[6731967409836271626,15054482142809987834]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/specs-0.14.3/src/lib.rs","num":20,"id":{"name":"nodrop","disambiguator":[2708311522677966739,5406444216533143574]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/specs-0.14.3/src/lib.rs","num":21,"id":{"name":"crossbeam_utils","disambiguator":[2008720669855716753,5014003211720287491]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/specs-0.14.3/src/lib.rs","num":22,"id":{"name":"cfg_if","disambiguator":[8428017428351255032,13632600684367634806]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/specs-0.14.3/src/lib.rs","num":23,"id":{"name":"lazy_static","disambiguator":[5522065544787785916,13327173104205784552]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/specs-0.14.3/src/lib.rs","num":24,"id":{"name":"memoffset","disambiguator":[15249562182596042640,10337475170058500363]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/specs-0.14.3/src/lib.rs","num":25,"id":{"name":"scopeguard","disambiguator":[18367847936342523916,17856272224824384718]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/specs-0.14.3/src/lib.rs","num":26,"id":{"name":"libc","disambiguator":[2703259349667130902,12042406638146325142]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/specs-0.14.3/src/lib.rs","num":27,"id":{"name":"num_cpus","disambiguator":[12880995655777911732,1737882874999537385]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/specs-0.14.3/src/lib.rs","num":28,"id":{"name":"either","disambiguator":[7867466831161814912,8030271000223596351]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/specs-0.14.3/src/lib.rs","num":29,"id":{"name":"smallvec","disambiguator":[10733091904720612378,14160148108052151551]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/specs-0.14.3/src/lib.rs","num":30,"id":{"name":"serde","disambiguator":[981439461511807069,17258384571547190005]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/specs-0.14.3/src/lib.rs","num":31,"id":{"name":"serde_derive","disambiguator":[658740448506970560,9548512885115359140]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/specs-0.14.3/src/lib.rs","num":32,"id":{"name":"crossbeam","disambiguator":[17090885205971595976,18111427686235532709]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/specs-0.14.3/src/lib.rs","num":33,"id":{"name":"crossbeam_channel","disambiguator":[17041044574036611599,15775218773734672408]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/specs-0.14.3/src/lib.rs","num":34,"id":{"name":"crossbeam_epoch","disambiguator":[237740120750313442,11359131934145258885]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/specs-0.14.3/src/lib.rs","num":35,"id":{"name":"crossbeam_utils","disambiguator":[2902954816066387191,4766983559772434753]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/specs-0.14.3/src/lib.rs","num":36,"id":{"name":"crossbeam_utils","disambiguator":[15827932282516363150,9019940337044300554]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/specs-0.14.3/src/lib.rs","num":37,"id":{"name":"rand","disambiguator":[17862476655068260341,13924484820373126680]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/specs-0.14.3/src/lib.rs","num":38,"id":{"name":"rand_core","disambiguator":[3135301718310305142,15090421581954786214]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/specs-0.14.3/src/lib.rs","num":39,"id":{"name":"rand_core","disambiguator":[3597129564267641701,5899009172178551573]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/specs-0.14.3/src/lib.rs","num":40,"id":{"name":"parking_lot","disambiguator":[148815746447534527,1746079782183297785]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/specs-0.14.3/src/lib.rs","num":41,"id":{"name":"lock_api","disambiguator":[12193149692478609224,10667628448985489298]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/specs-0.14.3/src/lib.rs","num":42,"id":{"name":"owning_ref","disambiguator":[3166601931618651122,7520707719402454129]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/specs-0.14.3/src/lib.rs","num":43,"id":{"name":"stable_deref_trait","disambiguator":[6540487299081823801,424652279763379516]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/specs-0.14.3/src/lib.rs","num":44,"id":{"name":"parking_lot_core","disambiguator":[12331917579715522709,1680879910692558368]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/specs-0.14.3/src/lib.rs","num":45,"id":{"name":"crossbeam_deque","disambiguator":[9226264006426423347,14054189082551432222]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/specs-0.14.3/src/lib.rs","num":46,"id":{"name":"crossbeam_epoch","disambiguator":[3418091520617824527,4300722748670568860]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/specs-0.14.3/src/lib.rs","num":47,"id":{"name":"derivative","disambiguator":[10722131481831598316,797905810110983598]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/specs-0.14.3/src/lib.rs","num":48,"id":{"name":"fnv","disambiguator":[7758264454534985807,7201823991916608355]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/specs-0.14.3/src/lib.rs","num":49,"id":{"name":"hibitset","disambiguator":[17097374274343031941,2946697345903294275]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/specs-0.14.3/src/lib.rs","num":50,"id":{"name":"atom","disambiguator":[13423142934771749731,4610493859238226395]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/specs-0.14.3/src/lib.rs","num":51,"id":{"name":"log","disambiguator":[7181445017016618232,10688353778865861944]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/specs-0.14.3/src/lib.rs","num":52,"id":{"name":"nonzero_signed","disambiguator":[5490969274583929966,3510329917639178847]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/specs-0.14.3/src/lib.rs","num":53,"id":{"name":"shrev","disambiguator":[2790663122827583591,10311947744457329832]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/specs-0.14.3/src/lib.rs","num":54,"id":{"name":"tuple_utils","disambiguator":[8065717734727576455,14156873316110925816]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/specs-0.14.3/src/lib.rs","num":55,"id":{"name":"futures","disambiguator":[12790291843388985923,10182004181577351127]}}],"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":6678,"line_start":1,"line_end":239,"column_start":1,"column_end":89}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":380},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,106,111,105,110,47,109,111,100,46,114,115],"byte_start":26679,"byte_end":26686,"line_start":16,"line_end":16,"column_start":26,"column_end":33},"alias_span":null,"name":"ParJoin","value":"","parent":{"krate":0,"index":310}},{"kind":"Use","ref_id":{"krate":0,"index":384},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,106,111,105,110,47,109,111,100,46,114,115],"byte_start":26688,"byte_end":26699,"line_start":16,"line_end":16,"column_start":35,"column_end":46},"alias_span":null,"name":"JoinParIter","value":"","parent":{"krate":0,"index":310}},{"kind":"Use","ref_id":{"krate":49,"index":1046},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,112,114,101,108,117,100,101,46,114,115],"byte_start":46553,"byte_end":46559,"line_start":5,"line_end":5,"column_start":19,"column_end":25},"alias_span":null,"name":"BitSet","value":"","parent":{"krate":0,"index":486}},{"kind":"Use","ref_id":{"krate":0,"index":428},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,112,114,101,108,117,100,101,46,114,115],"byte_start":46575,"byte_end":46579,"line_start":6,"line_end":6,"column_start":15,"column_end":19},"alias_span":null,"name":"Join","value":"","parent":{"krate":0,"index":486}},{"kind":"Use","ref_id":{"krate":0,"index":380},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,112,114,101,108,117,100,101,46,114,115],"byte_start":46624,"byte_end":46631,"line_start":8,"line_end":8,"column_start":15,"column_end":22},"alias_span":null,"name":"ParJoin","value":"","parent":{"krate":0,"index":486}},{"kind":"Use","ref_id":{"krate":11,"index":818},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,112,114,101,108,117,100,101,46,114,115],"byte_start":46649,"byte_end":46657,"line_start":9,"line_end":9,"column_start":17,"column_end":25},"alias_span":null,"name":"Accessor","value":"","parent":{"krate":0,"index":486}},{"kind":"Use","ref_id":{"krate":11,"index":248},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,112,114,101,108,117,100,101,46,114,115],"byte_start":46659,"byte_end":46669,"line_start":9,"line_end":9,"column_start":27,"column_end":37},"alias_span":null,"name":"Dispatcher","value":"","parent":{"krate":0,"index":486}},{"kind":"Use","ref_id":{"krate":11,"index":1066},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,112,114,101,108,117,100,101,46,114,115],"byte_start":46671,"byte_end":46688,"line_start":9,"line_end":9,"column_start":39,"column_end":56},"alias_span":null,"name":"DispatcherBuilder","value":"","parent":{"krate":0,"index":486}},{"kind":"Use","ref_id":{"krate":11,"index":628},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,112,114,101,108,117,100,101,46,114,115],"byte_start":46690,"byte_end":46694,"line_start":9,"line_end":9,"column_start":58,"column_end":62},"alias_span":null,"name":"Read","value":"","parent":{"krate":0,"index":486}},{"kind":"Use","ref_id":{"krate":11,"index":696},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,112,114,101,108,117,100,101,46,114,115],"byte_start":46696,"byte_end":46706,"line_start":9,"line_end":9,"column_start":64,"column_end":74},"alias_span":null,"name":"ReadExpect","value":"","parent":{"krate":0,"index":486}},{"kind":"Use","ref_id":{"krate":11,"index":1214},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,112,114,101,108,117,100,101,46,114,115],"byte_start":46708,"byte_end":46717,"line_start":9,"line_end":9,"column_start":76,"column_end":85},"alias_span":null,"name":"Resources","value":"","parent":{"krate":0,"index":486}},{"kind":"Use","ref_id":{"krate":11,"index":852},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,112,114,101,108,117,100,101,46,114,115],"byte_start":46719,"byte_end":46725,"line_start":9,"line_end":9,"column_start":87,"column_end":93},"alias_span":null,"name":"RunNow","value":"","parent":{"krate":0,"index":486}},{"kind":"Use","ref_id":{"krate":11,"index":1232},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,112,114,101,108,117,100,101,46,114,115],"byte_start":46743,"byte_end":46757,"line_start":10,"line_end":10,"column_start":17,"column_end":31},"alias_span":null,"name":"StaticAccessor","value":"","parent":{"krate":0,"index":486}},{"kind":"Use","ref_id":{"krate":11,"index":868},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,112,114,101,108,117,100,101,46,114,115],"byte_start":46759,"byte_end":46765,"line_start":10,"line_end":10,"column_start":33,"column_end":39},"alias_span":null,"name":"System","value":"","parent":{"krate":0,"index":486}},{"kind":"Use","ref_id":{"krate":11,"index":882},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,112,114,101,108,117,100,101,46,114,115],"byte_start":46767,"byte_end":46777,"line_start":10,"line_end":10,"column_start":41,"column_end":51},"alias_span":null,"name":"SystemData","value":"","parent":{"krate":0,"index":486}},{"kind":"Use","ref_id":{"krate":11,"index":650},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,112,114,101,108,117,100,101,46,114,115],"byte_start":46779,"byte_end":46784,"line_start":10,"line_end":10,"column_start":53,"column_end":58},"alias_span":null,"name":"Write","value":"","parent":{"krate":0,"index":486}},{"kind":"Use","ref_id":{"krate":11,"index":698},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,112,114,101,108,117,100,101,46,114,115],"byte_start":46786,"byte_end":46797,"line_start":10,"line_end":10,"column_start":60,"column_end":71},"alias_span":null,"name":"WriteExpect","value":"","parent":{"krate":0,"index":486}},{"kind":"Use","ref_id":{"krate":53,"index":296},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,112,114,101,108,117,100,101,46,114,115],"byte_start":46815,"byte_end":46823,"line_start":11,"line_end":11,"column_start":16,"column_end":24},"alias_span":null,"name":"ReaderId","value":"","parent":{"krate":0,"index":486}},{"kind":"Use","ref_id":{"krate":16,"index":3482},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,112,114,101,108,117,100,101,46,114,115],"byte_start":46876,"byte_end":46892,"line_start":14,"line_end":14,"column_start":22,"column_end":38},"alias_span":null,"name":"ParallelIterator","value":"","parent":{"krate":0,"index":486}},{"kind":"Use","ref_id":{"krate":11,"index":138},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,112,114,101,108,117,100,101,46,114,115],"byte_start":46938,"byte_end":46953,"line_start":16,"line_end":16,"column_start":16,"column_end":31},"alias_span":null,"name":"AsyncDispatcher","value":"","parent":{"krate":0,"index":486}},{"kind":"Use","ref_id":{"krate":0,"index":2002},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,112,114,101,108,117,100,101,46,114,115],"byte_start":46975,"byte_end":46984,"line_start":18,"line_end":18,"column_start":20,"column_end":29},"alias_span":null,"name":"ChangeSet","value":"","parent":{"krate":0,"index":486}},{"kind":"Use","ref_id":{"krate":0,"index":2530},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,112,114,101,108,117,100,101,46,114,115],"byte_start":47009,"byte_end":47024,"line_start":20,"line_end":20,"column_start":5,"column_end":20},"alias_span":null,"name":"DenseVecStorage","value":"","parent":{"krate":0,"index":486}},{"kind":"Use","ref_id":{"krate":0,"index":780},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,112,114,101,108,117,100,101,46,114,115],"byte_start":47026,"byte_end":47040,"line_start":20,"line_end":20,"column_start":22,"column_end":36},"alias_span":null,"name":"FlaggedStorage","value":"","parent":{"krate":0,"index":486}},{"kind":"Use","ref_id":{"krate":0,"index":2524},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,112,114,101,108,117,100,101,46,114,115],"byte_start":47042,"byte_end":47056,"line_start":20,"line_end":20,"column_start":38,"column_end":52},"alias_span":null,"name":"HashMapStorage","value":"","parent":{"krate":0,"index":486}},{"kind":"Use","ref_id":{"krate":0,"index":1068},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,112,114,101,108,117,100,101,46,114,115],"byte_start":47058,"byte_end":47069,"line_start":20,"line_end":20,"column_start":54,"column_end":65},"alias_span":null,"name":"NullStorage","value":"","parent":{"krate":0,"index":486}},{"kind":"Use","ref_id":{"krate":0,"index":702},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,112,114,101,108,117,100,101,46,114,115],"byte_start":47071,"byte_end":47082,"line_start":20,"line_end":20,"column_start":67,"column_end":78},"alias_span":null,"name":"ReadStorage","value":"","parent":{"krate":0,"index":486}},{"kind":"Use","ref_id":{"krate":0,"index":1268},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,112,114,101,108,117,100,101,46,114,115],"byte_start":47084,"byte_end":47091,"line_start":20,"line_end":20,"column_start":80,"column_end":87},"alias_span":null,"name":"Storage","value":"","parent":{"krate":0,"index":486}},{"kind":"Use","ref_id":{"krate":0,"index":1138},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,112,114,101,108,117,100,101,46,114,115],"byte_start":47093,"byte_end":47100,"line_start":20,"line_end":20,"column_start":89,"column_end":96},"alias_span":null,"name":"Tracked","value":"","parent":{"krate":0,"index":486}},{"kind":"Use","ref_id":{"krate":0,"index":2536},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,112,114,101,108,117,100,101,46,114,115],"byte_start":47106,"byte_end":47116,"line_start":21,"line_end":21,"column_start":5,"column_end":15},"alias_span":null,"name":"VecStorage","value":"","parent":{"krate":0,"index":486}},{"kind":"Use","ref_id":{"krate":0,"index":714},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,112,114,101,108,117,100,101,46,114,115],"byte_start":47118,"byte_end":47130,"line_start":21,"line_end":21,"column_start":17,"column_end":29},"alias_span":null,"name":"WriteStorage","value":"","parent":{"krate":0,"index":486}},{"kind":"Use","ref_id":{"krate":0,"index":2542},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,112,114,101,108,117,100,101,46,114,115],"byte_start":47132,"byte_end":47146,"line_start":21,"line_end":21,"column_start":31,"column_end":45},"alias_span":null,"name":"ComponentEvent","value":"","parent":{"krate":0,"index":486}},{"kind":"Use","ref_id":{"krate":0,"index":1664},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,112,114,101,108,117,100,101,46,114,115],"byte_start":47167,"byte_end":47174,"line_start":23,"line_end":23,"column_start":17,"column_end":24},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":486}},{"kind":"Use","ref_id":{"krate":0,"index":1430},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,112,114,101,108,117,100,101,46,114,115],"byte_start":47176,"byte_end":47185,"line_start":23,"line_end":23,"column_start":26,"column_end":35},"alias_span":null,"name":"Component","value":"","parent":{"krate":0,"index":486}},{"kind":"Use","ref_id":{"krate":0,"index":1468},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,112,114,101,108,117,100,101,46,114,115],"byte_start":47187,"byte_end":47195,"line_start":23,"line_end":23,"column_start":37,"column_end":45},"alias_span":null,"name":"Entities","value":"","parent":{"krate":0,"index":486}},{"kind":"Use","ref_id":{"krate":0,"index":2570},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,112,114,101,108,117,100,101,46,114,115],"byte_start":47197,"byte_end":47203,"line_start":23,"line_end":23,"column_start":47,"column_end":53},"alias_span":null,"name":"Entity","value":"","parent":{"krate":0,"index":486}},{"kind":"Use","ref_id":{"krate":0,"index":1670},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,112,114,101,108,117,100,101,46,114,115],"byte_start":47205,"byte_end":47218,"line_start":23,"line_end":23,"column_start":55,"column_end":68},"alias_span":null,"name":"EntityBuilder","value":"","parent":{"krate":0,"index":486}},{"kind":"Use","ref_id":{"krate":0,"index":2696},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,112,114,101,108,117,100,101,46,114,115],"byte_start":47220,"byte_end":47230,"line_start":23,"line_end":23,"column_start":70,"column_end":80},"alias_span":null,"name":"LazyUpdate","value":"","parent":{"krate":0,"index":486}},{"kind":"Use","ref_id":{"krate":0,"index":1682},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,112,114,101,108,117,100,101,46,114,115],"byte_start":47232,"byte_end":47237,"line_start":23,"line_end":23,"column_start":82,"column_end":87},"alias_span":null,"name":"World","value":"","parent":{"krate":0,"index":486}},{"kind":"Use","ref_id":{"krate":0,"index":702},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":47334,"byte_end":47345,"line_start":3,"line_end":3,"column_start":22,"column_end":33},"alias_span":null,"name":"ReadStorage","value":"","parent":{"krate":0,"index":566}},{"kind":"Use","ref_id":{"krate":0,"index":714},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":47347,"byte_end":47359,"line_start":3,"line_end":3,"column_start":35,"column_end":47},"alias_span":null,"name":"WriteStorage","value":"","parent":{"krate":0,"index":566}},{"kind":"Use","ref_id":{"krate":0,"index":780},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":47385,"byte_end":47399,"line_start":4,"line_end":4,"column_start":24,"column_end":38},"alias_span":null,"name":"FlaggedStorage","value":"","parent":{"krate":0,"index":566}},{"kind":"Use","ref_id":{"krate":0,"index":822},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":47425,"byte_end":47443,"line_start":5,"line_end":5,"column_start":25,"column_end":43},"alias_span":null,"name":"GenericReadStorage","value":"","parent":{"krate":0,"index":566}},{"kind":"Use","ref_id":{"krate":0,"index":862},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":47445,"byte_end":47464,"line_start":5,"line_end":5,"column_start":45,"column_end":64},"alias_span":null,"name":"GenericWriteStorage","value":"","parent":{"krate":0,"index":566}},{"kind":"Use","ref_id":{"krate":0,"index":944},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":47497,"byte_end":47525,"line_start":7,"line_end":7,"column_start":5,"column_end":33},"alias_span":null,"name":"ImmutableParallelRestriction","value":"","parent":{"krate":0,"index":566}},{"kind":"Use","ref_id":{"krate":0,"index":942},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":47527,"byte_end":47553,"line_start":7,"line_end":7,"column_start":35,"column_end":61},"alias_span":null,"name":"MutableParallelRestriction","value":"","parent":{"krate":0,"index":566}},{"kind":"Use","ref_id":{"krate":0,"index":952},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":47555,"byte_end":47572,"line_start":7,"line_end":7,"column_start":63,"column_end":80},"alias_span":null,"name":"RestrictedStorage","value":"","parent":{"krate":0,"index":566}},{"kind":"Use","ref_id":{"krate":0,"index":940},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":47578,"byte_end":47599,"line_start":8,"line_end":8,"column_start":5,"column_end":26},"alias_span":null,"name":"SequentialRestriction","value":"","parent":{"krate":0,"index":566}},{"kind":"Use","ref_id":{"krate":0,"index":2518},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":47691,"byte_end":47703,"line_start":12,"line_end":12,"column_start":26,"column_end":38},"alias_span":null,"name":"BTreeStorage","value":"","parent":{"krate":0,"index":566}},{"kind":"Use","ref_id":{"krate":0,"index":2530},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":47705,"byte_end":47720,"line_start":12,"line_end":12,"column_start":40,"column_end":55},"alias_span":null,"name":"DenseVecStorage","value":"","parent":{"krate":0,"index":566}},{"kind":"Use","ref_id":{"krate":0,"index":2524},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":47722,"byte_end":47736,"line_start":12,"line_end":12,"column_start":57,"column_end":71},"alias_span":null,"name":"HashMapStorage","value":"","parent":{"krate":0,"index":566}},{"kind":"Use","ref_id":{"krate":0,"index":1068},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":47738,"byte_end":47749,"line_start":12,"line_end":12,"column_start":73,"column_end":84},"alias_span":null,"name":"NullStorage","value":"","parent":{"krate":0,"index":566}},{"kind":"Use","ref_id":{"krate":0,"index":2536},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":47751,"byte_end":47761,"line_start":12,"line_end":12,"column_start":86,"column_end":96},"alias_span":null,"name":"VecStorage","value":"","parent":{"krate":0,"index":566}},{"kind":"Use","ref_id":{"krate":0,"index":2542},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":47786,"byte_end":47800,"line_start":13,"line_end":13,"column_start":23,"column_end":37},"alias_span":null,"name":"ComponentEvent","value":"","parent":{"krate":0,"index":566}},{"kind":"Use","ref_id":{"krate":0,"index":1138},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":47802,"byte_end":47809,"line_start":13,"line_end":13,"column_start":39,"column_end":46},"alias_span":null,"name":"Tracked","value":"","parent":{"krate":0,"index":566}},{"kind":"Use","ref_id":{"krate":0,"index":1170},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":47834,"byte_end":47841,"line_start":14,"line_end":14,"column_start":23,"column_end":30},"alias_span":null,"name":"Entries","value":"","parent":{"krate":0,"index":566}},{"kind":"Use","ref_id":{"krate":0,"index":1186},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":47843,"byte_end":47856,"line_start":14,"line_end":14,"column_start":32,"column_end":45},"alias_span":null,"name":"OccupiedEntry","value":"","parent":{"krate":0,"index":566}},{"kind":"Use","ref_id":{"krate":0,"index":1202},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":47858,"byte_end":47869,"line_start":14,"line_end":14,"column_start":47,"column_end":58},"alias_span":null,"name":"VacantEntry","value":"","parent":{"krate":0,"index":566}},{"kind":"Use","ref_id":{"krate":0,"index":1208},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":47871,"byte_end":47883,"line_start":14,"line_end":14,"column_start":60,"column_end":72},"alias_span":null,"name":"StorageEntry","value":"","parent":{"krate":0,"index":566}},{"kind":"Use","ref_id":{"krate":0,"index":1430},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,109,111,100,46,114,115],"byte_start":106816,"byte_end":106825,"line_start":3,"line_end":3,"column_start":21,"column_end":30},"alias_span":null,"name":"Component","value":"","parent":{"krate":0,"index":1364}},{"kind":"Use","ref_id":{"krate":0,"index":1494},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,109,111,100,46,114,115],"byte_start":106850,"byte_end":106866,"line_start":4,"line_end":4,"column_start":24,"column_end":40},"alias_span":null,"name":"CreateIterAtomic","value":"","parent":{"krate":0,"index":1364}},{"kind":"Use","ref_id":{"krate":0,"index":1468},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,109,111,100,46,114,115],"byte_start":106868,"byte_end":106876,"line_start":4,"line_end":4,"column_start":42,"column_end":50},"alias_span":null,"name":"Entities","value":"","parent":{"krate":0,"index":1364}},{"kind":"Use","ref_id":{"krate":0,"index":2612},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,109,111,100,46,114,115],"byte_start":106878,"byte_end":106889,"line_start":4,"line_end":4,"column_start":52,"column_end":63},"alias_span":null,"name":"EntitiesRes","value":"","parent":{"krate":0,"index":1364}},{"kind":"Use","ref_id":{"krate":0,"index":2570},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,109,111,100,46,114,115],"byte_start":106891,"byte_end":106897,"line_start":4,"line_end":4,"column_start":65,"column_end":71},"alias_span":null,"name":"Entity","value":"","parent":{"krate":0,"index":1364}},{"kind":"Use","ref_id":{"krate":0,"index":1536},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,109,111,100,46,114,115],"byte_start":106899,"byte_end":106915,"line_start":4,"line_end":4,"column_start":73,"column_end":89},"alias_span":null,"name":"EntityResBuilder","value":"","parent":{"krate":0,"index":1364}},{"kind":"Use","ref_id":{"krate":0,"index":2622},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,109,111,100,46,114,115],"byte_start":106940,"byte_end":106950,"line_start":5,"line_end":5,"column_start":24,"column_end":34},"alias_span":null,"name":"Generation","value":"","parent":{"krate":0,"index":1364}},{"kind":"Use","ref_id":{"krate":0,"index":1466},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,109,111,100,46,114,115],"byte_start":106952,"byte_end":106957,"line_start":5,"line_end":5,"column_start":36,"column_end":41},"alias_span":null,"name":"Index","value":"","parent":{"krate":0,"index":1364}},{"kind":"Use","ref_id":{"krate":0,"index":1614},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,109,111,100,46,114,115],"byte_start":106981,"byte_end":106992,"line_start":6,"line_end":6,"column_start":22,"column_end":33},"alias_span":null,"name":"LazyBuilder","value":"","parent":{"krate":0,"index":1364}},{"kind":"Use","ref_id":{"krate":0,"index":2696},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,109,111,100,46,114,115],"byte_start":106994,"byte_end":107004,"line_start":6,"line_end":6,"column_start":35,"column_end":45},"alias_span":null,"name":"LazyUpdate","value":"","parent":{"krate":0,"index":1364}},{"kind":"Use","ref_id":{"krate":49,"index":1046},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6069,"byte_end":6075,"line_start":225,"line_end":225,"column_start":19,"column_end":25},"alias_span":null,"name":"BitSet","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":428},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6091,"byte_end":6095,"line_start":226,"line_end":226,"column_start":15,"column_end":19},"alias_span":null,"name":"Join","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":380},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6140,"byte_end":6147,"line_start":228,"line_end":228,"column_start":15,"column_end":22},"alias_span":null,"name":"ParJoin","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":11,"index":818},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6165,"byte_end":6173,"line_start":229,"line_end":229,"column_start":17,"column_end":25},"alias_span":null,"name":"Accessor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":11,"index":248},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6175,"byte_end":6185,"line_start":229,"line_end":229,"column_start":27,"column_end":37},"alias_span":null,"name":"Dispatcher","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":11,"index":1066},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6187,"byte_end":6204,"line_start":229,"line_end":229,"column_start":39,"column_end":56},"alias_span":null,"name":"DispatcherBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":11,"index":628},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6206,"byte_end":6210,"line_start":229,"line_end":229,"column_start":58,"column_end":62},"alias_span":null,"name":"Read","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":11,"index":696},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6212,"byte_end":6222,"line_start":229,"line_end":229,"column_start":64,"column_end":74},"alias_span":null,"name":"ReadExpect","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":11,"index":1214},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6224,"byte_end":6233,"line_start":229,"line_end":229,"column_start":76,"column_end":85},"alias_span":null,"name":"Resources","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":11,"index":852},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6235,"byte_end":6241,"line_start":229,"line_end":229,"column_start":87,"column_end":93},"alias_span":null,"name":"RunNow","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":11,"index":1232},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6259,"byte_end":6273,"line_start":230,"line_end":230,"column_start":17,"column_end":31},"alias_span":null,"name":"StaticAccessor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":11,"index":868},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6275,"byte_end":6281,"line_start":230,"line_end":230,"column_start":33,"column_end":39},"alias_span":null,"name":"System","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":11,"index":882},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6283,"byte_end":6293,"line_start":230,"line_end":230,"column_start":41,"column_end":51},"alias_span":null,"name":"SystemData","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":11,"index":650},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6295,"byte_end":6300,"line_start":230,"line_end":230,"column_start":53,"column_end":58},"alias_span":null,"name":"Write","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":11,"index":698},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6302,"byte_end":6313,"line_start":230,"line_end":230,"column_start":60,"column_end":71},"alias_span":null,"name":"WriteExpect","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":53,"index":296},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6331,"byte_end":6339,"line_start":231,"line_end":231,"column_start":16,"column_end":24},"alias_span":null,"name":"ReaderId","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":11,"index":138},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6386,"byte_end":6401,"line_start":234,"line_end":234,"column_start":16,"column_end":31},"alias_span":null,"name":"AsyncDispatcher","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2002},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6423,"byte_end":6432,"line_start":236,"line_end":236,"column_start":20,"column_end":29},"alias_span":null,"name":"ChangeSet","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2530},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6452,"byte_end":6467,"line_start":237,"line_end":237,"column_start":19,"column_end":34},"alias_span":null,"name":"DenseVecStorage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":780},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6469,"byte_end":6483,"line_start":237,"line_end":237,"column_start":36,"column_end":50},"alias_span":null,"name":"FlaggedStorage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2524},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6485,"byte_end":6499,"line_start":237,"line_end":237,"column_start":52,"column_end":66},"alias_span":null,"name":"HashMapStorage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1068},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6501,"byte_end":6512,"line_start":237,"line_end":237,"column_start":68,"column_end":79},"alias_span":null,"name":"NullStorage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":702},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6514,"byte_end":6525,"line_start":237,"line_end":237,"column_start":81,"column_end":92},"alias_span":null,"name":"ReadStorage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1268},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6527,"byte_end":6534,"line_start":237,"line_end":237,"column_start":94,"column_end":101},"alias_span":null,"name":"Storage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1138},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6536,"byte_end":6543,"line_start":237,"line_end":237,"column_start":103,"column_end":110},"alias_span":null,"name":"Tracked","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2536},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6545,"byte_end":6555,"line_start":237,"line_end":237,"column_start":112,"column_end":122},"alias_span":null,"name":"VecStorage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":714},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6575,"byte_end":6587,"line_start":238,"line_end":238,"column_start":19,"column_end":31},"alias_span":null,"name":"WriteStorage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1664},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6606,"byte_end":6613,"line_start":239,"line_end":239,"column_start":17,"column_end":24},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1430},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6615,"byte_end":6624,"line_start":239,"line_end":239,"column_start":26,"column_end":35},"alias_span":null,"name":"Component","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1468},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6626,"byte_end":6634,"line_start":239,"line_end":239,"column_start":37,"column_end":45},"alias_span":null,"name":"Entities","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2570},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6636,"byte_end":6642,"line_start":239,"line_end":239,"column_start":47,"column_end":53},"alias_span":null,"name":"Entity","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1670},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6644,"byte_end":6657,"line_start":239,"line_end":239,"column_start":55,"column_end":68},"alias_span":null,"name":"EntityBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2696},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6659,"byte_end":6669,"line_start":239,"line_end":239,"column_start":70,"column_end":80},"alias_span":null,"name":"LazyUpdate","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1682},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6671,"byte_end":6676,"line_start":239,"line_end":239,"column_start":82,"column_end":87},"alias_span":null,"name":"World","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":6678,"line_start":1,"line_end":239,"column_start":1,"column_end":89},"name":"","qualname":"::","value":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/specs-0.14.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":16},{"krate":0,"index":18},{"krate":0,"index":20},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":26},{"krate":0,"index":28},{"krate":0,"index":30},{"krate":0,"index":134},{"krate":0,"index":160},{"krate":0,"index":234},{"krate":0,"index":310},{"krate":0,"index":486},{"krate":0,"index":566},{"krate":0,"index":1364},{"krate":0,"index":1756},{"krate":0,"index":1758},{"krate":0,"index":1760},{"krate":0,"index":1762},{"krate":0,"index":1788},{"krate":0,"index":1790},{"krate":0,"index":1792},{"krate":0,"index":1794},{"krate":0,"index":1814}],"decl_id":null,"docs":" # SPECS Parallel ECS","sig":null,"attributes":[{"value":"warn(missing_docs)","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":22,"line_start":1,"line_end":1,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":30},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,99,111,109,109,111,110,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"common","qualname":"::common","value":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/specs-0.14.3/src/common.rs","parent":null,"children":[{"krate":0,"index":32},{"krate":0,"index":34},{"krate":0,"index":36},{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":42},{"krate":0,"index":50},{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":60},{"krate":0,"index":68},{"krate":0,"index":70},{"krate":0,"index":78},{"krate":0,"index":1830},{"krate":0,"index":1832},{"krate":0,"index":80},{"krate":0,"index":1836},{"krate":0,"index":1838},{"krate":0,"index":86},{"krate":0,"index":90},{"krate":0,"index":1842},{"krate":0,"index":1844},{"krate":0,"index":112},{"krate":0,"index":116},{"krate":0,"index":124},{"krate":0,"index":126},{"krate":0,"index":130},{"krate":0,"index":132}],"decl_id":null,"docs":" Common functionality between crates using specs.","sig":null,"attributes":[{"value":"cfg(feature = \"common\")","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5852,"byte_end":5878,"line_start":211,"line_end":211,"column_start":1,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":78},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,99,111,109,109,111,110,46,114,115],"byte_start":7736,"byte_end":7747,"line_start":36,"line_end":36,"column_start":10,"column_end":21},"name":"BoxedFuture","qualname":"::common::BoxedFuture","value":"Box<Future<Item = T, Error = BoxedErr> + Send + Sync + 'static>","parent":null,"children":[],"decl_id":null,"docs":" A boxed, thread-safe future with `T` as item and `BoxedErr` as error type.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1830},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,99,111,109,109,111,110,46,114,115],"byte_start":7934,"byte_end":7945,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"name":"DrainErrors","qualname":"::common::DrainErrors","value":"DrainErrors {  }","parent":null,"children":[{"krate":0,"index":783}],"decl_id":null,"docs":" A draining iterator for `Errors`.\n This is the return value of `Errors::drain`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1836},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,99,111,109,109,111,110,46,114,115],"byte_start":8319,"byte_end":8325,"line_start":56,"line_end":56,"column_start":12,"column_end":18},"name":"Errors","qualname":"::common::Errors","value":"Errors {  }","parent":null,"children":[{"krate":0,"index":787}],"decl_id":null,"docs":" A resource you can use to store errors that occurred outside of\n the ECS but were catched inside, therefore should be handled by the user.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,99,111,109,109,111,110,46,114,115],"byte_start":8549,"byte_end":8552,"line_start":69,"line_end":69,"column_start":12,"column_end":15},"name":"new","qualname":"<Errors>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of `Errors`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,99,111,109,109,111,110,46,114,115],"byte_start":8692,"byte_end":8695,"line_start":76,"line_end":76,"column_start":12,"column_end":15},"name":"add","qualname":"<Errors>::add","value":"fn (&self, error: BoxedErr) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Add an error to the error collection.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,99,111,109,109,111,110,46,114,115],"byte_start":9398,"byte_end":9405,"line_start":99,"line_end":99,"column_start":12,"column_end":19},"name":"execute","qualname":"<Errors>::execute","value":"fn <E, F> (&self, f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" A convenience method which allows nicer error handling.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,99,111,109,109,111,110,46,114,115],"byte_start":9676,"byte_end":9685,"line_start":110,"line_end":110,"column_start":12,"column_end":21},"name":"has_error","qualname":"<Errors>::has_error","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the queue contains at least one error.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,99,111,109,109,111,110,46,114,115],"byte_start":9801,"byte_end":9808,"line_start":115,"line_end":115,"column_start":12,"column_end":19},"name":"pop_err","qualname":"<Errors>::pop_err","value":"fn (&mut self) -> Option<BoxedErr>","parent":null,"children":[],"decl_id":null,"docs":" Removes the first error from the queue.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,99,111,109,109,111,110,46,114,115],"byte_start":9987,"byte_end":9992,"line_start":121,"line_end":121,"column_start":12,"column_end":17},"name":"drain","qualname":"<Errors>::drain","value":"fn (&mut self) -> DrainErrors","parent":null,"children":[],"decl_id":null,"docs":" Returns a draining iterator, removing elements\n on each call to `Iterator::next`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,99,111,109,109,111,110,46,114,115],"byte_start":10149,"byte_end":10156,"line_start":128,"line_end":128,"column_start":12,"column_end":19},"name":"collect","qualname":"<Errors>::collect","value":"fn (&mut self) -> Vec<BoxedErr>","parent":null,"children":[],"decl_id":null,"docs":" Collect all errors into a `Vec`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,99,111,109,109,111,110,46,114,115],"byte_start":10325,"byte_end":10339,"line_start":133,"line_end":133,"column_start":12,"column_end":26},"name":"print_and_exit","qualname":"<Errors>::print_and_exit","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Prints all errors and exits in case there's been an error. Useful for debugging.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1842},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,99,111,109,109,111,110,46,114,115],"byte_start":11250,"byte_end":11255,"line_start":169,"line_end":169,"column_start":12,"column_end":17},"name":"Merge","qualname":"::common::Merge","value":"Merge {  }","parent":null,"children":[{"krate":0,"index":791},{"krate":0,"index":793}],"decl_id":null,"docs":" A system which merges `Ready` futures into the persistent storage.\n Please note that your `World` has to contain a component storage\n for `F` and `F::Item`.","sig":null,"attributes":[{"value":"derivative(Default(bound = \"\"))","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,99,111,109,109,111,110,46,114,115],"byte_start":11204,"byte_end":11238,"line_start":168,"line_end":168,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,99,111,109,109,111,110,46,114,115],"byte_start":11450,"byte_end":11453,"line_start":177,"line_end":177,"column_start":12,"column_end":15},"name":"new","qualname":"<Merge<F>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new merge system.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":160},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,99,104,97,110,103,101,115,101,116,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"changeset","qualname":"::changeset","value":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/specs-0.14.3/src/changeset.rs","parent":null,"children":[{"krate":0,"index":162},{"krate":0,"index":164},{"krate":0,"index":166},{"krate":0,"index":168},{"krate":0,"index":170},{"krate":0,"index":176},{"krate":0,"index":2002},{"krate":0,"index":2004},{"krate":0,"index":182},{"krate":0,"index":190},{"krate":0,"index":194},{"krate":0,"index":198},{"krate":0,"index":210},{"krate":0,"index":222}],"decl_id":null,"docs":" Provides a changeset that can be collected from an iterator.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2002},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,99,104,97,110,103,101,115,101,116,46,114,115],"byte_start":18936,"byte_end":18945,"line_start":44,"line_end":44,"column_start":12,"column_end":21},"name":"ChangeSet","qualname":"::changeset::ChangeSet","value":"ChangeSet {  }","parent":null,"children":[{"krate":0,"index":867},{"krate":0,"index":869}],"decl_id":null,"docs":" Change set that can be collected from an iterator, and joined on for easy application to\n components.","sig":null,"attributes":[{"value":"derivative(Default(bound = \"\"))","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,99,104,97,110,103,101,115,101,116,46,114,115],"byte_start":18890,"byte_end":18924,"line_start":43,"line_end":43,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,99,104,97,110,103,101,115,101,116,46,114,115],"byte_start":19069,"byte_end":19072,"line_start":51,"line_end":51,"column_start":12,"column_end":15},"name":"new","qualname":"<ChangeSet<T>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new change set\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,99,104,97,110,103,101,115,101,116,46,114,115],"byte_start":19273,"byte_end":19276,"line_start":57,"line_end":57,"column_start":12,"column_end":15},"name":"add","qualname":"<ChangeSet<T>>::add","value":"fn (&mut self, entity: Entity, value: T) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Add a value to the change set. If the entity already have a value in the change set, the\n incoming value will be added to that.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,99,104,97,110,103,101,115,101,116,46,114,115],"byte_start":19694,"byte_end":19699,"line_start":74,"line_end":74,"column_start":12,"column_end":17},"name":"clear","qualname":"<ChangeSet<T>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clear the changeset\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":234},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/specs-0.14.3/src/error.rs","parent":null,"children":[{"krate":0,"index":236},{"krate":0,"index":238},{"krate":0,"index":248},{"krate":0,"index":254},{"krate":0,"index":256},{"krate":0,"index":260},{"krate":0,"index":264},{"krate":0,"index":268},{"krate":0,"index":272},{"krate":0,"index":2008},{"krate":0,"index":2010},{"krate":0,"index":276},{"krate":0,"index":280},{"krate":0,"index":284},{"krate":0,"index":288},{"krate":0,"index":2014},{"krate":0,"index":2026},{"krate":0,"index":2020},{"krate":0,"index":2016},{"krate":0,"index":294},{"krate":0,"index":298},{"krate":0,"index":2030},{"krate":0,"index":2040},{"krate":0,"index":2036},{"krate":0,"index":2032},{"krate":0,"index":302},{"krate":0,"index":306}],"decl_id":null,"docs":" Specs errors","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":254},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":22937,"byte_end":22945,"line_start":13,"line_end":13,"column_start":12,"column_end":20},"name":"BoxedErr","qualname":"::error::BoxedErr","value":"","parent":null,"children":[],"decl_id":null,"docs":" A boxed error implementing `Debug`, `Display` and `Error`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":23053,"byte_end":23056,"line_start":17,"line_end":17,"column_start":12,"column_end":15},"name":"new","qualname":"<BoxedErr>::new","value":"fn <T> (err: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new boxed error.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":873},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":23977,"byte_end":23983,"line_start":59,"line_end":59,"column_start":5,"column_end":11},"name":"Custom","qualname":"::error::Error::Custom","value":"Error::Custom(BoxedErr)","parent":{"krate":0,"index":2008},"children":[],"decl_id":null,"docs":" A custom, boxed error.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":877},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":24031,"byte_end":24046,"line_start":61,"line_end":61,"column_start":5,"column_end":20},"name":"WrongGeneration","qualname":"::error::Error::WrongGeneration","value":"Error::WrongGeneration(WrongGeneration)","parent":{"krate":0,"index":2008},"children":[],"decl_id":null,"docs":" Wrong generation error.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":881},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":24089,"byte_end":24104,"line_start":64,"line_end":64,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::error::Error::__NonExhaustive","value":"Error::__NonExhaustive","parent":{"krate":0,"index":2008},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2008},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":23934,"byte_end":23939,"line_start":57,"line_end":57,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"Error::{Custom, WrongGeneration, __NonExhaustive}","parent":null,"children":[{"krate":0,"index":873},{"krate":0,"index":877},{"krate":0,"index":881}],"decl_id":null,"docs":" The Specs error type.\n This is an enum which is able to represent\n all error types of this library.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2014},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":25075,"byte_end":25090,"line_start":109,"line_end":109,"column_start":12,"column_end":27},"name":"WrongGeneration","qualname":"::error::WrongGeneration","value":"WrongGeneration { action, actual_gen, entity }","parent":null,"children":[{"krate":0,"index":883},{"krate":0,"index":885},{"krate":0,"index":887}],"decl_id":null,"docs":" Wrong generation error.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":25064,"byte_end":25381,"line_start":109,"line_end":117,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":883},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":25165,"byte_end":25171,"line_start":111,"line_end":111,"column_start":9,"column_end":15},"name":"action","qualname":"::error::WrongGeneration::action","value":"&'static str","parent":{"krate":0,"index":2014},"children":[],"decl_id":null,"docs":" The action that failed because of the wrong generation.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":885},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":25237,"byte_end":25247,"line_start":113,"line_end":113,"column_start":9,"column_end":19},"name":"actual_gen","qualname":"::error::WrongGeneration::actual_gen","value":"world::entity::Generation","parent":{"krate":0,"index":2014},"children":[],"decl_id":null,"docs":" The actual generation of this id.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":887},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":25364,"byte_end":25370,"line_start":116,"line_end":116,"column_start":9,"column_end":15},"name":"entity","qualname":"::error::WrongGeneration::entity","value":"world::entity::Entity","parent":{"krate":0,"index":2014},"children":[],"decl_id":null,"docs":" The entity that has been passed, containing\n the id and the invalid generation.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2030},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":26037,"byte_end":26044,"line_start":140,"line_end":140,"column_start":10,"column_end":17},"name":"NoError","qualname":"::error::NoError","value":"NoError::{}","parent":null,"children":[],"decl_id":null,"docs":" An error type which cannot be instantiated.\n Used as a placeholder for associated error types if\n something cannot fail.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":26028,"byte_end":26047,"line_start":140,"line_end":140,"column_start":1,"column_end":20}}]},{"kind":"Mod","id":{"krate":0,"index":310},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,106,111,105,110,47,109,111,100,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"join","qualname":"::join","value":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/specs-0.14.3/src/join/mod.rs","parent":null,"children":[{"krate":0,"index":312},{"krate":0,"index":314},{"krate":0,"index":324},{"krate":0,"index":330},{"krate":0,"index":332},{"krate":0,"index":348},{"krate":0,"index":356},{"krate":0,"index":408},{"krate":0,"index":414},{"krate":0,"index":420},{"krate":0,"index":426},{"krate":0,"index":2044},{"krate":0,"index":2050},{"krate":0,"index":2056},{"krate":0,"index":2062},{"krate":0,"index":2068},{"krate":0,"index":2074},{"krate":0,"index":2080},{"krate":0,"index":2086},{"krate":0,"index":2092},{"krate":0,"index":2098},{"krate":0,"index":2104},{"krate":0,"index":2110},{"krate":0,"index":2116},{"krate":0,"index":2122},{"krate":0,"index":2128},{"krate":0,"index":428},{"krate":0,"index":446},{"krate":0,"index":448},{"krate":0,"index":462},{"krate":0,"index":464},{"krate":0,"index":468},{"krate":0,"index":474},{"krate":0,"index":480},{"krate":0,"index":2134},{"krate":0,"index":2148},{"krate":0,"index":2150},{"krate":0,"index":2164},{"krate":0,"index":2166},{"krate":0,"index":2180},{"krate":0,"index":2182},{"krate":0,"index":2196},{"krate":0,"index":2198},{"krate":0,"index":2212},{"krate":0,"index":2214},{"krate":0,"index":2228},{"krate":0,"index":2230},{"krate":0,"index":2244},{"krate":0,"index":2246},{"krate":0,"index":2260},{"krate":0,"index":2262},{"krate":0,"index":2276},{"krate":0,"index":2278},{"krate":0,"index":2292},{"krate":0,"index":2294},{"krate":0,"index":2308},{"krate":0,"index":2310},{"krate":0,"index":2324},{"krate":0,"index":2326},{"krate":0,"index":2340},{"krate":0,"index":2342},{"krate":0,"index":2356},{"krate":0,"index":2358},{"krate":0,"index":2372},{"krate":0,"index":2374},{"krate":0,"index":2388},{"krate":0,"index":2390},{"krate":0,"index":2404},{"krate":0,"index":2406},{"krate":0,"index":2420},{"krate":0,"index":482},{"krate":0,"index":484},{"krate":0,"index":2422},{"krate":0,"index":2436},{"krate":0,"index":2438},{"krate":0,"index":2452},{"krate":0,"index":2454},{"krate":0,"index":2468},{"krate":0,"index":2470},{"krate":0,"index":2484},{"krate":0,"index":2486},{"krate":0,"index":2500},{"krate":0,"index":2502},{"krate":0,"index":2516}],"decl_id":null,"docs":" Joining of components for iteration over entities with specific components.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":380},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,106,111,105,110,47,112,97,114,95,106,111,105,110,46,114,115],"byte_start":43694,"byte_end":43701,"line_start":14,"line_end":14,"column_start":18,"column_end":25},"name":"ParJoin","qualname":"::join::par_join::ParJoin","value":"ParJoin: Join","parent":null,"children":[{"krate":0,"index":382}],"decl_id":null,"docs":" The purpose of the `ParJoin` trait is to provide a way\n to access multiple storages in parallel at the same time with\n the merged bit set.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,106,111,105,110,47,112,97,114,95,106,111,105,110,46,114,115],"byte_start":43778,"byte_end":43786,"line_start":16,"line_end":16,"column_start":8,"column_end":16},"name":"par_join","qualname":"::join::par_join::ParJoin::par_join","value":"fn (self) -> JoinParIter<Self>","parent":{"krate":0,"index":380},"children":[],"decl_id":null,"docs":" Create a joined parallel iterator over the contents.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":384},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,106,111,105,110,47,112,97,114,95,106,111,105,110,46,114,115],"byte_start":44200,"byte_end":44211,"line_start":30,"line_end":30,"column_start":12,"column_end":23},"name":"JoinParIter","qualname":"::join::par_join::JoinParIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" `JoinParIter` is a `ParallelIterator` over a group of `Storages`.\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,106,111,105,110,47,112,97,114,95,106,111,105,110,46,114,115],"byte_start":44177,"byte_end":44188,"line_start":29,"line_end":29,"column_start":1,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":414},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,106,111,105,110,47,109,111,100,46,114,115],"byte_start":26788,"byte_end":26794,"line_start":19,"line_end":19,"column_start":11,"column_end":17},"name":"BitAnd","qualname":"::join::BitAnd","value":"BitAnd","parent":null,"children":[{"krate":0,"index":416},{"krate":0,"index":418}],"decl_id":null,"docs":" `BitAnd` is a helper method to & bitsets together resulting in a tree.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":416},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,106,111,105,110,47,109,111,100,46,114,115],"byte_start":26836,"byte_end":26841,"line_start":21,"line_end":21,"column_start":10,"column_end":15},"name":"Value","qualname":"::join::BitAnd::Value","value":"type Value: BitSetLike;","parent":{"krate":0,"index":414},"children":[],"decl_id":null,"docs":" The combined bitsets.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":418},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,106,111,105,110,47,109,111,100,46,114,115],"byte_start":26934,"byte_end":26937,"line_start":23,"line_end":23,"column_start":8,"column_end":11},"name":"and","qualname":"::join::BitAnd::and","value":"fn (self) -> Self::Value","parent":{"krate":0,"index":414},"children":[],"decl_id":null,"docs":" Combines `Self` into a single `BitSetLike` through `BitSetAnd`.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":428},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,106,111,105,110,47,109,111,100,46,114,115],"byte_start":30675,"byte_end":30679,"line_start":147,"line_end":147,"column_start":11,"column_end":15},"name":"Join","qualname":"::join::Join","value":"Join","parent":null,"children":[{"krate":0,"index":430},{"krate":0,"index":432},{"krate":0,"index":434},{"krate":0,"index":436},{"krate":0,"index":438},{"krate":0,"index":440},{"krate":0,"index":442},{"krate":0,"index":444}],"decl_id":null,"docs":" The purpose of the `Join` trait is to provide a way\n to access multiple storages at the same time with\n the merged bit set.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":430},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,106,111,105,110,47,109,111,100,46,114,115],"byte_start":30726,"byte_end":30730,"line_start":149,"line_end":149,"column_start":10,"column_end":14},"name":"Type","qualname":"::join::Join::Type","value":"type Type;","parent":{"krate":0,"index":428},"children":[],"decl_id":null,"docs":" Type of joined components.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":432},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,106,111,105,110,47,109,111,100,46,114,115],"byte_start":30774,"byte_end":30779,"line_start":151,"line_end":151,"column_start":10,"column_end":15},"name":"Value","qualname":"::join::Join::Value","value":"type Value;","parent":{"krate":0,"index":428},"children":[],"decl_id":null,"docs":" Type of joined storages.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":434},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,106,111,105,110,47,109,111,100,46,114,115],"byte_start":30823,"byte_end":30827,"line_start":153,"line_end":153,"column_start":10,"column_end":14},"name":"Mask","qualname":"::join::Join::Mask","value":"type Mask: BitSetLike;","parent":{"krate":0,"index":428},"children":[],"decl_id":null,"docs":" Type of joined bit mask.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":436},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,106,111,105,110,47,109,111,100,46,114,115],"byte_start":30901,"byte_end":30905,"line_start":156,"line_end":156,"column_start":8,"column_end":12},"name":"join","qualname":"::join::Join::join","value":"fn (self) -> JoinIter<Self>","parent":{"krate":0,"index":428},"children":[],"decl_id":null,"docs":" Create a joined iterator over the contents.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,106,111,105,110,47,109,111,100,46,114,115],"byte_start":33219,"byte_end":33224,"line_start":217,"line_end":217,"column_start":8,"column_end":13},"name":"maybe","qualname":"::join::Join::maybe","value":"fn (self) -> MaybeJoin<Self>","parent":{"krate":0,"index":428},"children":[],"decl_id":null,"docs":" Returns a `Join`-able structure that yields all indices, returning `None` for all\n missing elements and `Some(T)` for found elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,106,111,105,110,47,109,111,100,46,114,115],"byte_start":33658,"byte_end":33662,"line_start":230,"line_end":230,"column_start":15,"column_end":19},"name":"open","qualname":"::join::Join::open","value":"fn (self) -> (Self::Mask, Self::Value)","parent":{"krate":0,"index":428},"children":[],"decl_id":null,"docs":" Open this join by returning the mask and the storages.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,106,111,105,110,47,109,111,100,46,114,115],"byte_start":33769,"byte_end":33772,"line_start":233,"line_end":233,"column_start":15,"column_end":18},"name":"get","qualname":"::join::Join::get","value":"fn (value: &mut Self::Value, id: Index) -> Self::Type","parent":{"krate":0,"index":428},"children":[],"decl_id":null,"docs":" Get a joined component value by a given index.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":444},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,106,111,105,110,47,109,111,100,46,114,115],"byte_start":34134,"byte_end":34150,"line_start":239,"line_end":239,"column_start":8,"column_end":24},"name":"is_unconstrained","qualname":"::join::Join::is_unconstrained","value":"fn () -> bool","parent":{"krate":0,"index":428},"children":[],"decl_id":null,"docs":" If this `Join` typically returns all indices in the mask, then iterating over only it\n or combined with other joins that are also dangerous will cause the `JoinIter`/`ParJoin` to\n go through all indices which is usually not what is wanted and will kill performance.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,106,111,105,110,47,109,111,100,46,114,115],"byte_start":34117,"byte_end":34126,"line_start":238,"line_end":238,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":446},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,106,111,105,110,47,109,111,100,46,114,115],"byte_start":34709,"byte_end":34718,"line_start":255,"line_end":255,"column_start":12,"column_end":21},"name":"MaybeJoin","qualname":"::join::MaybeJoin","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `Join`-able structure that yields all indices, returning `None` for all\n missing elements and `Some(T)` for found elements.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":462},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,106,111,105,110,47,109,111,100,46,114,115],"byte_start":35417,"byte_end":35425,"line_start":284,"line_end":284,"column_start":12,"column_end":20},"name":"JoinIter","qualname":"::join::JoinIter","value":"JoinIter {  }","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":119}],"decl_id":null,"docs":" `JoinIter` is an `Iterator` over a group of `Storages`.\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,106,111,105,110,47,109,111,100,46,114,115],"byte_start":35394,"byte_end":35405,"line_start":283,"line_end":283,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,106,111,105,110,47,109,111,100,46,114,115],"byte_start":35565,"byte_end":35568,"line_start":291,"line_end":291,"column_start":12,"column_end":15},"name":"new","qualname":"<JoinIter<J>>::new","value":"fn (j: J) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new join iterator.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,106,111,105,110,47,109,111,100,46,114,115],"byte_start":37635,"byte_end":37638,"line_start":354,"line_end":354,"column_start":12,"column_end":15},"name":"get","qualname":"<JoinIter<J>>::get","value":"fn (&mut self, entity: Entity, entities: &Entities) -> Option<J::Type>","parent":null,"children":[],"decl_id":null,"docs":" Allows getting joined values for specific entity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,106,111,105,110,47,109,111,100,46,114,115],"byte_start":38221,"byte_end":38234,"line_start":368,"line_end":368,"column_start":12,"column_end":25},"name":"get_unchecked","qualname":"<JoinIter<J>>::get_unchecked","value":"fn (&mut self, index: Index) -> Option<J::Type>","parent":null,"children":[],"decl_id":null,"docs":" Allows getting joined values for specific raw index.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":486},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,112,114,101,108,117,100,101,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/specs-0.14.3/src/prelude.rs","parent":null,"children":[{"krate":0,"index":488},{"krate":0,"index":490},{"krate":0,"index":492},{"krate":0,"index":494},{"krate":0,"index":520},{"krate":0,"index":522},{"krate":0,"index":524},{"krate":0,"index":526},{"krate":0,"index":528},{"krate":0,"index":550}],"decl_id":null,"docs":" Prelude module","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":566},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"storage","qualname":"::storage","value":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/specs-0.14.3/src/storage/mod.rs","parent":null,"children":[{"krate":0,"index":568},{"krate":0,"index":574},{"krate":0,"index":576},{"krate":0,"index":582},{"krate":0,"index":592},{"krate":0,"index":604},{"krate":0,"index":610},{"krate":0,"index":620},{"krate":0,"index":622},{"krate":0,"index":624},{"krate":0,"index":632},{"krate":0,"index":640},{"krate":0,"index":646},{"krate":0,"index":648},{"krate":0,"index":654},{"krate":0,"index":656},{"krate":0,"index":658},{"krate":0,"index":670},{"krate":0,"index":726},{"krate":0,"index":754},{"krate":0,"index":804},{"krate":0,"index":898},{"krate":0,"index":1010},{"krate":0,"index":1110},{"krate":0,"index":1156},{"krate":0,"index":1216},{"krate":0,"index":1218},{"krate":0,"index":1230},{"krate":0,"index":1232},{"krate":0,"index":1234},{"krate":0,"index":1238},{"krate":0,"index":1244},{"krate":0,"index":1248},{"krate":0,"index":1250},{"krate":0,"index":2554},{"krate":0,"index":2556},{"krate":0,"index":1252},{"krate":0,"index":1264},{"krate":0,"index":1268},{"krate":0,"index":1270},{"krate":0,"index":1274},{"krate":0,"index":1290},{"krate":0,"index":1304},{"krate":0,"index":1306},{"krate":0,"index":1318},{"krate":0,"index":1324},{"krate":0,"index":1326},{"krate":0,"index":1338},{"krate":0,"index":1340},{"krate":0,"index":1346},{"krate":0,"index":1350}],"decl_id":null,"docs":" Component storage types, implementations for component joins, etc.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":702},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,100,97,116,97,46,114,115],"byte_start":64348,"byte_end":64359,"line_start":112,"line_end":112,"column_start":10,"column_end":21},"name":"ReadStorage","qualname":"::storage::data::ReadStorage","value":"Storage<'a, T, Fetch<'a, MaskedStorage<T>>>","parent":null,"children":[],"decl_id":null,"docs":" A storage with read access.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":714},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,100,97,116,97,46,114,115],"byte_start":67121,"byte_end":67133,"line_start":203,"line_end":203,"column_start":10,"column_end":22},"name":"WriteStorage","qualname":"::storage::data::WriteStorage","value":"Storage<'a, T, FetchMut<'a, MaskedStorage<T>>>","parent":null,"children":[],"decl_id":null,"docs":" A storage with read and write access.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":740},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,100,114,97,105,110,46,114,115],"byte_start":68738,"byte_end":68743,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Drain","qualname":"::storage::drain::Drain","value":"Drain { data }","parent":null,"children":[{"krate":0,"index":153}],"decl_id":null,"docs":" A draining storage wrapper which has a `Join` implementation\n that removes the components.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":153},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,100,114,97,105,110,46,114,115],"byte_start":68799,"byte_end":68803,"line_start":11,"line_end":11,"column_start":9,"column_end":13},"name":"data","qualname":"::storage::drain::Drain::data","value":"&'a mut storage::MaskedStorage<T>","parent":{"krate":0,"index":740},"children":[],"decl_id":null,"docs":" The masked storage\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":780},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,102,108,97,103,103,101,100,46,114,115],"byte_start":75606,"byte_end":75620,"line_start":136,"line_end":136,"column_start":12,"column_end":26},"name":"FlaggedStorage","qualname":"::storage::flagged::FlaggedStorage","value":"FlaggedStorage {  }","parent":null,"children":[{"krate":0,"index":163},{"krate":0,"index":165},{"krate":0,"index":167}],"decl_id":null,"docs":" Wrapper storage that tracks modifications, insertions, and removals of components\n through an `EventChannel`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":820},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,103,101,110,101,114,105,99,46,114,115],"byte_start":77221,"byte_end":77225,"line_start":4,"line_end":4,"column_start":12,"column_end":16},"name":"Seal","qualname":"::storage::generic::Seal","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":822},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,103,101,110,101,114,105,99,46,114,115],"byte_start":77312,"byte_end":77330,"line_start":7,"line_end":7,"column_start":11,"column_end":29},"name":"GenericReadStorage","qualname":"::storage::generic::GenericReadStorage","value":"GenericReadStorage","parent":null,"children":[{"krate":0,"index":824},{"krate":0,"index":826},{"krate":0,"index":828}],"decl_id":null,"docs":" Provides generic read access to both `ReadStorage` and `WriteStorage`\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":824},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,103,101,110,101,114,105,99,46,114,115],"byte_start":77384,"byte_end":77393,"line_start":9,"line_end":9,"column_start":10,"column_end":19},"name":"Component","qualname":"::storage::generic::GenericReadStorage::Component","value":"type Component: Component;","parent":{"krate":0,"index":822},"children":[],"decl_id":null,"docs":" The component type of the storage\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":826},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,103,101,110,101,114,105,99,46,114,115],"byte_start":77469,"byte_end":77472,"line_start":12,"line_end":12,"column_start":8,"column_end":11},"name":"get","qualname":"::storage::generic::GenericReadStorage::get","value":"fn (&self, entity: Entity) -> Option<&Self::Component>","parent":{"krate":0,"index":822},"children":[],"decl_id":null,"docs":" Get immutable access to an `Entity`s component\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":828},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,103,101,110,101,114,105,99,46,114,115],"byte_start":77576,"byte_end":77584,"line_start":15,"line_end":15,"column_start":8,"column_end":16},"name":"_private","qualname":"::storage::generic::GenericReadStorage::_private","value":"fn () -> Seal","parent":{"krate":0,"index":822},"children":[],"decl_id":null,"docs":" Private function to seal the trait\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":862},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,103,101,110,101,114,105,99,46,114,115],"byte_start":78793,"byte_end":78812,"line_start":79,"line_end":79,"column_start":11,"column_end":30},"name":"GenericWriteStorage","qualname":"::storage::generic::GenericWriteStorage","value":"GenericWriteStorage","parent":null,"children":[{"krate":0,"index":864},{"krate":0,"index":866},{"krate":0,"index":868},{"krate":0,"index":870},{"krate":0,"index":872}],"decl_id":null,"docs":" Provides generic write access to `WriteStorage`, both as a value and a mutable reference.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":864},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,103,101,110,101,114,105,99,46,114,115],"byte_start":78866,"byte_end":78875,"line_start":81,"line_end":81,"column_start":10,"column_end":19},"name":"Component","qualname":"::storage::generic::GenericWriteStorage::Component","value":"type Component: Component;","parent":{"krate":0,"index":862},"children":[],"decl_id":null,"docs":" The component type of the storage\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":866},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,103,101,110,101,114,105,99,46,114,115],"byte_start":78949,"byte_end":78956,"line_start":84,"line_end":84,"column_start":8,"column_end":15},"name":"get_mut","qualname":"::storage::generic::GenericWriteStorage::get_mut","value":"fn (&mut self, entity: Entity) -> Option<&mut Self::Component>","parent":{"krate":0,"index":862},"children":[],"decl_id":null,"docs":" Get mutable access to an `Entity`s component\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":868},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,103,101,110,101,114,105,99,46,114,115],"byte_start":79068,"byte_end":79074,"line_start":87,"line_end":87,"column_start":8,"column_end":14},"name":"insert","qualname":"::storage::generic::GenericWriteStorage::insert","value":"fn (&mut self, entity: Entity, comp: Self::Component) -> InsertResult<Self::Component>","parent":{"krate":0,"index":862},"children":[],"decl_id":null,"docs":" Insert a component for an `Entity`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":870},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,103,101,110,101,114,105,99,46,114,115],"byte_start":79212,"byte_end":79218,"line_start":90,"line_end":90,"column_start":8,"column_end":14},"name":"remove","qualname":"::storage::generic::GenericWriteStorage::remove","value":"fn (&mut self, entity: Entity) -> ()","parent":{"krate":0,"index":862},"children":[],"decl_id":null,"docs":" Remove the component for an `Entity`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":872},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,103,101,110,101,114,105,99,46,114,115],"byte_start":79298,"byte_end":79306,"line_start":93,"line_end":93,"column_start":8,"column_end":16},"name":"_private","qualname":"::storage::generic::GenericWriteStorage::_private","value":"fn () -> Seal","parent":{"krate":0,"index":862},"children":[],"decl_id":null,"docs":" Private function to seal the trait\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":940},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,114,101,115,116,114,105,99,116,46,114,115],"byte_start":81012,"byte_end":81033,"line_start":20,"line_end":20,"column_start":10,"column_end":31},"name":"SequentialRestriction","qualname":"::storage::restrict::SequentialRestriction","value":"SequentialRestriction::{}","parent":null,"children":[],"decl_id":null,"docs":" Specifies that the `RestrictedStorage` cannot run in parallel.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":942},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,114,101,115,116,114,105,99,116,46,114,115],"byte_start":81204,"byte_end":81230,"line_start":24,"line_end":24,"column_start":10,"column_end":36},"name":"MutableParallelRestriction","qualname":"::storage::restrict::MutableParallelRestriction","value":"MutableParallelRestriction::{}","parent":null,"children":[],"decl_id":null,"docs":" Specifies that the `RestrictedStorage` can run in parallel mutably.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":944},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,114,101,115,116,114,105,99,116,46,114,115],"byte_start":81386,"byte_end":81414,"line_start":28,"line_end":28,"column_start":10,"column_end":38},"name":"ImmutableParallelRestriction","qualname":"::storage::restrict::ImmutableParallelRestriction","value":"ImmutableParallelRestriction::{}","parent":null,"children":[],"decl_id":null,"docs":" Specifies that the `RestrictedStorage` can run in parallel immutably.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":946},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,114,101,115,116,114,105,99,116,46,114,115],"byte_start":81499,"byte_end":81516,"line_start":31,"line_end":31,"column_start":11,"column_end":28},"name":"ImmutableAliasing","qualname":"::storage::restrict::ImmutableAliasing","value":"ImmutableAliasing: Sized","parent":null,"children":[],"decl_id":null,"docs":" Restrictions that are allowed to access `RestrictedStorage::get`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":952},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,114,101,115,116,114,105,99,116,46,114,115],"byte_start":82826,"byte_end":82843,"line_start":70,"line_end":70,"column_start":12,"column_end":29},"name":"RestrictedStorage","qualname":"::storage::restrict::RestrictedStorage","value":"RestrictedStorage {  }","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":229},{"krate":0,"index":231},{"krate":0,"index":233}],"decl_id":null,"docs":" Similar to a `MaskedStorage` and a `Storage` combined, but restricts usage\n to only getting and modifying the components. That means it's not possible to\n modify the inner bitset so the iteration cannot be invalidated. In other words,\n no insertion or removal is allowed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":984},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,114,101,115,116,114,105,99,116,46,114,115],"byte_start":85737,"byte_end":85745,"line_start":167,"line_end":167,"column_start":12,"column_end":20},"name":"restrict","qualname":"<Storage>::restrict","value":"fn <'rf> (&'rf self) -> RestrictedStorage<'rf, 'st, T, &T::Storage, &BitSet,\n                  ImmutableParallelRestriction>","parent":null,"children":[],"decl_id":null,"docs":" Builds an immutable `RestrictedStorage` out of a `Storage`. Allows deferred\n unchecked access to the entity's component.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":988},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,114,101,115,116,114,105,99,116,46,114,115],"byte_start":86369,"byte_end":86381,"line_start":187,"line_end":187,"column_start":12,"column_end":24},"name":"restrict_mut","qualname":"<Storage>::restrict_mut","value":"fn <'rf> (&'rf mut self) -> RestrictedStorage<'rf, 'st, T, &mut T::Storage, &BitSet,\n                  SequentialRestriction>","parent":null,"children":[],"decl_id":null,"docs":" Builds a mutable `RestrictedStorage` out of a `Storage`. Allows restricted\n access to the inner components without allowing invalidating the\n bitset for iteration in `Join`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":990},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,114,101,115,116,114,105,99,116,46,114,115],"byte_start":86877,"byte_end":86893,"line_start":202,"line_end":202,"column_start":12,"column_end":28},"name":"par_restrict_mut","qualname":"<Storage>::par_restrict_mut","value":"fn <'rf> (&'rf mut self) -> RestrictedStorage<'rf, 'st, T, &mut T::Storage, &BitSet,\n                  MutableParallelRestriction>","parent":null,"children":[],"decl_id":null,"docs":" Builds a mutable, parallel `RestrictedStorage`,\n does not allow mutably getting other components\n aside from the current iteration.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":992},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,114,101,115,116,114,105,99,116,46,114,115],"byte_start":87372,"byte_end":87385,"line_start":217,"line_end":217,"column_start":12,"column_end":25},"name":"PairedStorage","qualname":"::storage::restrict::PairedStorage","value":"PairedStorage {  }","parent":null,"children":[{"krate":0,"index":311},{"krate":0,"index":313},{"krate":0,"index":315},{"krate":0,"index":317},{"krate":0,"index":319}],"decl_id":null,"docs":" Pairs a storage with an index, meaning that the index is guaranteed to exist\n as long as the `PairedStorage<C, S>` exists.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":996},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,114,101,115,116,114,105,99,116,46,114,115],"byte_start":87839,"byte_end":87852,"line_start":233,"line_end":233,"column_start":12,"column_end":25},"name":"get_unchecked","qualname":"<PairedStorage>::get_unchecked","value":"fn (&self) -> &C","parent":null,"children":[],"decl_id":null,"docs":" Gets the component related to the current entry without checking whether\n the storage has it or not.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1000},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,114,101,115,116,114,105,99,116,46,114,115],"byte_start":88217,"byte_end":88234,"line_start":246,"line_end":246,"column_start":12,"column_end":29},"name":"get_mut_unchecked","qualname":"<PairedStorage>::get_mut_unchecked","value":"fn (&mut self) -> &mut C","parent":null,"children":[],"decl_id":null,"docs":" Gets the component related to the current entry without checking whether\n the storage has it or not.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1004},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,114,101,115,116,114,105,99,116,46,114,115],"byte_start":88835,"byte_end":88838,"line_start":264,"line_end":264,"column_start":12,"column_end":15},"name":"get","qualname":"<PairedStorage>::get","value":"fn (&self, entity: Entity) -> Option<&C>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to get the component related to the entity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1008},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,114,101,115,116,114,105,99,116,46,114,115],"byte_start":89578,"byte_end":89585,"line_start":285,"line_end":285,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<PairedStorage>::get_mut","value":"fn (&mut self, entity: Entity) -> Option<&mut C>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to get the component related to the entity mutably.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2518},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,115,116,111,114,97,103,101,115,46,114,115],"byte_start":90220,"byte_end":90232,"line_start":17,"line_end":17,"column_start":12,"column_end":24},"name":"BTreeStorage","qualname":"::storage::storages::BTreeStorage","value":"","parent":null,"children":[],"decl_id":null,"docs":" BTreeMap-based storage.\n","sig":null,"attributes":[{"value":"derivative(Default(bound = \"\"))","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,115,116,111,114,97,103,101,115,46,114,115],"byte_start":90174,"byte_end":90208,"line_start":16,"line_end":16,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2524},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,115,116,111,114,97,103,101,115,46,114,115],"byte_start":90962,"byte_end":90976,"line_start":49,"line_end":49,"column_start":12,"column_end":26},"name":"HashMapStorage","qualname":"::storage::storages::HashMapStorage","value":"","parent":null,"children":[],"decl_id":null,"docs":" HashMap-based storage. Best suited for rare components.\n","sig":null,"attributes":[{"value":"derivative(Default(bound = \"\"))","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,115,116,111,114,97,103,101,115,46,114,115],"byte_start":90916,"byte_end":90950,"line_start":48,"line_end":48,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2530},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,115,116,111,114,97,103,101,115,46,114,115],"byte_start":91904,"byte_end":91919,"line_start":86,"line_end":86,"column_start":12,"column_end":27},"name":"DenseVecStorage","qualname":"::storage::storages::DenseVecStorage","value":"DenseVecStorage {  }","parent":null,"children":[{"krate":0,"index":1933},{"krate":0,"index":1935},{"krate":0,"index":1937}],"decl_id":null,"docs":" Dense vector storage. Has a redirection 2-way table\n between entities and components, allowing to leave\n no gaps within the data.","sig":null,"attributes":[{"value":"derivative(Default(bound = \"\"))","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,115,116,111,114,97,103,101,115,46,114,115],"byte_start":91858,"byte_end":91892,"line_start":85,"line_end":85,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":1068},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,115,116,111,114,97,103,101,115,46,114,115],"byte_start":93431,"byte_end":93442,"line_start":135,"line_end":135,"column_start":12,"column_end":23},"name":"NullStorage","qualname":"::storage::storages::NullStorage","value":"","parent":null,"children":[],"decl_id":null,"docs":" A null storage type, used for cases where the component\n doesn't contain any data and instead works as a simple flag.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2536},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,115,116,111,114,97,103,101,115,46,114,115],"byte_start":94446,"byte_end":94456,"line_start":182,"line_end":182,"column_start":12,"column_end":22},"name":"VecStorage","qualname":"::storage::storages::VecStorage","value":"","parent":null,"children":[],"decl_id":null,"docs":" Vector storage. Uses a simple `Vec`. Supposed to have maximum\n performance for the components mostly present in entities.\n","sig":null,"attributes":[{"value":"derivative(Default(bound = \"\"))","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,115,116,111,114,97,103,101,115,46,114,115],"byte_start":94400,"byte_end":94434,"line_start":181,"line_end":181,"column_start":1,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":1138},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,116,114,97,99,107,46,114,115],"byte_start":96736,"byte_end":96743,"line_start":11,"line_end":11,"column_start":11,"column_end":18},"name":"Tracked","qualname":"::storage::track::Tracked","value":"Tracked","parent":null,"children":[{"krate":0,"index":1140},{"krate":0,"index":1142}],"decl_id":null,"docs":" `UnprotectedStorage`s that track modifications, insertions, and\n removals of components.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1140},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,116,114,97,99,107,46,114,115],"byte_start":96822,"byte_end":96829,"line_start":13,"line_end":13,"column_start":8,"column_end":15},"name":"channel","qualname":"::storage::track::Tracked::channel","value":"fn (&self) -> &EventChannel<ComponentEvent>","parent":{"krate":0,"index":1138},"children":[],"decl_id":null,"docs":" Event channel tracking modified/inserted/removed components.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1142},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,116,114,97,99,107,46,114,115],"byte_start":96955,"byte_end":96966,"line_start":15,"line_end":15,"column_start":8,"column_end":19},"name":"channel_mut","qualname":"::storage::track::Tracked::channel_mut","value":"fn (&mut self) -> &mut EventChannel<ComponentEvent>","parent":{"krate":0,"index":1138},"children":[],"decl_id":null,"docs":" Mutable event channel tracking modified/inserted/removed components.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1949},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,116,114,97,99,107,46,114,115],"byte_start":97338,"byte_end":97346,"line_start":24,"line_end":24,"column_start":5,"column_end":13},"name":"Inserted","qualname":"::storage::track::ComponentEvent::Inserted","value":"ComponentEvent::Inserted(Index)","parent":{"krate":0,"index":2542},"children":[],"decl_id":null,"docs":" An insertion event, note that a modification event will be triggered if the entity\n already had a component and had a new one inserted.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1953},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,116,114,97,99,107,46,114,115],"byte_start":97544,"byte_end":97552,"line_start":27,"line_end":27,"column_start":5,"column_end":13},"name":"Modified","qualname":"::storage::track::ComponentEvent::Modified","value":"ComponentEvent::Modified(Index)","parent":{"krate":0,"index":2542},"children":[],"decl_id":null,"docs":" A modification event, this will be sent any time a component is accessed mutably so be\n careful with joins over `&mut storages` as it could potentially flag all of them.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1957},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,116,114,97,99,107,46,114,115],"byte_start":97590,"byte_end":97597,"line_start":29,"line_end":29,"column_start":5,"column_end":12},"name":"Removed","qualname":"::storage::track::ComponentEvent::Removed","value":"ComponentEvent::Removed(Index)","parent":{"krate":0,"index":2542},"children":[],"decl_id":null,"docs":" A removal event.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2542},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,116,114,97,99,107,46,114,115],"byte_start":97166,"byte_end":97180,"line_start":21,"line_end":21,"column_start":10,"column_end":24},"name":"ComponentEvent","qualname":"::storage::track::ComponentEvent","value":"ComponentEvent::{Inserted, Modified, Removed}","parent":null,"children":[{"krate":0,"index":1949},{"krate":0,"index":1953},{"krate":0,"index":1957}],"decl_id":null,"docs":" Component storage events received from a `FlaggedStorage` or any storage that implements\n `Tracked`.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,116,114,97,99,107,46,114,115],"byte_start":97157,"byte_end":97607,"line_start":21,"line_end":30,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":1146},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,116,114,97,99,107,46,114,115],"byte_start":97809,"byte_end":97816,"line_start":39,"line_end":39,"column_start":12,"column_end":19},"name":"channel","qualname":"<Storage>::channel","value":"fn (&self) -> &EventChannel<ComponentEvent>","parent":null,"children":[],"decl_id":null,"docs":" Returns the event channel tracking modified components.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1150},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,116,114,97,99,107,46,114,115],"byte_start":98160,"byte_end":98171,"line_start":52,"line_end":52,"column_start":12,"column_end":23},"name":"channel_mut","qualname":"<Storage>::channel_mut","value":"fn (&mut self) -> &mut EventChannel<ComponentEvent>","parent":null,"children":[],"decl_id":null,"docs":" Returns the event channel for insertions/removals/modifications of this storage's\n components.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1152},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,116,114,97,99,107,46,114,115],"byte_start":98499,"byte_end":98514,"line_start":59,"line_end":59,"column_start":12,"column_end":27},"name":"register_reader","qualname":"<Storage>::register_reader","value":"fn (&mut self) -> ReaderId<ComponentEvent>","parent":null,"children":[],"decl_id":null,"docs":" Starts tracking component events. Note that this reader id should be used every frame,\n otherwise events will pile up and memory use by the event channel will grow waiting\n for this reader.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1154},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,116,114,97,99,107,46,114,115],"byte_start":98667,"byte_end":98671,"line_start":64,"line_end":64,"column_start":12,"column_end":16},"name":"flag","qualname":"<Storage>::flag","value":"fn (&mut self, event: ComponentEvent) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Flags an index with a `ComponentEvent`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1166},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,101,110,116,114,121,46,114,115],"byte_start":99713,"byte_end":99718,"line_start":36,"line_end":36,"column_start":12,"column_end":17},"name":"entry","qualname":"<Storage>::entry","value":"fn <'a> (&'a mut self, e: Entity) -> Result<StorageEntry<'a, 'e, T, D>, WrongGeneration>","parent":null,"children":[],"decl_id":null,"docs":" Returns an entry to the component associated to the entity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1168},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,101,110,116,114,121,46,114,115],"byte_start":102286,"byte_end":102293,"line_start":118,"line_end":118,"column_start":12,"column_end":19},"name":"entries","qualname":"<Storage>::entries","value":"fn <'a> (&'a mut self) -> Entries<'a, 'e, T, D>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Join`-able structure that yields all indices, returning\n `Entry` for all elements","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1170},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,101,110,116,114,121,46,114,115],"byte_start":102467,"byte_end":102474,"line_start":124,"line_end":124,"column_start":12,"column_end":19},"name":"Entries","qualname":"::storage::entry::Entries","value":"","parent":null,"children":[],"decl_id":null,"docs":" `Join`-able structure that yields all indices, returning `Entry` for all elements\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1186},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,101,110,116,114,121,46,114,115],"byte_start":103628,"byte_end":103641,"line_start":163,"line_end":163,"column_start":12,"column_end":25},"name":"OccupiedEntry","qualname":"::storage::entry::OccupiedEntry","value":"OccupiedEntry {  }","parent":null,"children":[{"krate":0,"index":455},{"krate":0,"index":457}],"decl_id":null,"docs":" An entry to a storage which has a component associated to the entity.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1190},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,101,110,116,114,121,46,114,115],"byte_start":103922,"byte_end":103925,"line_start":174,"line_end":174,"column_start":12,"column_end":15},"name":"get","qualname":"<OccupiedEntry>::get","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the component associated with the entity.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1194},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,101,110,116,114,121,46,114,115],"byte_start":104211,"byte_end":104218,"line_start":185,"line_end":185,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OccupiedEntry>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the component associated with the entity.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1196},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,101,110,116,114,121,46,114,115],"byte_start":104425,"byte_end":104433,"line_start":191,"line_end":191,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<OccupiedEntry>::into_mut","value":"fn (self) -> &'a mut T","parent":null,"children":[],"decl_id":null,"docs":" Converts the `OccupiedEntry` into a mutable reference bounded by\n the storage's lifetime.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1198},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,101,110,116,114,121,46,114,115],"byte_start":104599,"byte_end":104605,"line_start":196,"line_end":196,"column_start":12,"column_end":18},"name":"insert","qualname":"<OccupiedEntry>::insert","value":"fn (&mut self, mut component: T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Inserts a value into the storage and returns the old one.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1200},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,101,110,116,114,121,46,114,115],"byte_start":104797,"byte_end":104803,"line_start":202,"line_end":202,"column_start":12,"column_end":18},"name":"remove","qualname":"<OccupiedEntry>::remove","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Removes the component from the storage and returns it.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1202},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,101,110,116,114,121,46,114,115],"byte_start":104972,"byte_end":104983,"line_start":208,"line_end":208,"column_start":12,"column_end":23},"name":"VacantEntry","qualname":"::storage::entry::VacantEntry","value":"VacantEntry {  }","parent":null,"children":[{"krate":0,"index":483},{"krate":0,"index":485}],"decl_id":null,"docs":" An entry to a storage which does not have a component associated to the entity.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1206},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,101,110,116,114,121,46,114,115],"byte_start":105238,"byte_end":105244,"line_start":219,"line_end":219,"column_start":12,"column_end":18},"name":"insert","qualname":"<VacantEntry>::insert","value":"fn (self, component: T) -> &'a mut T","parent":null,"children":[],"decl_id":null,"docs":" Inserts a value into the storage.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":503},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,101,110,116,114,121,46,114,115],"byte_start":105722,"byte_end":105730,"line_start":232,"line_end":232,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::storage::entry::StorageEntry::Occupied","value":"StorageEntry::Occupied(OccupiedEntry<'a, 'b, T, D>)","parent":{"krate":0,"index":1208},"children":[],"decl_id":null,"docs":" Entry variant that is returned if the entity has a component.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":507},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,101,110,116,114,121,46,114,115],"byte_start":105845,"byte_end":105851,"line_start":234,"line_end":234,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::storage::entry::StorageEntry::Vacant","value":"StorageEntry::Vacant(VacantEntry<'a, 'b, T, D>)","parent":{"krate":0,"index":1208},"children":[],"decl_id":null,"docs":" Entry variant that is returned if the entity does not have a component.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1208},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,101,110,116,114,121,46,114,115],"byte_start":105607,"byte_end":105619,"line_start":230,"line_end":230,"column_start":10,"column_end":22},"name":"StorageEntry","qualname":"::storage::entry::StorageEntry","value":"StorageEntry::{Occupied, Vacant}","parent":null,"children":[{"krate":0,"index":503},{"krate":0,"index":507}],"decl_id":null,"docs":" Entry to a storage for convenient filling of components or removal based on whether\n the entity has a component.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1212},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,101,110,116,114,121,46,114,115],"byte_start":106078,"byte_end":106087,"line_start":243,"line_end":243,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<StorageEntry>::or_insert","value":"fn (self, component: T) -> &'a mut T","parent":null,"children":[],"decl_id":null,"docs":" Inserts a component if the entity does not have it already.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1214},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,101,110,116,114,121,46,114,115],"byte_start":106458,"byte_end":106472,"line_start":251,"line_end":251,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<StorageEntry>::or_insert_with","value":"fn <F> (self, default: F) -> &'a mut T","parent":null,"children":[],"decl_id":null,"docs":" Inserts a component using a lazily called function that is only called\n when inserting the component. Ensures this entry has a value and if not, \n inserts one using the result of the passed closure. Returns a reference \n to the value afterwards.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1216},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":48478,"byte_end":48489,"line_start":43,"line_end":43,"column_start":12,"column_end":23},"name":"AntiStorage","qualname":"::storage::AntiStorage","value":"","parent":null,"children":[],"decl_id":null,"docs":" An inverted storage type, only useful to iterate entities\n that do not have a particular component type.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1234},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":48945,"byte_end":48955,"line_start":65,"line_end":65,"column_start":11,"column_end":21},"name":"AnyStorage","qualname":"::storage::AnyStorage","value":"AnyStorage","parent":null,"children":[{"krate":0,"index":1236}],"decl_id":null,"docs":" A dynamic storage.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1236},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":49008,"byte_end":49012,"line_start":67,"line_end":67,"column_start":8,"column_end":12},"name":"drop","qualname":"::storage::AnyStorage::drop","value":"fn (&mut self, entities: &[Entity]) -> ()","parent":{"krate":0,"index":1234},"children":[],"decl_id":null,"docs":" Drop components of given entities.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1248},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":50257,"byte_end":50272,"line_start":114,"line_end":114,"column_start":18,"column_end":33},"name":"DistinctStorage","qualname":"::storage::DistinctStorage","value":"DistinctStorage","parent":null,"children":[],"decl_id":null,"docs":" This is a marker trait which requires you to uphold the following guarantee:","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1250},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":50450,"byte_end":50462,"line_start":119,"line_end":119,"column_start":10,"column_end":22},"name":"InsertResult","qualname":"::storage::InsertResult","value":"Result<Option<T>, Error>","parent":null,"children":[],"decl_id":null,"docs":" The status of an `insert()`ion into a storage.\n If the insertion was successful then the Ok value will\n contain the component that was replaced (if any).\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2554},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":50705,"byte_end":50718,"line_start":125,"line_end":125,"column_start":12,"column_end":25},"name":"MaskedStorage","qualname":"::storage::MaskedStorage","value":"MaskedStorage {  }","parent":null,"children":[{"krate":0,"index":1963},{"krate":0,"index":1965}],"decl_id":null,"docs":" The `UnprotectedStorage` together with the `BitSet` that knows\n about which elements are stored, and which are not.\n","sig":null,"attributes":[{"value":"derivative(Default(bound = \"T::Storage: Default\"))","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":50640,"byte_end":50693,"line_start":124,"line_end":124,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1254},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":50947,"byte_end":50950,"line_start":133,"line_end":133,"column_start":12,"column_end":15},"name":"new","qualname":"<MaskedStorage<T>>::new","value":"fn (inner: T::Storage) -> MaskedStorage<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `MaskedStorage`. This is called when you register\n a new component type within the world.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1258},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":51244,"byte_end":51249,"line_start":145,"line_end":145,"column_start":12,"column_end":17},"name":"clear","qualname":"<MaskedStorage<T>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clear the contents of this storage.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1260},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":51421,"byte_end":51427,"line_start":153,"line_end":153,"column_start":12,"column_end":18},"name":"remove","qualname":"<MaskedStorage<T>>::remove","value":"fn (&mut self, id: Index) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove an element by a given index.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1262},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":51654,"byte_end":51658,"line_start":162,"line_end":162,"column_start":12,"column_end":16},"name":"drop","qualname":"<MaskedStorage<T>>::drop","value":"fn (&mut self, id: Index) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Drop an element by a given index.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1268},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":52120,"byte_end":52127,"line_start":180,"line_end":180,"column_start":12,"column_end":19},"name":"Storage","qualname":"::storage::Storage","value":"Storage {  }","parent":null,"children":[{"krate":0,"index":551},{"krate":0,"index":553},{"krate":0,"index":555}],"decl_id":null,"docs":" A wrapper around the masked storage and the generations vector.\n Can be used for safe lookup of components, insertions and removes.\n This is what `World::read/write` fetches for the user.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1272},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":52392,"byte_end":52395,"line_start":189,"line_end":189,"column_start":12,"column_end":15},"name":"new","qualname":"<Storage>::new","value":"fn (entities: Fetch<'e, EntitiesRes>, data: D) -> Storage<'e, T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Storage` from a fetched allocator and a immutable or mutable `MaskedStorage`,\n named `data`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1276},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":52718,"byte_end":52737,"line_start":204,"line_end":204,"column_start":12,"column_end":31},"name":"unprotected_storage","qualname":"<Storage>::unprotected_storage","value":"fn (&self) -> &T::Storage","parent":null,"children":[],"decl_id":null,"docs":" Gets the wrapped storage.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1278},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":53064,"byte_end":53080,"line_start":212,"line_end":212,"column_start":12,"column_end":28},"name":"fetched_entities","qualname":"<Storage>::fetched_entities","value":"fn (&self) -> &EntitiesRes","parent":null,"children":[],"decl_id":null,"docs":" Returns the `EntitiesRes` resource fetched by this storage.\n **This does not have anything to do with the components inside.**\n You only want to use this when implementing additional methods\n for `Storage` via an extension trait.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1280},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":53207,"byte_end":53210,"line_start":217,"line_end":217,"column_start":12,"column_end":15},"name":"get","qualname":"<Storage>::get","value":"fn (&self, e: Entity) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Tries to read the data associated with an `Entity`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1282},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":53604,"byte_end":53609,"line_start":227,"line_end":227,"column_start":12,"column_end":17},"name":"count","qualname":"<Storage>::count","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes the number of elements this `Storage` contains by counting the bits in the bit set.\n This operation will never be performed in constant time.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1284},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":53759,"byte_end":53767,"line_start":232,"line_end":232,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Storage>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether this `Storage` is empty. This operation is very cheap.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1286},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":53929,"byte_end":53937,"line_start":237,"line_end":237,"column_start":12,"column_end":20},"name":"contains","qualname":"<Storage>::contains","value":"fn (&self, e: Entity) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the storage has a component for this entity, and that entity is alive.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1288},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":54204,"byte_end":54208,"line_start":243,"line_end":243,"column_start":12,"column_end":16},"name":"mask","qualname":"<Storage>::mask","value":"fn (&self) -> &BitSet","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the bitset of this storage which allows filtering\n by the component type without actually getting the component.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1292},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":54599,"byte_end":54622,"line_start":257,"line_end":257,"column_start":19,"column_end":42},"name":"unprotected_storage_mut","qualname":"<Storage>::unprotected_storage_mut","value":"fn (&mut self) -> &mut T::Storage","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable access to the wrapped storage.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1294},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":54764,"byte_end":54771,"line_start":262,"line_end":262,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Storage>::get_mut","value":"fn (&mut self, e: Entity) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Tries to mutate the data associated with an `Entity`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1296},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":55361,"byte_end":55367,"line_start":276,"line_end":276,"column_start":12,"column_end":18},"name":"insert","qualname":"<Storage>::insert","value":"fn (&mut self, e: Entity, mut v: T) -> InsertResult<T>","parent":null,"children":[],"decl_id":null,"docs":" Inserts new data for a given `Entity`.\n Returns the result of the operation as a `InsertResult<T>`","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1298},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":56118,"byte_end":56124,"line_start":297,"line_end":297,"column_start":12,"column_end":18},"name":"remove","qualname":"<Storage>::remove","value":"fn (&mut self, e: Entity) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes the data associated with an `Entity`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1300},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":56344,"byte_end":56349,"line_start":306,"line_end":306,"column_start":12,"column_end":17},"name":"clear","qualname":"<Storage>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears the contents of the storage.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1302},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":56510,"byte_end":56515,"line_start":312,"line_end":312,"column_start":12,"column_end":17},"name":"drain","qualname":"<Storage>::drain","value":"fn (&mut self) -> Drain<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a draining storage wrapper which can be `.join`ed\n to get a draining iterator.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1340},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":58534,"byte_end":58544,"line_start":393,"line_end":393,"column_start":11,"column_end":21},"name":"TryDefault","qualname":"::storage::TryDefault","value":"TryDefault: Sized","parent":null,"children":[{"krate":0,"index":1342},{"krate":0,"index":1344}],"decl_id":null,"docs":" Tries to create a default value, returns an `Err` with the name of the storage and/or component\n if there's no default.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1342},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":58598,"byte_end":58609,"line_start":395,"line_end":395,"column_start":8,"column_end":19},"name":"try_default","qualname":"::storage::TryDefault::try_default","value":"fn () -> Result<Self, String>","parent":{"krate":0,"index":1340},"children":[],"decl_id":null,"docs":" Tries to create the default.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1344},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":58702,"byte_end":58716,"line_start":398,"line_end":398,"column_start":8,"column_end":22},"name":"unwrap_default","qualname":"::storage::TryDefault::unwrap_default","value":"fn () -> Self","parent":{"krate":0,"index":1340},"children":[],"decl_id":null,"docs":" Calls `try_default` and panics on an error case.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1350},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":59090,"byte_end":59108,"line_start":416,"line_end":416,"column_start":11,"column_end":29},"name":"UnprotectedStorage","qualname":"::storage::UnprotectedStorage","value":"UnprotectedStorage<T>: TryDefault","parent":null,"children":[{"krate":0,"index":1352},{"krate":0,"index":1354},{"krate":0,"index":1356},{"krate":0,"index":1358},{"krate":0,"index":1360},{"krate":0,"index":1362}],"decl_id":null,"docs":" Used by the framework to quickly join components.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1352},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":59260,"byte_end":59265,"line_start":419,"line_end":419,"column_start":15,"column_end":20},"name":"clean","qualname":"::storage::UnprotectedStorage::clean","value":"fn <B> (&mut self, has: B) -> ()","parent":{"krate":0,"index":1350},"children":[],"decl_id":null,"docs":" Clean the storage given a bitset with bits set for valid indices.\n Allows us to safely drop the storage.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1354},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":59491,"byte_end":59494,"line_start":426,"line_end":426,"column_start":15,"column_end":18},"name":"get","qualname":"::storage::UnprotectedStorage::get","value":"fn (&self, id: Index) -> &T","parent":{"krate":0,"index":1350},"children":[],"decl_id":null,"docs":" Tries reading the data associated with an `Index`.\n This is unsafe because the external set used\n to protect this storage is absent.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1356},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":59691,"byte_end":59698,"line_start":431,"line_end":431,"column_start":15,"column_end":22},"name":"get_mut","qualname":"::storage::UnprotectedStorage::get_mut","value":"fn (&mut self, id: Index) -> &mut T","parent":{"krate":0,"index":1350},"children":[],"decl_id":null,"docs":" Tries mutating the data associated with an `Index`.\n This is unsafe because the external set used\n to protect this storage is absent.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1358},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":59793,"byte_end":59799,"line_start":434,"line_end":434,"column_start":15,"column_end":21},"name":"insert","qualname":"::storage::UnprotectedStorage::insert","value":"fn (&mut self, id: Index, value: T) -> ()","parent":{"krate":0,"index":1350},"children":[],"decl_id":null,"docs":" Inserts new data for a given `Index`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1360},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":59901,"byte_end":59907,"line_start":437,"line_end":437,"column_start":15,"column_end":21},"name":"remove","qualname":"::storage::UnprotectedStorage::remove","value":"fn (&mut self, id: Index) -> T","parent":{"krate":0,"index":1350},"children":[],"decl_id":null,"docs":" Removes the data associated with an `Index`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1362},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":60002,"byte_end":60006,"line_start":440,"line_end":440,"column_start":15,"column_end":19},"name":"drop","qualname":"::storage::UnprotectedStorage::drop","value":"fn (&mut self, id: Index) -> ()","parent":{"krate":0,"index":1350},"children":[],"decl_id":null,"docs":" Drops the data associated with an `Index`.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1364},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,109,111,100,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"world","qualname":"::world","value":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/specs-0.14.3/src/world/mod.rs","parent":null,"children":[{"krate":0,"index":1366},{"krate":0,"index":1368},{"krate":0,"index":1384},{"krate":0,"index":1390},{"krate":0,"index":1392},{"krate":0,"index":1394},{"krate":0,"index":1410},{"krate":0,"index":1412},{"krate":0,"index":1424},{"krate":0,"index":1434},{"krate":0,"index":1592},{"krate":0,"index":1656},{"krate":0,"index":1658},{"krate":0,"index":1664},{"krate":0,"index":1670},{"krate":0,"index":1672},{"krate":0,"index":1678},{"krate":0,"index":1682},{"krate":0,"index":1684},{"krate":0,"index":1740},{"krate":0,"index":1742},{"krate":0,"index":1744},{"krate":0,"index":1748},{"krate":0,"index":1752}],"decl_id":null,"docs":" Entities, resources, components, and general world management.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1430},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,99,111,109,112,46,114,115],"byte_start":127216,"byte_end":127225,"line_start":64,"line_end":64,"column_start":11,"column_end":20},"name":"Component","qualname":"::world::comp::Component","value":"Component: Any + Sized","parent":null,"children":[{"krate":0,"index":1432}],"decl_id":null,"docs":" Abstract component type.\n Doesn't have to be Copy or even Clone.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1432},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,99,111,109,112,46,114,115],"byte_start":127302,"byte_end":127309,"line_start":66,"line_end":66,"column_start":10,"column_end":17},"name":"Storage","qualname":"::world::comp::Component::Storage","value":"type Storage: UnprotectedStorage<Self> + Any + Send + Sync;","parent":{"krate":0,"index":1430},"children":[],"decl_id":null,"docs":" Associated storage type for this component.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1466},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,101,110,116,105,116,121,46,114,115],"byte_start":127721,"byte_end":127726,"line_start":16,"line_end":16,"column_start":10,"column_end":15},"name":"Index","qualname":"::world::entity::Index","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" An index is basically the id of an `Entity`.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1468},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,101,110,116,105,116,121,46,114,115],"byte_start":128677,"byte_end":128685,"line_start":48,"line_end":48,"column_start":10,"column_end":18},"name":"Entities","qualname":"::world::entity::Entities","value":"Read<'a, EntitiesRes>","parent":null,"children":[],"decl_id":null,"docs":" A wrapper for a read `Entities` resource.\n Note that this is just `Read<Entities>`, so\n you can easily use it in your system:","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1494},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,101,110,116,105,116,121,46,114,115],"byte_start":133532,"byte_end":133548,"line_start":210,"line_end":210,"column_start":12,"column_end":28},"name":"CreateIterAtomic","qualname":"::world::entity::CreateIterAtomic","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator for entity creation.\n Please note that you have to consume\n it because iterators are lazy.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2570},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,101,110,116,105,116,121,46,114,115],"byte_start":133850,"byte_end":133856,"line_start":222,"line_end":222,"column_start":12,"column_end":18},"name":"Entity","qualname":"::world::entity::Entity","value":"","parent":null,"children":[],"decl_id":null,"docs":" `Entity` type, as seen by the user.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,101,110,116,105,116,121,46,114,115],"byte_start":133839,"byte_end":133876,"line_start":222,"line_end":222,"column_start":1,"column_end":38}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,101,110,116,105,116,121,46,114,115],"byte_start":133839,"byte_end":133876,"line_start":222,"line_end":222,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1504},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,101,110,116,105,116,121,46,114,115],"byte_start":134121,"byte_end":134123,"line_start":233,"line_end":233,"column_start":12,"column_end":14},"name":"id","qualname":"<Entity>::id","value":"fn (self) -> Index","parent":null,"children":[],"decl_id":null,"docs":" Returns the index of the `Entity`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,101,110,116,105,116,121,46,114,115],"byte_start":134100,"byte_end":134109,"line_start":232,"line_end":232,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1506},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,101,110,116,105,116,121,46,114,115],"byte_start":134238,"byte_end":134241,"line_start":239,"line_end":239,"column_start":12,"column_end":15},"name":"gen","qualname":"<Entity>::gen","value":"fn (self) -> Generation","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Generation` of the `Entity`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,101,110,116,105,116,121,46,114,115],"byte_start":134217,"byte_end":134226,"line_start":238,"line_end":238,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2612},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,101,110,116,105,116,121,46,114,115],"byte_start":134724,"byte_end":134735,"line_start":255,"line_end":255,"column_start":12,"column_end":23},"name":"EntitiesRes","qualname":"::world::entity::EntitiesRes","value":"EntitiesRes {  }","parent":null,"children":[{"krate":0,"index":1997}],"decl_id":null,"docs":" The entities of this ECS. This is a resource, stored in the `World`.\n If you just want to access it in your system, you can also use the `Entities`\n type def.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1510},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,101,110,116,105,116,121,46,114,115],"byte_start":135196,"byte_end":135202,"line_start":270,"line_end":270,"column_start":12,"column_end":18},"name":"create","qualname":"<EntitiesRes>::create","value":"fn (&self) -> Entity","parent":null,"children":[],"decl_id":null,"docs":" Creates a new entity atomically.\n This will be persistent as soon\n as you call `World::maintain`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1512},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,101,110,116,105,116,121,46,114,115],"byte_start":135431,"byte_end":135442,"line_start":278,"line_end":278,"column_start":12,"column_end":23},"name":"create_iter","qualname":"<EntitiesRes>::create_iter","value":"fn (&self) -> CreateIterAtomic","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator which creates\n new entities atomically.\n They will be persistent as soon\n as you call `World::maintain`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1514},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,101,110,116,105,116,121,46,114,115],"byte_start":135734,"byte_end":135746,"line_start":286,"line_end":286,"column_start":12,"column_end":24},"name":"build_entity","qualname":"<EntitiesRes>::build_entity","value":"fn (&self) -> EntityResBuilder","parent":null,"children":[],"decl_id":null,"docs":" Similar to the `create` method above this\n creates an entity atomically, and then returns a\n builder which can be used to insert components into\n various storages if available.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1516},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,101,110,116,105,116,121,46,114,115],"byte_start":136076,"byte_end":136082,"line_start":298,"line_end":298,"column_start":12,"column_end":18},"name":"delete","qualname":"<EntitiesRes>::delete","value":"fn (&self, e: Entity) -> Result<(), WrongGeneration>","parent":null,"children":[],"decl_id":null,"docs":" Deletes an entity atomically.\n The associated components will be\n deleted as soon as you call `World::maintain`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1518},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,101,110,116,105,116,121,46,114,115],"byte_start":136313,"byte_end":136319,"line_start":304,"line_end":304,"column_start":12,"column_end":18},"name":"entity","qualname":"<EntitiesRes>::entity","value":"fn (&self, id: Index) -> Entity","parent":null,"children":[],"decl_id":null,"docs":" Returns an entity with a given `id`. There's no guarantee for validity,\n meaning the entity could be not alive.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1520},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,101,110,116,105,116,121,46,114,115],"byte_start":136469,"byte_end":136477,"line_start":310,"line_end":310,"column_start":12,"column_end":20},"name":"is_alive","qualname":"<EntitiesRes>::is_alive","value":"fn (&self, e: Entity) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the specified entity is alive.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,101,110,116,105,116,121,46,114,115],"byte_start":136448,"byte_end":136457,"line_start":309,"line_end":309,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1536},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,101,110,116,105,116,121,46,114,115],"byte_start":137393,"byte_end":137409,"line_start":340,"line_end":340,"column_start":12,"column_end":28},"name":"EntityResBuilder","qualname":"::world::entity::EntityResBuilder","value":"EntityResBuilder { entity, entities }","parent":null,"children":[{"krate":0,"index":657},{"krate":0,"index":659},{"krate":0,"index":661}],"decl_id":null,"docs":" An entity builder from `EntitiesRes`.  Allows building an entity with its\n components if you have mutable access to the component storages.\n","sig":null,"attributes":[{"value":"must_use = \"Please call .build() on this to finish building it.\"","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,101,110,116,105,116,121,46,114,115],"byte_start":137314,"byte_end":137381,"line_start":339,"line_end":339,"column_start":1,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":657},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,101,110,116,105,116,121,46,114,115],"byte_start":137455,"byte_end":137461,"line_start":342,"line_end":342,"column_start":9,"column_end":15},"name":"entity","qualname":"::world::entity::EntityResBuilder::entity","value":"world::entity::Entity","parent":{"krate":0,"index":1536},"children":[],"decl_id":null,"docs":" The entity being built\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":659},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,101,110,116,105,116,121,46,114,115],"byte_start":137609,"byte_end":137617,"line_start":345,"line_end":345,"column_start":9,"column_end":17},"name":"entities","qualname":"::world::entity::EntityResBuilder::entities","value":"&'a world::entity::EntitiesRes","parent":{"krate":0,"index":1536},"children":[],"decl_id":null,"docs":" The active borrow to `EntitiesRes`, used to delete the entity if the\n builder is dropped without called `build()`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1540},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,101,110,116,105,116,121,46,114,115],"byte_start":137762,"byte_end":137766,"line_start":351,"line_end":351,"column_start":12,"column_end":16},"name":"with","qualname":"<EntityResBuilder>::with","value":"fn <T> (self, c: T, storage: &mut WriteStorage<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Appends a component and associates it with the entity.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1542},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,101,110,116,105,116,121,46,114,115],"byte_start":137968,"byte_end":137973,"line_start":357,"line_end":357,"column_start":12,"column_end":17},"name":"build","qualname":"<EntityResBuilder>::build","value":"fn (mut self) -> Entity","parent":null,"children":[],"decl_id":null,"docs":" Finishes the building and returns the entity.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2622},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,101,110,116,105,116,121,46,114,115],"byte_start":138472,"byte_end":138482,"line_start":375,"line_end":375,"column_start":12,"column_end":22},"name":"Generation","qualname":"::world::entity::Generation","value":"","parent":null,"children":[],"decl_id":null,"docs":" Index generation. When a new entity is placed at an old index,\n it bumps the `Generation` by 1. This allows to avoid using components\n from the entities that were deleted.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,101,110,116,105,116,121,46,114,115],"byte_start":138461,"byte_end":138495,"line_start":375,"line_end":375,"column_start":1,"column_end":35}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,101,110,116,105,116,121,46,114,115],"byte_start":138461,"byte_end":138495,"line_start":375,"line_end":375,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1556},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,101,110,116,105,116,121,46,114,115],"byte_start":139031,"byte_end":139033,"line_start":396,"line_end":396,"column_start":12,"column_end":14},"name":"id","qualname":"<Generation>::id","value":"fn (self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Returns the id of the generation.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,101,110,116,105,116,121,46,114,115],"byte_start":139010,"byte_end":139019,"line_start":395,"line_end":395,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1558},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,101,110,116,105,116,121,46,114,115],"byte_start":139169,"byte_end":139177,"line_start":402,"line_end":402,"column_start":12,"column_end":20},"name":"is_alive","qualname":"<Generation>::is_alive","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if entities of this `Generation` are alive.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,101,110,116,105,116,121,46,114,115],"byte_start":139148,"byte_end":139157,"line_start":401,"line_end":401,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1614},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,108,97,122,121,46,114,115],"byte_start":144172,"byte_end":144183,"line_start":18,"line_end":18,"column_start":12,"column_end":23},"name":"LazyBuilder","qualname":"::world::lazy::LazyBuilder","value":"LazyBuilder { entity, lazy }","parent":null,"children":[{"krate":0,"index":685},{"krate":0,"index":687}],"decl_id":null,"docs":" Like `EntityBuilder`, but inserts the component\n lazily, meaning on `maintain`.\n If you need those components to exist immediately,\n you have to insert them into the storages yourself.\n","sig":null,"attributes":[{"value":"must_use = \"Please call .build() on this to finish building it.\"","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,108,97,122,121,46,114,115],"byte_start":144093,"byte_end":144160,"line_start":17,"line_end":17,"column_start":1,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":685},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,108,97,122,121,46,114,115],"byte_start":144254,"byte_end":144260,"line_start":20,"line_end":20,"column_start":9,"column_end":15},"name":"entity","qualname":"::world::lazy::LazyBuilder::entity","value":"world::entity::Entity","parent":{"krate":0,"index":1614},"children":[],"decl_id":null,"docs":" The entity that we're inserting components for.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":687},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,108,97,122,121,46,114,115],"byte_start":144313,"byte_end":144317,"line_start":22,"line_end":22,"column_start":9,"column_end":13},"name":"lazy","qualname":"::world::lazy::LazyBuilder::lazy","value":"&'a world::lazy::LazyUpdate","parent":{"krate":0,"index":1614},"children":[],"decl_id":null,"docs":" The lazy update reference.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2696},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,108,97,122,121,46,114,115],"byte_start":146117,"byte_end":146127,"line_start":83,"line_end":83,"column_start":12,"column_end":22},"name":"LazyUpdate","qualname":"::world::lazy::LazyUpdate","value":"LazyUpdate {  }","parent":null,"children":[{"krate":0,"index":2015}],"decl_id":null,"docs":" Lazy updates can be used for world updates\n that need to borrow a lot of resources\n and as such should better be done at the end.\n They work lazily in the sense that they are\n dispatched when calling `world.maintain()`.","sig":null,"attributes":[{"value":"derivative(Default)","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,108,97,122,121,46,114,115],"byte_start":146083,"byte_end":146105,"line_start":82,"line_end":82,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":1632},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,108,97,122,121,46,114,115],"byte_start":146985,"byte_end":146998,"line_start":112,"line_end":112,"column_start":12,"column_end":25},"name":"create_entity","qualname":"<LazyUpdate>::create_entity","value":"fn (&self, ent: &EntitiesRes) -> LazyBuilder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LazyBuilder` which inserts components\n using `LazyUpdate`. This means that the components won't\n be available immediately, but only after a `maintain`\n on `World` is performed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1634},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,108,97,122,121,46,114,115],"byte_start":147752,"byte_end":147758,"line_start":142,"line_end":142,"column_start":12,"column_end":18},"name":"insert","qualname":"<LazyUpdate>::insert","value":"fn <C> (&self, e: Entity, c: C) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Lazily inserts a component for an entity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1636},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,108,97,122,121,46,114,115],"byte_start":148754,"byte_end":148764,"line_start":179,"line_end":179,"column_start":12,"column_end":22},"name":"insert_all","qualname":"<LazyUpdate>::insert_all","value":"fn <C, I> (&self, iter: I) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Lazily inserts components for entities.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1638},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,108,97,122,121,46,114,115],"byte_start":149846,"byte_end":149852,"line_start":219,"line_end":219,"column_start":12,"column_end":18},"name":"remove","qualname":"<LazyUpdate>::remove","value":"fn <C> (&self, e: Entity) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Lazily removes a component.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1640},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,108,97,122,121,46,114,115],"byte_start":150839,"byte_end":150843,"line_start":257,"line_end":257,"column_start":12,"column_end":16},"name":"exec","qualname":"<LazyUpdate>::exec","value":"fn <F> (&self, f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Lazily executes a closure with world access.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1642},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,108,97,122,121,46,114,115],"byte_start":151733,"byte_end":151741,"line_start":289,"line_end":289,"column_start":12,"column_end":20},"name":"exec_mut","qualname":"<LazyUpdate>::exec_mut","value":"fn <F> (&self, f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Lazily executes a closure with mutable world access.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1656},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,109,111,100,46,114,115],"byte_start":107485,"byte_end":107495,"line_start":28,"line_end":28,"column_start":12,"column_end":22},"name":"CreateIter","qualname":"::world::CreateIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator for entity creation.\n Please note that you have to consume\n it because iterators are lazy.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1664},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,109,111,100,46,114,115],"byte_start":107891,"byte_end":107898,"line_start":41,"line_end":41,"column_start":11,"column_end":18},"name":"Builder","qualname":"::world::Builder","value":"Builder","parent":null,"children":[{"krate":0,"index":1666},{"krate":0,"index":1668}],"decl_id":null,"docs":" A common trait for `EntityBuilder` and `LazyBuilder`, allowing either to be used.\n Entity is definitely alive, but the components may or may not exist before a call to\n `World::maintain`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1666},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,109,111,100,46,114,115],"byte_start":108211,"byte_end":108215,"line_start":51,"line_end":51,"column_start":8,"column_end":12},"name":"with","qualname":"::world::Builder::with","value":"fn <C> (self, c: C) -> Self","parent":{"krate":0,"index":1664},"children":[],"decl_id":null,"docs":" Appends a component and associates it with the entity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1668},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,109,111,100,46,114,115],"byte_start":108327,"byte_end":108332,"line_start":54,"line_end":54,"column_start":8,"column_end":13},"name":"build","qualname":"::world::Builder::build","value":"fn (self) -> Entity","parent":{"krate":0,"index":1664},"children":[],"decl_id":null,"docs":" Finishes the building and returns the entity.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1670},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,109,111,100,46,114,115],"byte_start":110084,"byte_end":110097,"line_start":129,"line_end":129,"column_start":12,"column_end":25},"name":"EntityBuilder","qualname":"::world::EntityBuilder","value":"EntityBuilder { entity, world }","parent":null,"children":[{"krate":0,"index":729},{"krate":0,"index":731},{"krate":0,"index":733}],"decl_id":null,"docs":" The entity builder, allowing to\n build an entity together with its components.","sig":null,"attributes":[{"value":"must_use = \"Please call .build() on this to finish building it.\"","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,109,111,100,46,114,115],"byte_start":110005,"byte_end":110072,"line_start":128,"line_end":128,"column_start":1,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":729},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,109,111,100,46,114,115],"byte_start":110188,"byte_end":110194,"line_start":131,"line_end":131,"column_start":9,"column_end":15},"name":"entity","qualname":"::world::EntityBuilder::entity","value":"world::entity::Entity","parent":{"krate":0,"index":1670},"children":[],"decl_id":null,"docs":" The (already created) entity for which components will be inserted.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":731},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,109,111,100,46,114,115],"byte_start":110273,"byte_end":110278,"line_start":133,"line_end":133,"column_start":9,"column_end":14},"name":"world","qualname":"::world::EntityBuilder::world","value":"&'a world::World","parent":{"krate":0,"index":1670},"children":[],"decl_id":null,"docs":" A reference to the `World` for component insertions.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1682},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,109,111,100,46,114,115],"byte_start":113419,"byte_end":113424,"line_start":241,"line_end":241,"column_start":12,"column_end":17},"name":"World","qualname":"::world::World","value":"World { res }","parent":null,"children":[{"krate":0,"index":741}],"decl_id":null,"docs":" The `World` struct contains the component storages and\n other resources.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":741},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,109,111,100,46,114,115],"byte_start":113478,"byte_end":113481,"line_start":243,"line_end":243,"column_start":9,"column_end":12},"name":"res","qualname":"::world::World::res","value":"shred::Resources","parent":{"krate":0,"index":1682},"children":[],"decl_id":null,"docs":" The resources used for this world.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1686},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,109,111,100,46,114,115],"byte_start":113558,"byte_end":113561,"line_start":248,"line_end":248,"column_start":12,"column_end":15},"name":"new","qualname":"<World>::new","value":"fn () -> World","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty `World`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1688},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,109,111,100,46,114,115],"byte_start":114237,"byte_end":114245,"line_start":277,"line_end":277,"column_start":12,"column_end":20},"name":"register","qualname":"<World>::register","value":"fn <T> (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Registers a new component, adding the component storage.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1690},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,109,111,100,46,114,115],"byte_start":114522,"byte_end":114543,"line_start":287,"line_end":287,"column_start":12,"column_end":33},"name":"register_with_storage","qualname":"<World>::register_with_storage","value":"fn <F, T> (&mut self, storage: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Registers a new component with a given storage.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1694},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,109,111,100,46,114,115],"byte_start":115846,"byte_end":115857,"line_start":328,"line_end":328,"column_start":12,"column_end":23},"name":"system_data","qualname":"<World>::system_data","value":"fn <'a, T> (&'a self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Gets `SystemData` `T` from the `World`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1696},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,109,111,100,46,114,115],"byte_start":116035,"byte_end":116040,"line_start":336,"line_end":336,"column_start":12,"column_end":17},"name":"setup","qualname":"<World>::setup","value":"fn <'a, T> (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets up system data `T` for fetching afterwards.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1698},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,109,111,100,46,114,115],"byte_start":117925,"byte_end":117929,"line_start":392,"line_end":392,"column_start":12,"column_end":16},"name":"exec","qualname":"<World>::exec","value":"fn <'a, F, R, T> (&'a mut self, f: F) -> R","parent":null,"children":[],"decl_id":null,"docs":" Executes `f` once, right now with the specified system data.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1700},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,109,111,100,46,114,115],"byte_start":119261,"byte_end":119273,"line_start":435,"line_end":435,"column_start":12,"column_end":24},"name":"add_resource","qualname":"<World>::add_resource","value":"fn <T> (&mut self, res: T) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds a resource to the world.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1702},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,109,111,100,46,114,115],"byte_start":119659,"byte_end":119671,"line_start":449,"line_end":449,"column_start":12,"column_end":24},"name":"read_storage","qualname":"<World>::read_storage","value":"fn <T> (&self) -> ReadStorage<T>","parent":null,"children":[],"decl_id":null,"docs":" Fetches a component's storage for reading.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1706},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,109,111,100,46,114,115],"byte_start":120014,"byte_end":120027,"line_start":461,"line_end":461,"column_start":12,"column_end":25},"name":"write_storage","qualname":"<World>::write_storage","value":"fn <T> (&self) -> WriteStorage<T>","parent":null,"children":[],"decl_id":null,"docs":" Fetches a component's storage for writing.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1710},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,109,111,100,46,114,115],"byte_start":120332,"byte_end":120345,"line_start":473,"line_end":473,"column_start":12,"column_end":25},"name":"read_resource","qualname":"<World>::read_resource","value":"fn <T> (&self) -> Fetch<T>","parent":null,"children":[],"decl_id":null,"docs":" Fetches a resource for reading.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1712},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,109,111,100,46,114,115],"byte_start":120589,"byte_end":120603,"line_start":483,"line_end":483,"column_start":12,"column_end":26},"name":"write_resource","qualname":"<World>::write_resource","value":"fn <T> (&self) -> FetchMut<T>","parent":null,"children":[],"decl_id":null,"docs":" Fetches a resource for writing.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1714},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,109,111,100,46,114,115],"byte_start":120921,"byte_end":120929,"line_start":492,"line_end":492,"column_start":12,"column_end":20},"name":"entities","qualname":"<World>::entities","value":"fn (&self) -> Read<EntitiesRes>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method for fetching entities.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1718},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,109,111,100,46,114,115],"byte_start":121488,"byte_end":121501,"line_start":507,"line_end":507,"column_start":12,"column_end":25},"name":"create_entity","qualname":"<World>::create_entity","value":"fn (&mut self) -> EntityBuilder","parent":null,"children":[],"decl_id":null,"docs":" Allows building an entity with its components.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1720},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,109,111,100,46,114,115],"byte_start":121912,"byte_end":121935,"line_start":518,"line_end":518,"column_start":12,"column_end":35},"name":"create_entity_unchecked","qualname":"<World>::create_entity_unchecked","value":"fn (&self) -> EntityBuilder","parent":null,"children":[],"decl_id":null,"docs":" Allows building an entity with its components.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1722},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,109,111,100,46,114,115],"byte_start":122535,"byte_end":122546,"line_start":542,"line_end":542,"column_start":12,"column_end":23},"name":"create_iter","qualname":"<World>::create_iter","value":"fn (&mut self) -> CreateIter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator for entity creation.\n This makes it easy to create a whole collection\n of them.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1724},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,109,111,100,46,114,115],"byte_start":122678,"byte_end":122691,"line_start":547,"line_end":547,"column_start":12,"column_end":25},"name":"delete_entity","qualname":"<World>::delete_entity","value":"fn (&mut self, entity: Entity) -> Result<(), WrongGeneration>","parent":null,"children":[],"decl_id":null,"docs":" Deletes an entity and its components.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1726},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,109,111,100,46,114,115],"byte_start":122871,"byte_end":122886,"line_start":552,"line_end":552,"column_start":12,"column_end":27},"name":"delete_entities","qualname":"<World>::delete_entities","value":"fn (&mut self, delete: &[Entity]) -> Result<(), WrongGeneration>","parent":null,"children":[],"decl_id":null,"docs":" Deletes the specified entities and their components.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1728},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,109,111,100,46,114,115],"byte_start":123107,"byte_end":123117,"line_start":559,"line_end":559,"column_start":12,"column_end":22},"name":"delete_all","qualname":"<World>::delete_all","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Deletes all entities and their components.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1732},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,109,111,100,46,114,115],"byte_start":123989,"byte_end":123997,"line_start":584,"line_end":584,"column_start":12,"column_end":20},"name":"is_alive","qualname":"<World>::is_alive","value":"fn (&self, e: Entity) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if an entity is alive.\n Please note that atomically created or deleted entities\n (the ones created / deleted with the `Entities` struct)\n are not handled by this method. Therefore, you\n should have called `maintain()` before using this\n method.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1734},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,109,111,100,46,114,115],"byte_start":124459,"byte_end":124467,"line_start":596,"line_end":596,"column_start":12,"column_end":20},"name":"maintain","qualname":"<World>::maintain","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Merges in the appendix, recording all the dynamically created\n and deleted entities into the persistent generations vector.\n Also removes all the abandoned components.","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,99,111,109,109,111,110,46,114,115],"byte_start":8015,"byte_end":8026,"line_start":45,"line_end":45,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":82},{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,99,111,109,109,111,110,46,114,115],"byte_start":8413,"byte_end":8419,"line_start":61,"line_end":61,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,99,111,109,109,111,110,46,114,115],"byte_start":8485,"byte_end":8491,"line_start":67,"line_end":67,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":94},{"krate":0,"index":96},{"krate":0,"index":98},{"krate":0,"index":100},{"krate":0,"index":102},{"krate":0,"index":104},{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,99,111,109,109,111,110,46,114,115],"byte_start":11392,"byte_end":11397,"line_start":175,"line_end":175,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,99,111,109,109,111,110,46,114,115],"byte_start":11532,"byte_end":11537,"line_start":182,"line_end":182,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":118},{"krate":0,"index":120},{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,99,111,109,109,111,110,46,114,115],"byte_start":12757,"byte_end":12769,"line_start":224,"line_end":224,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,99,104,97,110,103,101,115,101,116,46,114,115],"byte_start":19011,"byte_end":19020,"line_start":49,"line_end":49,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":184},{"krate":0,"index":186},{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,99,104,97,110,103,101,115,101,116,46,114,115],"byte_start":19902,"byte_end":19911,"line_start":84,"line_end":84,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":192}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,99,104,97,110,103,101,115,101,116,46,114,115],"byte_start":20201,"byte_end":20210,"line_start":97,"line_end":97,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,99,104,97,110,103,101,115,101,116,46,114,115],"byte_start":21158,"byte_end":21167,"line_start":137,"line_end":137,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":224},{"krate":0,"index":226},{"krate":0,"index":228},{"krate":0,"index":230},{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":22996,"byte_end":23004,"line_start":15,"line_end":15,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":23203,"byte_end":23211,"line_start":25,"line_end":25,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":23310,"byte_end":23318,"line_start":31,"line_end":31,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":23432,"byte_end":23440,"line_start":37,"line_end":37,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":23561,"byte_end":23569,"line_start":43,"line_end":43,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":24126,"byte_end":24131,"line_start":67,"line_end":67,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":24454,"byte_end":24459,"line_start":78,"line_end":78,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":24555,"byte_end":24560,"line_start":84,"line_end":84,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":24666,"byte_end":24671,"line_start":90,"line_end":90,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":290},{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":25400,"byte_end":25415,"line_start":119,"line_end":119,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":25679,"byte_end":25694,"line_start":129,"line_end":129,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":26066,"byte_end":26073,"line_start":142,"line_end":142,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":26178,"byte_end":26185,"line_start":148,"line_end":148,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,106,111,105,110,47,112,97,114,95,106,111,105,110,46,114,115],"byte_start":44249,"byte_end":44260,"line_start":32,"line_end":32,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":388},{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,106,111,105,110,47,112,97,114,95,106,111,105,110,46,114,115],"byte_start":45030,"byte_end":45042,"line_start":65,"line_end":65,"column_start":13,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,106,111,105,110,47,112,97,114,95,106,111,105,110,46,114,115],"byte_start":45315,"byte_end":45327,"line_start":77,"line_end":77,"column_start":29,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,106,111,105,110,47,112,97,114,95,106,111,105,110,46,114,115],"byte_start":45474,"byte_end":45486,"line_start":85,"line_end":85,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":402},{"krate":0,"index":404},{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,106,111,105,110,47,109,111,100,46,114,115],"byte_start":34754,"byte_end":34763,"line_start":257,"line_end":257,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":450},{"krate":0,"index":452},{"krate":0,"index":454},{"krate":0,"index":456},{"krate":0,"index":458},{"krate":0,"index":460}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,106,111,105,110,47,109,111,100,46,114,115],"byte_start":35504,"byte_end":35512,"line_start":289,"line_end":289,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":466}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,106,111,105,110,47,109,111,100,46,114,115],"byte_start":35953,"byte_end":35961,"line_start":304,"line_end":304,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":470},{"krate":0,"index":472}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,106,111,105,110,47,109,111,100,46,114,115],"byte_start":38472,"byte_end":38480,"line_start":377,"line_end":377,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":476},{"krate":0,"index":478}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,100,97,116,97,46,114,115],"byte_start":64446,"byte_end":64457,"line_start":114,"line_end":114,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":706},{"krate":0,"index":708},{"krate":0,"index":710},{"krate":0,"index":712}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,100,97,116,97,46,114,115],"byte_start":67223,"byte_end":67235,"line_start":205,"line_end":205,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":718},{"krate":0,"index":720},{"krate":0,"index":722},{"krate":0,"index":724}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,100,114,97,105,110,46,114,115],"byte_start":68855,"byte_end":68860,"line_start":14,"line_end":14,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":744},{"krate":0,"index":746},{"krate":0,"index":748},{"krate":0,"index":750},{"krate":0,"index":752}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,102,108,97,103,103,101,100,46,114,115],"byte_start":75764,"byte_end":75778,"line_start":142,"line_end":142,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":784}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,102,108,97,103,103,101,100,46,114,115],"byte_start":76094,"byte_end":76108,"line_start":155,"line_end":155,"column_start":72,"column_end":86},"value":"","parent":null,"children":[{"krate":0,"index":788},{"krate":0,"index":790},{"krate":0,"index":792},{"krate":0,"index":794},{"krate":0,"index":796}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,102,108,97,103,103,101,100,46,114,115],"byte_start":76908,"byte_end":76922,"line_start":184,"line_end":184,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":800},{"krate":0,"index":802}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,103,101,110,101,114,105,99,46,114,115],"byte_start":77634,"byte_end":77645,"line_start":18,"line_end":18,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":832},{"krate":0,"index":834},{"krate":0,"index":836}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,103,101,110,101,114,105,99,46,114,115],"byte_start":78177,"byte_end":78189,"line_start":48,"line_end":48,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":848},{"krate":0,"index":850},{"krate":0,"index":852}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,103,101,110,101,114,105,99,46,114,115],"byte_start":79357,"byte_end":79369,"line_start":96,"line_end":96,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":876},{"krate":0,"index":878},{"krate":0,"index":880},{"krate":0,"index":882},{"krate":0,"index":884}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,114,101,115,116,114,105,99,116,46,114,115],"byte_start":81554,"byte_end":81575,"line_start":32,"line_end":32,"column_start":28,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,114,101,115,116,114,105,99,116,46,114,115],"byte_start":81606,"byte_end":81634,"line_start":33,"line_end":33,"column_start":28,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,114,101,115,116,114,105,99,116,46,114,115],"byte_start":85335,"byte_end":85342,"line_start":157,"line_end":157,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":984}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,114,101,115,116,114,105,99,116,46,114,115],"byte_start":86073,"byte_end":86080,"line_start":179,"line_end":179,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":988},{"krate":0,"index":990}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,114,101,115,116,114,105,99,116,46,114,115],"byte_start":87593,"byte_end":87606,"line_start":225,"line_end":225,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":996}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,114,101,115,116,114,105,99,116,46,114,115],"byte_start":87968,"byte_end":87981,"line_start":238,"line_end":238,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1000}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,114,101,115,116,114,105,99,116,46,114,115],"byte_start":88366,"byte_end":88379,"line_start":251,"line_end":251,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1004}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,114,101,115,116,114,105,99,116,46,114,115],"byte_start":89113,"byte_end":89126,"line_start":273,"line_end":273,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1008}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,115,116,111,114,97,103,101,115,46,114,115],"byte_start":90292,"byte_end":90304,"line_start":19,"line_end":19,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1028},{"krate":0,"index":1030},{"krate":0,"index":1032},{"krate":0,"index":1034},{"krate":0,"index":1036}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,115,116,111,114,97,103,101,115,46,114,115],"byte_start":90814,"byte_end":90826,"line_start":44,"line_end":44,"column_start":36,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,115,116,111,114,97,103,101,115,46,114,115],"byte_start":91038,"byte_end":91052,"line_start":51,"line_end":51,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1042},{"krate":0,"index":1044},{"krate":0,"index":1046},{"krate":0,"index":1048},{"krate":0,"index":1050}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,115,116,111,114,97,103,101,115,46,114,115],"byte_start":91561,"byte_end":91575,"line_start":76,"line_end":76,"column_start":36,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,115,116,111,114,97,103,101,115,46,114,115],"byte_start":92032,"byte_end":92047,"line_start":92,"line_end":92,"column_start":35,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1056},{"krate":0,"index":1058},{"krate":0,"index":1060},{"krate":0,"index":1062},{"krate":0,"index":1064}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,115,116,111,114,97,103,101,115,46,114,115],"byte_start":93272,"byte_end":93287,"line_start":131,"line_end":131,"column_start":36,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,115,116,111,114,97,103,101,115,46,114,115],"byte_start":93485,"byte_end":93496,"line_start":137,"line_end":137,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1072},{"krate":0,"index":1074},{"krate":0,"index":1076},{"krate":0,"index":1078},{"krate":0,"index":1080}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,115,116,111,114,97,103,101,115,46,114,115],"byte_start":93918,"byte_end":93929,"line_start":162,"line_end":162,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1084}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,115,116,111,114,97,103,101,115,46,114,115],"byte_start":94230,"byte_end":94241,"line_start":176,"line_end":176,"column_start":36,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,115,116,111,114,97,103,101,115,46,114,115],"byte_start":94504,"byte_end":94514,"line_start":184,"line_end":184,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1092},{"krate":0,"index":1096},{"krate":0,"index":1098},{"krate":0,"index":1100},{"krate":0,"index":1104}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,115,116,111,114,97,103,101,115,46,114,115],"byte_start":95593,"byte_end":95603,"line_start":227,"line_end":227,"column_start":36,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,116,114,97,99,107,46,114,115],"byte_start":97624,"byte_end":97631,"line_start":32,"line_end":32,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1146}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,116,114,97,99,107,46,114,115],"byte_start":97926,"byte_end":97933,"line_start":44,"line_end":44,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1150},{"krate":0,"index":1152},{"krate":0,"index":1154}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,101,110,116,114,121,46,114,115],"byte_start":98838,"byte_end":98845,"line_start":6,"line_end":6,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1166},{"krate":0,"index":1168}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,101,110,116,114,121,46,114,115],"byte_start":102570,"byte_end":102577,"line_start":126,"line_end":126,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1174},{"krate":0,"index":1176},{"krate":0,"index":1178},{"krate":0,"index":1180},{"krate":0,"index":1182},{"krate":0,"index":1184}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,101,110,116,114,121,46,114,115],"byte_start":103747,"byte_end":103760,"line_start":168,"line_end":168,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1190}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,101,110,116,114,121,46,114,115],"byte_start":104025,"byte_end":104038,"line_start":179,"line_end":179,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1194},{"krate":0,"index":1196},{"krate":0,"index":1198},{"krate":0,"index":1200}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,101,110,116,114,121,46,114,115],"byte_start":105089,"byte_end":105100,"line_start":213,"line_end":213,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1206}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,101,110,116,114,121,46,114,115],"byte_start":105902,"byte_end":105914,"line_start":237,"line_end":237,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1212},{"krate":0,"index":1214}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":48526,"byte_end":48537,"line_start":45,"line_end":45,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1220},{"krate":0,"index":1222},{"krate":0,"index":1224},{"krate":0,"index":1226},{"krate":0,"index":1228}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":48815,"byte_end":48826,"line_start":59,"line_end":59,"column_start":37,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":48892,"byte_end":48903,"line_start":62,"line_end":62,"column_start":29,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":49073,"byte_end":49083,"line_start":70,"line_end":70,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1240},{"krate":0,"index":1242}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":49252,"byte_end":49265,"line_start":83,"line_end":83,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1246}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":50798,"byte_end":50811,"line_start":130,"line_end":130,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1254},{"krate":0,"index":1256},{"krate":0,"index":1258},{"krate":0,"index":1260},{"krate":0,"index":1262}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":51836,"byte_end":51849,"line_start":171,"line_end":171,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1266}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":52238,"byte_end":52245,"line_start":186,"line_end":186,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1272}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":52588,"byte_end":52595,"line_start":198,"line_end":198,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1276},{"krate":0,"index":1278},{"krate":0,"index":1280},{"krate":0,"index":1282},{"krate":0,"index":1284},{"krate":0,"index":1286},{"krate":0,"index":1288}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":54277,"byte_end":54284,"line_start":248,"line_end":248,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1292},{"krate":0,"index":1294},{"krate":0,"index":1296},{"krate":0,"index":1298},{"krate":0,"index":1300},{"krate":0,"index":1302}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":56663,"byte_end":56670,"line_start":319,"line_end":319,"column_start":54,"column_end":61},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":58919,"byte_end":58920,"line_start":406,"line_end":406,"column_start":24,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1348}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,101,110,116,105,116,121,46,114,115],"byte_start":128998,"byte_end":129007,"line_start":62,"line_end":62,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1472},{"krate":0,"index":1474},{"krate":0,"index":1476},{"krate":0,"index":1478},{"krate":0,"index":1480},{"krate":0,"index":1482},{"krate":0,"index":1484},{"krate":0,"index":1486},{"krate":0,"index":1488},{"krate":0,"index":1492}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,101,110,116,105,116,121,46,114,115],"byte_start":133592,"byte_end":133608,"line_start":212,"line_end":212,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1498},{"krate":0,"index":1500}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,101,110,116,105,116,121,46,114,115],"byte_start":133883,"byte_end":133889,"line_start":224,"line_end":224,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1504},{"krate":0,"index":1506}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,101,110,116,105,116,121,46,114,115],"byte_start":134779,"byte_end":134790,"line_start":259,"line_end":259,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1510},{"krate":0,"index":1512},{"krate":0,"index":1514},{"krate":0,"index":1516},{"krate":0,"index":1518},{"krate":0,"index":1520}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,101,110,116,105,116,121,46,114,115],"byte_start":137665,"byte_end":137681,"line_start":349,"line_end":349,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1540},{"krate":0,"index":1542}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,101,110,116,105,116,121,46,114,115],"byte_start":138070,"byte_end":138086,"line_start":363,"line_end":363,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1546}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,101,110,116,105,116,121,46,114,115],"byte_start":138564,"byte_end":138574,"line_start":378,"line_end":378,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1550}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,101,110,116,105,116,121,46,114,115],"byte_start":138713,"byte_end":138723,"line_start":384,"line_end":384,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1554},{"krate":0,"index":1556},{"krate":0,"index":1558},{"krate":0,"index":1560}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,101,110,116,105,116,121,46,114,115],"byte_start":139645,"byte_end":139663,"line_start":421,"line_end":421,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1564},{"krate":0,"index":1566},{"krate":0,"index":1568},{"krate":0,"index":1570},{"krate":0,"index":1572}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,101,110,116,105,116,121,46,114,115],"byte_start":140912,"byte_end":140923,"line_start":474,"line_end":474,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1576},{"krate":0,"index":1578},{"krate":0,"index":1580}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,101,110,116,105,116,121,46,114,115],"byte_start":141318,"byte_end":141329,"line_start":491,"line_end":491,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1584}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,108,97,122,121,46,114,115],"byte_start":143813,"byte_end":143818,"line_start":7,"line_end":7,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1612}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,108,97,122,121,46,114,115],"byte_start":144359,"byte_end":144370,"line_start":25,"line_end":25,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1618},{"krate":0,"index":1620}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,108,97,122,121,46,114,115],"byte_start":145345,"byte_end":145346,"line_start":59,"line_end":59,"column_start":32,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1628}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,108,97,122,121,46,114,115],"byte_start":146250,"byte_end":146260,"line_start":88,"line_end":88,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1632},{"krate":0,"index":1634},{"krate":0,"index":1636},{"krate":0,"index":1638},{"krate":0,"index":1640},{"krate":0,"index":1642},{"krate":0,"index":1644},{"krate":0,"index":1646},{"krate":0,"index":1650}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,108,97,122,121,46,114,115],"byte_start":152495,"byte_end":152505,"line_start":319,"line_end":319,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1654}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,109,111,100,46,114,115],"byte_start":107551,"byte_end":107561,"line_start":30,"line_end":30,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1660},{"krate":0,"index":1662}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,109,111,100,46,114,115],"byte_start":110332,"byte_end":110345,"line_start":137,"line_end":137,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1674},{"krate":0,"index":1676}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,109,111,100,46,114,115],"byte_start":111097,"byte_end":111110,"line_start":163,"line_end":163,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1680}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,109,111,100,46,114,115],"byte_start":113502,"byte_end":113507,"line_start":246,"line_end":246,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1686},{"krate":0,"index":1688},{"krate":0,"index":1690},{"krate":0,"index":1692},{"krate":0,"index":1694},{"krate":0,"index":1696},{"krate":0,"index":1698},{"krate":0,"index":1700},{"krate":0,"index":1702},{"krate":0,"index":1706},{"krate":0,"index":1710},{"krate":0,"index":1712},{"krate":0,"index":1714},{"krate":0,"index":1716},{"krate":0,"index":1718},{"krate":0,"index":1720},{"krate":0,"index":1722},{"krate":0,"index":1724},{"krate":0,"index":1726},{"krate":0,"index":1728},{"krate":0,"index":1732},{"krate":0,"index":1734},{"krate":0,"index":1736},{"krate":0,"index":1738}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,109,111,100,46,114,115],"byte_start":125199,"byte_end":125204,"line_start":619,"line_end":619,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,109,111,100,46,114,115],"byte_start":125230,"byte_end":125235,"line_start":621,"line_end":621,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,109,111,100,46,114,115],"byte_start":125267,"byte_end":125272,"line_start":623,"line_end":623,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1746}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,109,111,100,46,114,115],"byte_start":125358,"byte_end":125363,"line_start":629,"line_end":629,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1750}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,109,111,100,46,114,115],"byte_start":125428,"byte_end":125433,"line_start":633,"line_end":633,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1754}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5887,"byte_end":5893,"line_start":212,"line_end":212,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":30}},{"kind":"Mod","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5961,"byte_end":5970,"line_start":218,"line_end":218,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":160}},{"kind":"Mod","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5980,"byte_end":5985,"line_start":219,"line_end":219,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":234}},{"kind":"Mod","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5995,"byte_end":5999,"line_start":220,"line_end":220,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":310}},{"kind":"Mod","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6009,"byte_end":6016,"line_start":221,"line_end":221,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":486}},{"kind":"Mod","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6026,"byte_end":6033,"line_start":222,"line_end":222,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":566}},{"kind":"Mod","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6043,"byte_end":6048,"line_start":223,"line_end":223,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1364}}],"macro_refs":[],"relations":[{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,99,111,109,109,111,110,46,114,115],"byte_start":8015,"byte_end":8026,"line_start":45,"line_end":45,"column_start":23,"column_end":34},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":1830},"to":{"krate":2,"index":4316}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,99,111,109,109,111,110,46,114,115],"byte_start":8413,"byte_end":8419,"line_start":61,"line_end":61,"column_start":18,"column_end":24},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":1836},"to":{"krate":2,"index":2632}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,99,111,109,109,111,110,46,114,115],"byte_start":8485,"byte_end":8491,"line_start":67,"line_end":67,"column_start":6,"column_end":12},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":1836},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,99,111,109,109,111,110,46,114,115],"byte_start":11392,"byte_end":11397,"line_start":175,"line_end":175,"column_start":9,"column_end":14},"kind":{"variant":"Impl","fields":[4]},"from":{"krate":0,"index":1842},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,99,111,109,109,111,110,46,114,115],"byte_start":11532,"byte_end":11537,"line_start":182,"line_end":182,"column_start":31,"column_end":36},"kind":{"variant":"Impl","fields":[5]},"from":{"krate":0,"index":1842},"to":{"krate":11,"index":868}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,99,111,109,109,111,110,46,114,115],"byte_start":12757,"byte_end":12769,"line_start":224,"line_end":224,"column_start":17,"column_end":29},"kind":{"variant":"Impl","fields":[6]},"from":{"krate":0,"index":124},"to":{"krate":55,"index":3210}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,99,104,97,110,103,101,115,101,116,46,114,115],"byte_start":19011,"byte_end":19020,"line_start":49,"line_end":49,"column_start":9,"column_end":18},"kind":{"variant":"Impl","fields":[20]},"from":{"krate":0,"index":2002},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,99,104,97,110,103,101,115,101,116,46,114,115],"byte_start":19902,"byte_end":19911,"line_start":84,"line_end":84,"column_start":39,"column_end":48},"kind":{"variant":"Impl","fields":[21]},"from":{"krate":0,"index":2002},"to":{"krate":2,"index":4490}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,99,104,97,110,103,101,115,101,116,46,114,115],"byte_start":20201,"byte_end":20210,"line_start":97,"line_end":97,"column_start":33,"column_end":42},"kind":{"variant":"Impl","fields":[22]},"from":{"krate":0,"index":2002},"to":{"krate":2,"index":4510}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,99,104,97,110,103,101,115,101,116,46,114,115],"byte_start":21158,"byte_end":21167,"line_start":137,"line_end":137,"column_start":18,"column_end":27},"kind":{"variant":"Impl","fields":[23]},"from":{"krate":0,"index":2002},"to":{"krate":0,"index":428}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":22996,"byte_end":23004,"line_start":15,"line_end":15,"column_start":6,"column_end":14},"kind":{"variant":"Impl","fields":[24]},"from":{"krate":0,"index":254},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":23203,"byte_end":23211,"line_start":25,"line_end":25,"column_start":26,"column_end":34},"kind":{"variant":"Impl","fields":[25]},"from":{"krate":0,"index":254},"to":{"krate":2,"index":2644}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":23310,"byte_end":23318,"line_start":31,"line_end":31,"column_start":16,"column_end":24},"kind":{"variant":"Impl","fields":[26]},"from":{"krate":0,"index":254},"to":{"krate":2,"index":8426}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":23432,"byte_end":23440,"line_start":37,"line_end":37,"column_start":18,"column_end":26},"kind":{"variant":"Impl","fields":[27]},"from":{"krate":0,"index":254},"to":{"krate":2,"index":8430}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":23561,"byte_end":23569,"line_start":43,"line_end":43,"column_start":19,"column_end":27},"kind":{"variant":"Impl","fields":[28]},"from":{"krate":0,"index":254},"to":{"krate":1,"index":2470}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":24126,"byte_end":24131,"line_start":67,"line_end":67,"column_start":18,"column_end":23},"kind":{"variant":"Impl","fields":[29]},"from":{"krate":0,"index":2008},"to":{"krate":2,"index":8430}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":24454,"byte_end":24459,"line_start":78,"line_end":78,"column_start":24,"column_end":29},"kind":{"variant":"Impl","fields":[30]},"from":{"krate":0,"index":2008},"to":{"krate":2,"index":2656}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":24555,"byte_end":24560,"line_start":84,"line_end":84,"column_start":32,"column_end":37},"kind":{"variant":"Impl","fields":[31]},"from":{"krate":0,"index":2008},"to":{"krate":2,"index":2656}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":24666,"byte_end":24671,"line_start":90,"line_end":90,"column_start":19,"column_end":24},"kind":{"variant":"Impl","fields":[32]},"from":{"krate":0,"index":2008},"to":{"krate":1,"index":2470}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":25400,"byte_end":25415,"line_start":119,"line_end":119,"column_start":18,"column_end":33},"kind":{"variant":"Impl","fields":[33]},"from":{"krate":0,"index":2014},"to":{"krate":2,"index":8430}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":25679,"byte_end":25694,"line_start":129,"line_end":129,"column_start":19,"column_end":34},"kind":{"variant":"Impl","fields":[34]},"from":{"krate":0,"index":2014},"to":{"krate":1,"index":2470}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":26066,"byte_end":26073,"line_start":142,"line_end":142,"column_start":18,"column_end":25},"kind":{"variant":"Impl","fields":[35]},"from":{"krate":0,"index":2030},"to":{"krate":2,"index":8430}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":26178,"byte_end":26185,"line_start":148,"line_end":148,"column_start":19,"column_end":26},"kind":{"variant":"Impl","fields":[36]},"from":{"krate":0,"index":2030},"to":{"krate":1,"index":2470}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,106,111,105,110,47,112,97,114,95,106,111,105,110,46,114,115],"byte_start":43703,"byte_end":43707,"line_start":14,"line_end":14,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":0,"index":428},"to":{"krate":0,"index":380}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,106,111,105,110,47,112,97,114,95,106,111,105,110,46,114,115],"byte_start":44249,"byte_end":44260,"line_start":32,"line_end":32,"column_start":30,"column_end":41},"kind":{"variant":"Impl","fields":[37]},"from":{"krate":0,"index":384},"to":{"krate":16,"index":3482}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,106,111,105,110,47,112,97,114,95,106,111,105,110,46,114,115],"byte_start":45030,"byte_end":45042,"line_start":65,"line_end":65,"column_start":13,"column_end":25},"kind":{"variant":"Impl","fields":[38]},"from":{"krate":0,"index":392},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,106,111,105,110,47,112,97,114,95,106,111,105,110,46,114,115],"byte_start":45315,"byte_end":45327,"line_start":77,"line_end":77,"column_start":29,"column_end":41},"kind":{"variant":"Impl","fields":[39]},"from":{"krate":0,"index":392},"to":{"krate":2,"index":1700}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,106,111,105,110,47,112,97,114,95,106,111,105,110,46,114,115],"byte_start":45474,"byte_end":45486,"line_start":85,"line_end":85,"column_start":35,"column_end":47},"kind":{"variant":"Impl","fields":[40]},"from":{"krate":0,"index":392},"to":{"krate":16,"index":1118}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,106,111,105,110,47,109,111,100,46,114,115],"byte_start":34754,"byte_end":34763,"line_start":257,"line_end":257,"column_start":18,"column_end":27},"kind":{"variant":"Impl","fields":[41]},"from":{"krate":0,"index":446},"to":{"krate":0,"index":428}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,106,111,105,110,47,109,111,100,46,114,115],"byte_start":35504,"byte_end":35512,"line_start":289,"line_end":289,"column_start":15,"column_end":23},"kind":{"variant":"Impl","fields":[42]},"from":{"krate":0,"index":462},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,106,111,105,110,47,109,111,100,46,114,115],"byte_start":35953,"byte_end":35961,"line_start":304,"line_end":304,"column_start":15,"column_end":23},"kind":{"variant":"Impl","fields":[43]},"from":{"krate":0,"index":462},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,106,111,105,110,47,109,111,100,46,114,115],"byte_start":38472,"byte_end":38480,"line_start":377,"line_end":377,"column_start":39,"column_end":47},"kind":{"variant":"Impl","fields":[44]},"from":{"krate":0,"index":462},"to":{"krate":2,"index":4316}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,100,97,116,97,46,114,115],"byte_start":64446,"byte_end":64457,"line_start":114,"line_end":114,"column_start":32,"column_end":43},"kind":{"variant":"Impl","fields":[45]},"from":{"krate":0,"index":702},"to":{"krate":11,"index":882}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,100,97,116,97,46,114,115],"byte_start":67223,"byte_end":67235,"line_start":205,"line_end":205,"column_start":32,"column_end":44},"kind":{"variant":"Impl","fields":[46]},"from":{"krate":0,"index":714},"to":{"krate":11,"index":882}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,100,114,97,105,110,46,114,115],"byte_start":68855,"byte_end":68860,"line_start":14,"line_end":14,"column_start":22,"column_end":27},"kind":{"variant":"Impl","fields":[47]},"from":{"krate":0,"index":740},"to":{"krate":0,"index":428}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,102,108,97,103,103,101,100,46,114,115],"byte_start":75764,"byte_end":75778,"line_start":142,"line_end":142,"column_start":24,"column_end":38},"kind":{"variant":"Impl","fields":[48]},"from":{"krate":0,"index":780},"to":{"krate":2,"index":2632}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,102,108,97,103,103,101,100,46,114,115],"byte_start":76094,"byte_end":76108,"line_start":155,"line_end":155,"column_start":72,"column_end":86},"kind":{"variant":"Impl","fields":[49]},"from":{"krate":0,"index":780},"to":{"krate":0,"index":1350}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,102,108,97,103,103,101,100,46,114,115],"byte_start":76908,"byte_end":76922,"line_start":184,"line_end":184,"column_start":24,"column_end":38},"kind":{"variant":"Impl","fields":[50]},"from":{"krate":0,"index":780},"to":{"krate":0,"index":1138}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,103,101,110,101,114,105,99,46,114,115],"byte_start":77634,"byte_end":77645,"line_start":18,"line_end":18,"column_start":36,"column_end":47},"kind":{"variant":"Impl","fields":[51]},"from":{"krate":0,"index":702},"to":{"krate":0,"index":822}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,103,101,110,101,114,105,99,46,114,115],"byte_start":78177,"byte_end":78189,"line_start":48,"line_end":48,"column_start":36,"column_end":48},"kind":{"variant":"Impl","fields":[52]},"from":{"krate":0,"index":714},"to":{"krate":0,"index":822}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,103,101,110,101,114,105,99,46,114,115],"byte_start":79357,"byte_end":79369,"line_start":96,"line_end":96,"column_start":37,"column_end":49},"kind":{"variant":"Impl","fields":[53]},"from":{"krate":0,"index":714},"to":{"krate":0,"index":862}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,114,101,115,116,114,105,99,116,46,114,115],"byte_start":81518,"byte_end":81523,"line_start":31,"line_end":31,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":1706},"to":{"krate":0,"index":946}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,114,101,115,116,114,105,99,116,46,114,115],"byte_start":81554,"byte_end":81575,"line_start":32,"line_end":32,"column_start":28,"column_end":49},"kind":{"variant":"Impl","fields":[54]},"from":{"krate":0,"index":940},"to":{"krate":0,"index":946}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,114,101,115,116,114,105,99,116,46,114,115],"byte_start":81606,"byte_end":81634,"line_start":33,"line_end":33,"column_start":28,"column_end":56},"kind":{"variant":"Impl","fields":[55]},"from":{"krate":0,"index":944},"to":{"krate":0,"index":946}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,114,101,115,116,114,105,99,116,46,114,115],"byte_start":85335,"byte_end":85342,"line_start":157,"line_end":157,"column_start":17,"column_end":24},"kind":{"variant":"Impl","fields":[56]},"from":{"krate":0,"index":1268},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,114,101,115,116,114,105,99,116,46,114,115],"byte_start":86073,"byte_end":86080,"line_start":179,"line_end":179,"column_start":17,"column_end":24},"kind":{"variant":"Impl","fields":[57]},"from":{"krate":0,"index":1268},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,114,101,115,116,114,105,99,116,46,114,115],"byte_start":87593,"byte_end":87606,"line_start":225,"line_end":225,"column_start":35,"column_end":48},"kind":{"variant":"Impl","fields":[58]},"from":{"krate":0,"index":992},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,114,101,115,116,114,105,99,116,46,114,115],"byte_start":87968,"byte_end":87981,"line_start":238,"line_end":238,"column_start":35,"column_end":48},"kind":{"variant":"Impl","fields":[59]},"from":{"krate":0,"index":992},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,114,101,115,116,114,105,99,116,46,114,115],"byte_start":88366,"byte_end":88379,"line_start":251,"line_end":251,"column_start":35,"column_end":48},"kind":{"variant":"Impl","fields":[60]},"from":{"krate":0,"index":992},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,114,101,115,116,114,105,99,116,46,114,115],"byte_start":89113,"byte_end":89126,"line_start":273,"line_end":273,"column_start":25,"column_end":38},"kind":{"variant":"Impl","fields":[61]},"from":{"krate":0,"index":992},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,115,116,111,114,97,103,101,115,46,114,115],"byte_start":90292,"byte_end":90304,"line_start":19,"line_end":19,"column_start":35,"column_end":47},"kind":{"variant":"Impl","fields":[63]},"from":{"krate":0,"index":2518},"to":{"krate":0,"index":1350}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,115,116,111,114,97,103,101,115,46,114,115],"byte_start":90814,"byte_end":90826,"line_start":44,"line_end":44,"column_start":36,"column_end":48},"kind":{"variant":"Impl","fields":[64]},"from":{"krate":0,"index":2518},"to":{"krate":0,"index":1248}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,115,116,111,114,97,103,101,115,46,114,115],"byte_start":91038,"byte_end":91052,"line_start":51,"line_end":51,"column_start":35,"column_end":49},"kind":{"variant":"Impl","fields":[66]},"from":{"krate":0,"index":2524},"to":{"krate":0,"index":1350}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,115,116,111,114,97,103,101,115,46,114,115],"byte_start":91561,"byte_end":91575,"line_start":76,"line_end":76,"column_start":36,"column_end":50},"kind":{"variant":"Impl","fields":[67]},"from":{"krate":0,"index":2524},"to":{"krate":0,"index":1248}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,115,116,111,114,97,103,101,115,46,114,115],"byte_start":92032,"byte_end":92047,"line_start":92,"line_end":92,"column_start":35,"column_end":50},"kind":{"variant":"Impl","fields":[69]},"from":{"krate":0,"index":2530},"to":{"krate":0,"index":1350}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,115,116,111,114,97,103,101,115,46,114,115],"byte_start":93272,"byte_end":93287,"line_start":131,"line_end":131,"column_start":36,"column_end":51},"kind":{"variant":"Impl","fields":[70]},"from":{"krate":0,"index":2530},"to":{"krate":0,"index":1248}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,115,116,111,114,97,103,101,115,46,114,115],"byte_start":93485,"byte_end":93496,"line_start":137,"line_end":137,"column_start":35,"column_end":46},"kind":{"variant":"Impl","fields":[71]},"from":{"krate":0,"index":1068},"to":{"krate":0,"index":1350}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,115,116,111,114,97,103,101,115,46,114,115],"byte_start":93918,"byte_end":93929,"line_start":162,"line_end":162,"column_start":21,"column_end":32},"kind":{"variant":"Impl","fields":[72]},"from":{"krate":0,"index":1068},"to":{"krate":2,"index":2632}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,115,116,111,114,97,103,101,115,46,114,115],"byte_start":94230,"byte_end":94241,"line_start":176,"line_end":176,"column_start":36,"column_end":47},"kind":{"variant":"Impl","fields":[73]},"from":{"krate":0,"index":1068},"to":{"krate":0,"index":1248}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,115,116,111,114,97,103,101,115,46,114,115],"byte_start":94504,"byte_end":94514,"line_start":184,"line_end":184,"column_start":35,"column_end":45},"kind":{"variant":"Impl","fields":[75]},"from":{"krate":0,"index":2536},"to":{"krate":0,"index":1350}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,115,116,111,114,97,103,101,115,46,114,115],"byte_start":95593,"byte_end":95603,"line_start":227,"line_end":227,"column_start":36,"column_end":46},"kind":{"variant":"Impl","fields":[76]},"from":{"krate":0,"index":2536},"to":{"krate":0,"index":1248}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,116,114,97,99,107,46,114,115],"byte_start":97624,"byte_end":97631,"line_start":32,"line_end":32,"column_start":16,"column_end":23},"kind":{"variant":"Impl","fields":[77]},"from":{"krate":0,"index":1268},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,116,114,97,99,107,46,114,115],"byte_start":97926,"byte_end":97933,"line_start":44,"line_end":44,"column_start":16,"column_end":23},"kind":{"variant":"Impl","fields":[78]},"from":{"krate":0,"index":1268},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,101,110,116,114,121,46,114,115],"byte_start":98838,"byte_end":98845,"line_start":6,"line_end":6,"column_start":16,"column_end":23},"kind":{"variant":"Impl","fields":[79]},"from":{"krate":0,"index":1268},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,101,110,116,114,121,46,114,115],"byte_start":102570,"byte_end":102577,"line_start":126,"line_end":126,"column_start":41,"column_end":48},"kind":{"variant":"Impl","fields":[80]},"from":{"krate":0,"index":1170},"to":{"krate":0,"index":428}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,101,110,116,114,121,46,114,115],"byte_start":103747,"byte_end":103760,"line_start":168,"line_end":168,"column_start":20,"column_end":33},"kind":{"variant":"Impl","fields":[81]},"from":{"krate":0,"index":1186},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,101,110,116,114,121,46,114,115],"byte_start":104025,"byte_end":104038,"line_start":179,"line_end":179,"column_start":20,"column_end":33},"kind":{"variant":"Impl","fields":[82]},"from":{"krate":0,"index":1186},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,101,110,116,114,121,46,114,115],"byte_start":105089,"byte_end":105100,"line_start":213,"line_end":213,"column_start":20,"column_end":31},"kind":{"variant":"Impl","fields":[83]},"from":{"krate":0,"index":1202},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,101,110,116,114,121,46,114,115],"byte_start":105902,"byte_end":105914,"line_start":237,"line_end":237,"column_start":20,"column_end":32},"kind":{"variant":"Impl","fields":[84]},"from":{"krate":0,"index":1208},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":48526,"byte_end":48537,"line_start":45,"line_end":45,"column_start":19,"column_end":30},"kind":{"variant":"Impl","fields":[85]},"from":{"krate":0,"index":1216},"to":{"krate":0,"index":428}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":48815,"byte_end":48826,"line_start":59,"line_end":59,"column_start":37,"column_end":48},"kind":{"variant":"Impl","fields":[86]},"from":{"krate":0,"index":1216},"to":{"krate":0,"index":1248}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":48892,"byte_end":48903,"line_start":62,"line_end":62,"column_start":29,"column_end":40},"kind":{"variant":"Impl","fields":[87]},"from":{"krate":0,"index":1216},"to":{"krate":0,"index":380}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":49073,"byte_end":49083,"line_start":70,"line_end":70,"column_start":25,"column_end":35},"kind":{"variant":"Impl","fields":[88]},"from":{"krate":0,"index":1234},"to":{"krate":11,"index":494}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":49252,"byte_end":49265,"line_start":83,"line_end":83,"column_start":24,"column_end":37},"kind":{"variant":"Impl","fields":[89]},"from":{"krate":0,"index":2554},"to":{"krate":0,"index":1234}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":50798,"byte_end":50811,"line_start":130,"line_end":130,"column_start":20,"column_end":33},"kind":{"variant":"Impl","fields":[91]},"from":{"krate":0,"index":2554},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":51836,"byte_end":51849,"line_start":171,"line_end":171,"column_start":29,"column_end":42},"kind":{"variant":"Impl","fields":[92]},"from":{"krate":0,"index":2554},"to":{"krate":2,"index":1978}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":52238,"byte_end":52245,"line_start":186,"line_end":186,"column_start":16,"column_end":23},"kind":{"variant":"Impl","fields":[93]},"from":{"krate":0,"index":1268},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":52588,"byte_end":52595,"line_start":198,"line_end":198,"column_start":16,"column_end":23},"kind":{"variant":"Impl","fields":[94]},"from":{"krate":0,"index":1268},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":54277,"byte_end":54284,"line_start":248,"line_end":248,"column_start":16,"column_end":23},"kind":{"variant":"Impl","fields":[95]},"from":{"krate":0,"index":1268},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":56663,"byte_end":56670,"line_start":319,"line_end":319,"column_start":54,"column_end":61},"kind":{"variant":"Impl","fields":[96]},"from":{"krate":0,"index":1268},"to":{"krate":0,"index":1248}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":58546,"byte_end":58551,"line_start":393,"line_end":393,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":1706},"to":{"krate":0,"index":1340}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":58919,"byte_end":58920,"line_start":406,"line_end":406,"column_start":24,"column_end":25},"kind":{"variant":"Impl","fields":[97]},"from":{"krate":0,"index":621},"to":{"krate":0,"index":1340}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,115,116,111,114,97,103,101,47,109,111,100,46,114,115],"byte_start":59113,"byte_end":59123,"line_start":416,"line_end":416,"column_start":34,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":1340},"to":{"krate":0,"index":1350}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,99,111,109,112,46,114,115],"byte_start":127227,"byte_end":127230,"line_start":64,"line_end":64,"column_start":22,"column_end":25},"kind":"SuperTrait","from":{"krate":15,"index":12},"to":{"krate":0,"index":1430}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,99,111,109,112,46,114,115],"byte_start":127233,"byte_end":127238,"line_start":64,"line_end":64,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":1706},"to":{"krate":0,"index":1430}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,101,110,116,105,116,121,46,114,115],"byte_start":128998,"byte_end":129007,"line_start":62,"line_end":62,"column_start":6,"column_end":15},"kind":{"variant":"Impl","fields":[98]},"from":{"krate":0,"index":2560},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,101,110,116,105,116,121,46,114,115],"byte_start":133592,"byte_end":133608,"line_start":212,"line_end":212,"column_start":23,"column_end":39},"kind":{"variant":"Impl","fields":[99]},"from":{"krate":0,"index":1494},"to":{"krate":2,"index":4316}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,101,110,116,105,116,121,46,114,115],"byte_start":133883,"byte_end":133889,"line_start":224,"line_end":224,"column_start":6,"column_end":12},"kind":{"variant":"Impl","fields":[100]},"from":{"krate":0,"index":2570},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,101,110,116,105,116,121,46,114,115],"byte_start":134779,"byte_end":134790,"line_start":259,"line_end":259,"column_start":6,"column_end":17},"kind":{"variant":"Impl","fields":[101]},"from":{"krate":0,"index":2612},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,101,110,116,105,116,121,46,114,115],"byte_start":137665,"byte_end":137681,"line_start":349,"line_end":349,"column_start":10,"column_end":26},"kind":{"variant":"Impl","fields":[102]},"from":{"krate":0,"index":1536},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,101,110,116,105,116,121,46,114,115],"byte_start":138070,"byte_end":138086,"line_start":363,"line_end":363,"column_start":19,"column_end":35},"kind":{"variant":"Impl","fields":[103]},"from":{"krate":0,"index":1536},"to":{"krate":2,"index":1978}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,101,110,116,105,116,121,46,114,115],"byte_start":138564,"byte_end":138574,"line_start":378,"line_end":378,"column_start":21,"column_end":31},"kind":{"variant":"Impl","fields":[104]},"from":{"krate":0,"index":2622},"to":{"krate":2,"index":8426}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,101,110,116,105,116,121,46,114,115],"byte_start":138713,"byte_end":138723,"line_start":384,"line_end":384,"column_start":6,"column_end":16},"kind":{"variant":"Impl","fields":[105]},"from":{"krate":0,"index":2622},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,101,110,116,105,116,121,46,114,115],"byte_start":139645,"byte_end":139663,"line_start":421,"line_end":421,"column_start":6,"column_end":24},"kind":{"variant":"Impl","fields":[106]},"from":{"krate":0,"index":2660},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,101,110,116,105,116,121,46,114,115],"byte_start":140912,"byte_end":140923,"line_start":474,"line_end":474,"column_start":6,"column_end":17},"kind":{"variant":"Impl","fields":[107]},"from":{"krate":0,"index":2686},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,101,110,116,105,116,121,46,114,115],"byte_start":141318,"byte_end":141329,"line_start":491,"line_end":491,"column_start":24,"column_end":35},"kind":{"variant":"Impl","fields":[108]},"from":{"krate":0,"index":2686},"to":{"krate":2,"index":4510}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,108,97,122,121,46,114,115],"byte_start":143813,"byte_end":143818,"line_start":7,"line_end":7,"column_start":21,"column_end":26},"kind":{"variant":"Impl","fields":[109]},"from":{"krate":0,"index":1608},"to":{"krate":2,"index":2632}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,108,97,122,121,46,114,115],"byte_start":144359,"byte_end":144370,"line_start":25,"line_end":25,"column_start":22,"column_end":33},"kind":{"variant":"Impl","fields":[110]},"from":{"krate":0,"index":1614},"to":{"krate":0,"index":1664}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,108,97,122,121,46,114,115],"byte_start":145246,"byte_end":145250,"line_start":55,"line_end":55,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":1700},"to":{"krate":0,"index":1622}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,108,97,122,121,46,114,115],"byte_start":145253,"byte_end":145257,"line_start":55,"line_end":55,"column_start":34,"column_end":38},"kind":"SuperTrait","from":{"krate":2,"index":1712},"to":{"krate":0,"index":1622}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,108,97,122,121,46,114,115],"byte_start":145345,"byte_end":145346,"line_start":59,"line_end":59,"column_start":32,"column_end":33},"kind":{"variant":"Impl","fields":[111]},"from":{"krate":0,"index":695},"to":{"krate":0,"index":1622}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,108,97,122,121,46,114,115],"byte_start":146250,"byte_end":146260,"line_start":88,"line_end":88,"column_start":6,"column_end":16},"kind":{"variant":"Impl","fields":[113]},"from":{"krate":0,"index":2696},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,108,97,122,121,46,114,115],"byte_start":152495,"byte_end":152505,"line_start":319,"line_end":319,"column_start":15,"column_end":25},"kind":{"variant":"Impl","fields":[114]},"from":{"krate":0,"index":2696},"to":{"krate":2,"index":1978}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,109,111,100,46,114,115],"byte_start":107551,"byte_end":107561,"line_start":30,"line_end":30,"column_start":23,"column_end":33},"kind":{"variant":"Impl","fields":[115]},"from":{"krate":0,"index":1656},"to":{"krate":2,"index":4316}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,109,111,100,46,114,115],"byte_start":110332,"byte_end":110345,"line_start":137,"line_end":137,"column_start":22,"column_end":35},"kind":{"variant":"Impl","fields":[116]},"from":{"krate":0,"index":1670},"to":{"krate":0,"index":1664}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,109,111,100,46,114,115],"byte_start":111097,"byte_end":111110,"line_start":163,"line_end":163,"column_start":19,"column_end":32},"kind":{"variant":"Impl","fields":[117]},"from":{"krate":0,"index":1670},"to":{"krate":2,"index":1978}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,109,111,100,46,114,115],"byte_start":113502,"byte_end":113507,"line_start":246,"line_end":246,"column_start":6,"column_end":11},"kind":{"variant":"Impl","fields":[118]},"from":{"krate":0,"index":1682},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,109,111,100,46,114,115],"byte_start":125199,"byte_end":125204,"line_start":619,"line_end":619,"column_start":22,"column_end":27},"kind":{"variant":"Impl","fields":[119]},"from":{"krate":0,"index":1682},"to":{"krate":2,"index":1700}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,109,111,100,46,114,115],"byte_start":125230,"byte_end":125235,"line_start":621,"line_end":621,"column_start":22,"column_end":27},"kind":{"variant":"Impl","fields":[120]},"from":{"krate":0,"index":1682},"to":{"krate":2,"index":1712}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,109,111,100,46,114,115],"byte_start":125267,"byte_end":125272,"line_start":623,"line_end":623,"column_start":28,"column_end":33},"kind":{"variant":"Impl","fields":[121]},"from":{"krate":0,"index":1682},"to":{"krate":2,"index":2748}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,109,111,100,46,114,115],"byte_start":125358,"byte_end":125363,"line_start":629,"line_end":629,"column_start":20,"column_end":25},"kind":{"variant":"Impl","fields":[122]},"from":{"krate":0,"index":1682},"to":{"krate":0,"index":1430}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,112,101,99,115,45,48,46,49,52,46,51,47,115,114,99,47,119,111,114,108,100,47,109,111,100,46,114,115],"byte_start":125428,"byte_end":125433,"line_start":633,"line_end":633,"column_start":18,"column_end":23},"kind":{"variant":"Impl","fields":[123]},"from":{"krate":0,"index":1682},"to":{"krate":2,"index":2632}}]}