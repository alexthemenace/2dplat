{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.18.2","compilation":{"directory":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,108,111,99,107,45,48,46,49,46,54],"program":"/Users/Kumar/.rustup/toolchains/nightly-2019-02-27-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","block","/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/block-0.1.6/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=3d5400f87feb00e5","-C","extra-filename=-3d5400f87feb00e5","--out-dir","/Users/Kumar/personal/workspace/rust/mayhem-galactica/target/rls/debug/deps","-L","dependency=/Users/Kumar/personal/workspace/rust/mayhem-galactica/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/Kumar/.rustup/toolchains/nightly-2019-02-27-x86_64-apple-darwin"],"output":[47,85,115,101,114,115,47,75,117,109,97,114,47,112,101,114,115,111,110,97,108,47,119,111,114,107,115,112,97,99,101,47,114,117,115,116,47,109,97,121,104,101,109,45,103,97,108,97,99,116,105,99,97,47,116,97,114,103,101,116,47,114,108,115,47,100,101,98,117,103,47,100,101,112,115,47,108,105,98,98,108,111,99,107,45,51,100,53,52,48,48,102,56,55,102,101,98,48,48,101,53,46,114,109,101,116,97]},"prelude":{"crate_id":{"name":"block","disambiguator":[9432596809334761745,14223533195586980046]},"crate_root":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/block-0.1.6/src","external_crates":[{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/block-0.1.6/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[17365010580081952725,18206160307474953630]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/block-0.1.6/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[6760693024494354245,14002820984158080208]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/block-0.1.6/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[199464317358532175,14697293645914925506]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/block-0.1.6/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13558819658400235840,6800895293433658904]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/block-0.1.6/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[18425220944332119967,14239145101900690943]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/block-0.1.6/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10854247164472963508,11478657302719725741]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/block-0.1.6/src/lib.rs","num":7,"id":{"name":"rustc_demangle","disambiguator":[4168194895173621532,15234647754953002462]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/block-0.1.6/src/lib.rs","num":8,"id":{"name":"unwind","disambiguator":[12306654840912142307,10869972980572175885]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/block-0.1.6/src/lib.rs","num":9,"id":{"name":"backtrace_sys","disambiguator":[1531625639640313062,14514900902579754273]}},{"file_name":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/block-0.1.6/src/lib.rs","num":10,"id":{"name":"panic_unwind","disambiguator":[13209889598193010227,616765238597587583]}}],"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,108,111,99,107,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":12646,"line_start":1,"line_end":396,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,108,111,99,107,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":12646,"line_start":1,"line_end":396,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/Kumar/.cargo/registry/src/github.com-1ecc6299db9ec823/block-0.1.6/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":16},{"krate":0,"index":24},{"krate":0,"index":26},{"krate":0,"index":28},{"krate":0,"index":30},{"krate":0,"index":34},{"krate":0,"index":112},{"krate":0,"index":116},{"krate":0,"index":120},{"krate":0,"index":124},{"krate":0,"index":128},{"krate":0,"index":132},{"krate":0,"index":136},{"krate":0,"index":140},{"krate":0,"index":144},{"krate":0,"index":148},{"krate":0,"index":152},{"krate":0,"index":156},{"krate":0,"index":160},{"krate":0,"index":36},{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":44},{"krate":0,"index":46},{"krate":0,"index":52},{"krate":0,"index":56},{"krate":0,"index":62},{"krate":0,"index":66},{"krate":0,"index":72},{"krate":0,"index":164},{"krate":0,"index":172},{"krate":0,"index":180},{"krate":0,"index":188},{"krate":0,"index":196},{"krate":0,"index":204},{"krate":0,"index":212},{"krate":0,"index":220},{"krate":0,"index":228},{"krate":0,"index":236},{"krate":0,"index":244},{"krate":0,"index":252},{"krate":0,"index":260},{"krate":0,"index":74},{"krate":0,"index":76},{"krate":0,"index":80},{"krate":0,"index":84},{"krate":0,"index":88},{"krate":0,"index":92},{"krate":0,"index":98},{"krate":0,"index":102},{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":108}],"decl_id":null,"docs":"A Rust interface for Objective-C blocks.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":30},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,108,111,99,107,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1933,"byte_end":1947,"line_start":71,"line_end":71,"column_start":11,"column_end":25},"name":"BlockArguments","qualname":"::BlockArguments","value":"BlockArguments: Sized","parent":null,"children":[{"krate":0,"index":32}],"decl_id":null,"docs":" Types that may be used as the arguments to an Objective-C block.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,108,111,99,107,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2179,"byte_end":2189,"line_start":76,"line_end":76,"column_start":15,"column_end":25},"name":"call_block","qualname":"::BlockArguments::call_block","value":"fn <R> (self, block: *mut Block<Self, R>) -> R","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":" Calls the given `Block` with self as the arguments.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":38},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,108,111,99,107,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3747,"byte_end":3752,"line_start":119,"line_end":119,"column_start":12,"column_end":17},"name":"Block","qualname":"::Block","value":"Block {  }","parent":null,"children":[{"krate":0,"index":43}],"decl_id":null,"docs":" An Objective-C block that takes arguments of `A` when called and\n returns a value of `R`.\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,108,111,99,107,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3725,"byte_end":3735,"line_start":118,"line_end":118,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,108,111,99,107,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4215,"byte_end":4219,"line_start":130,"line_end":130,"column_start":19,"column_end":23},"name":"call","qualname":"<Block<A, R>>::call","value":"fn (&self, args: A) -> R","parent":null,"children":[],"decl_id":null,"docs":" Call self with the given arguments.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":44},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,108,111,99,107,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4358,"byte_end":4365,"line_start":136,"line_end":136,"column_start":12,"column_end":19},"name":"RcBlock","qualname":"::RcBlock","value":"RcBlock {  }","parent":null,"children":[{"krate":0,"index":53}],"decl_id":null,"docs":" A reference-counted Objective-C block.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,108,111,99,107,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4763,"byte_end":4766,"line_start":147,"line_end":147,"column_start":19,"column_end":22},"name":"new","qualname":"<RcBlock<A, R>>::new","value":"fn (ptr: *mut Block<A, R>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct an `RcBlock` for the given block without copying it.\n The caller must ensure the block has a +1 reference count.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,108,111,99,107,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4982,"byte_end":4986,"line_start":154,"line_end":154,"column_start":19,"column_end":23},"name":"copy","qualname":"<RcBlock<A, R>>::copy","value":"fn (ptr: *mut Block<A, R>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs an `RcBlock` by copying the given block.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":66},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,108,111,99,107,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5643,"byte_end":5660,"line_start":185,"line_end":185,"column_start":11,"column_end":28},"name":"IntoConcreteBlock","qualname":"::IntoConcreteBlock","value":"IntoConcreteBlock<A>: Sized","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":70}],"decl_id":null,"docs":" Types that may be converted into a `ConcreteBlock`.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":68},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,108,111,99,107,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5764,"byte_end":5767,"line_start":187,"line_end":187,"column_start":10,"column_end":13},"name":"Ret","qualname":"::IntoConcreteBlock::Ret","value":"type Ret;","parent":{"krate":0,"index":66},"children":[],"decl_id":null,"docs":" The return type of the resulting `ConcreteBlock`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,108,111,99,107,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5828,"byte_end":5847,"line_start":190,"line_end":190,"column_start":8,"column_end":27},"name":"into_concrete_block","qualname":"::IntoConcreteBlock::into_concrete_block","value":"fn (self) -> ConcreteBlock<A, Self::Ret, Self>","parent":{"krate":0,"index":66},"children":[],"decl_id":null,"docs":" Consumes self to create a `ConcreteBlock`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":74},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,108,111,99,107,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8083,"byte_end":8096,"line_start":237,"line_end":237,"column_start":12,"column_end":25},"name":"ConcreteBlock","qualname":"::ConcreteBlock","value":"ConcreteBlock {  }","parent":null,"children":[{"krate":0,"index":79},{"krate":0,"index":81},{"krate":0,"index":83}],"decl_id":null,"docs":" An Objective-C block whose size is known at compile time and may be\n constructed on the stack.\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,108,111,99,107,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8061,"byte_end":8071,"line_start":236,"line_end":236,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,108,111,99,107,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8497,"byte_end":8500,"line_start":248,"line_end":248,"column_start":12,"column_end":15},"name":"new","qualname":"<ConcreteBlock<A, R, F>>::new","value":"fn (closure: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `ConcreteBlock` with the given closure.\n When the block is called, it will return the value that results from\n calling the closure.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,108,111,99,107,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9399,"byte_end":9403,"line_start":275,"line_end":275,"column_start":12,"column_end":16},"name":"copy","qualname":"<ConcreteBlock<A, R, F>>::copy","value":"fn (self) -> RcBlock<A, R>","parent":null,"children":[],"decl_id":null,"docs":" Copy self onto the heap as an `RcBlock`.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,108,111,99,107,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3832,"byte_end":3837,"line_start":123,"line_end":123,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,108,111,99,107,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4415,"byte_end":4422,"line_start":140,"line_end":140,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":48},{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,108,111,99,107,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5152,"byte_end":5159,"line_start":160,"line_end":160,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":54}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,108,111,99,107,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5300,"byte_end":5307,"line_start":168,"line_end":168,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":58},{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,108,111,99,107,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5445,"byte_end":5452,"line_start":176,"line_end":176,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,108,111,99,107,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8230,"byte_end":8243,"line_start":243,"line_end":243,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,108,111,99,107,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8584,"byte_end":8597,"line_start":253,"line_end":253,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,108,111,99,107,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9297,"byte_end":9310,"line_start":273,"line_end":273,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,108,111,99,107,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9848,"byte_end":9861,"line_start":288,"line_end":288,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,108,111,99,107,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10089,"byte_end":10102,"line_start":297,"line_end":297,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":94},{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,108,111,99,107,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10288,"byte_end":10301,"line_start":305,"line_end":305,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,108,111,99,107,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10917,"byte_end":10932,"line_start":328,"line_end":328,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,108,111,99,107,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1949,"byte_end":1954,"line_start":71,"line_end":71,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":1706},"to":{"krate":0,"index":30}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,108,111,99,107,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3832,"byte_end":3837,"line_start":123,"line_end":123,"column_start":28,"column_end":33},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":38},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,108,111,99,107,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4415,"byte_end":4422,"line_start":140,"line_end":140,"column_start":12,"column_end":19},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":44},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,108,111,99,107,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5152,"byte_end":5159,"line_start":160,"line_end":160,"column_start":22,"column_end":29},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":44},"to":{"krate":2,"index":2598}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,108,111,99,107,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5300,"byte_end":5307,"line_start":168,"line_end":168,"column_start":22,"column_end":29},"kind":{"variant":"Impl","fields":[3]},"from":{"krate":0,"index":44},"to":{"krate":2,"index":1944}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,108,111,99,107,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5445,"byte_end":5452,"line_start":176,"line_end":176,"column_start":21,"column_end":28},"kind":{"variant":"Impl","fields":[4]},"from":{"krate":0,"index":44},"to":{"krate":2,"index":1978}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,108,111,99,107,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5665,"byte_end":5670,"line_start":185,"line_end":185,"column_start":33,"column_end":38},"kind":"SuperTrait","from":{"krate":2,"index":1706},"to":{"krate":0,"index":66}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,108,111,99,107,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8230,"byte_end":8243,"line_start":243,"line_end":243,"column_start":15,"column_end":28},"kind":{"variant":"Impl","fields":[5]},"from":{"krate":0,"index":74},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,108,111,99,107,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8584,"byte_end":8597,"line_start":253,"line_end":253,"column_start":15,"column_end":28},"kind":{"variant":"Impl","fields":[6]},"from":{"krate":0,"index":74},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,108,111,99,107,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9297,"byte_end":9310,"line_start":273,"line_end":273,"column_start":15,"column_end":28},"kind":{"variant":"Impl","fields":[7]},"from":{"krate":0,"index":74},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,108,111,99,107,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9848,"byte_end":9861,"line_start":288,"line_end":288,"column_start":25,"column_end":38},"kind":{"variant":"Impl","fields":[8]},"from":{"krate":0,"index":74},"to":{"krate":2,"index":2598}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,108,111,99,107,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10089,"byte_end":10102,"line_start":297,"line_end":297,"column_start":25,"column_end":38},"kind":{"variant":"Impl","fields":[9]},"from":{"krate":0,"index":74},"to":{"krate":2,"index":1944}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,108,111,99,107,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10288,"byte_end":10301,"line_start":305,"line_end":305,"column_start":28,"column_end":41},"kind":{"variant":"Impl","fields":[10]},"from":{"krate":0,"index":74},"to":{"krate":2,"index":1962}},{"span":{"file_name":[47,85,115,101,114,115,47,75,117,109,97,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,108,111,99,107,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10917,"byte_end":10932,"line_start":328,"line_end":328,"column_start":9,"column_end":24},"kind":{"variant":"Impl","fields":[11]},"from":{"krate":0,"index":106},"to":{"krate":4294967295,"index":4294967295}}]}